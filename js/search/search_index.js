var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AddSubscription.html",[0,0.766,1,2.386]],["body/interfaces/AddSubscription.html",[1,3.19,2,0.88,3,0.88,4,0.628,5,3.561,6,0.88,7,3.561,8,2.914,9,2.251,10,4.058,11,2.647,12,4.058,13,4.813,14,4.856,15,4.813,16,2.882,17,1.938,18,1.567,19,0.748,20,0.972,21,4.813,22,5.196,23,2.251,24,4.813,25,1.804,26,0.025,27,1.567,28,0.516,29,1.363,30,1.024,31,1.938,32,0.023,33,0.023]],["title/interfaces/BackendFactoryInput.html",[0,0.766,34,2.386]],["body/interfaces/BackendFactoryInput.html",[2,0.726,3,0.726,4,0.518,6,0.726,19,0.617,26,0.027,28,0.548,29,1.448,32,0.02,33,0.02,34,3.388,35,2.632,36,5.967,37,3.782,38,3.746,39,5.111,40,1.785,41,2.118,42,1.448,43,4.766,44,2.45,45,3.073,46,1.6,47,2.939,48,3.972,49,4.31,50,3.349,51,2.939,52,3.972,53,3.972,54,1.489,55,3.972,56,3.972,57,3.972,58,1.387,59,3.388,60,0.567,61,3.349,62,3.972,63,2.118,64,5.111,65,4.092,66,1.6,67,4.31,68,4.31,69,1.722,70,2.939,71,1.916,72,4.182,73,1.349,74,2.215,75,1.6,76,1.552,77,2.811,78,3.349,79,3.349,80,2.388,81,2.632,82,3.349,83,3.349,84,3.349]],["title/interfaces/BackendInput.html",[0,0.766,85,2.386]],["body/interfaces/BackendInput.html",[2,0.824,3,0.824,4,0.588,6,0.824,19,0.701,26,0.025,28,0.642,29,1.769,32,0.022,33,0.022,35,2.987,37,3.335,38,2.987,42,1.848,44,2.707,46,1.815,58,1.933,60,0.643,65,3.668,71,2.074,72,4.432,73,1.19,74,2.399,75,1.815,76,1.681,77,3.044,78,3.801,79,3.801,80,2.71,81,2.987,82,3.801,83,3.801,84,3.801,85,2.987,86,4.507,87,2.281,88,1.954,89,3.801,90,3.801,91,4.507,92,3.801,93,3.801]],["title/interfaces/ConnectionBase.html",[0,0.766,94,1.822]],["body/interfaces/ConnectionBase.html",[2,0.589,3,0.589,4,0.42,6,0.589,8,2.249,9,1.506,14,2.716,16,2.078,17,1.297,18,1.049,19,0.501,20,0.859,22,3.748,23,1.506,25,1.907,26,0.027,27,1.447,28,0.588,29,1.259,30,1.083,31,2.05,32,0.018,33,0.018,41,1.207,45,2.672,58,1.125,60,0.46,63,2.158,66,1.297,76,1.35,94,1.63,95,1.936,96,1.936,97,3.221,98,1.936,99,0.85,100,1.907,101,1.666,102,3.017,103,3.221,104,3.221,105,1.63,106,2.716,107,3.221,108,1.125,109,2.716,110,3.221,111,1.506,112,2.249,113,2.716,114,2.799,115,2.444,116,1.936,117,2.383,118,3.221,119,1.936,120,3.221,121,2.716,122,1.936,123,3.221,124,1.396,125,2.078,126,3.221,127,2.716,128,4.445,129,3.221,130,1.35,131,3.221,132,3.221,133,3.221,134,2.444,135,2.716,136,1.771,137,2.716,138,1.771,139,3.221,140,3.221,141,3.221,142,2.716,143,3.221,144,2.716,145,3.221,146,3.221,147,0.544,148,1.125,149,1.79,150,2.716,151,1.771,152,3.221,153,2.716,154,2.057,155,2.716,156,3.221,157,2.383,158,1.936,159,2.716,160,3.221,161,2.135,162,3.221,163,3.221,164,3.221,165,1.63,166,2.135,167,3.221,168,3.221,169,1.207,170,2.135,171,1.506,172,2.383,173,3.221,174,2.078,175,2.135,176,2.135,177,3.221,178,2.135,179,3.221,180,2.716,181,3.221,182,0.978,183,2.716,184,3.221,185,3.289,186,3.221,187,1.297,188,1.936,189,3.221,190,1.396,191,1.297,192,1.771,193,2.716,194,2.135,195,2.716,196,1.771,197,1.506,198,3.221,199,1.506,200,3.221,201,1.506,202,2.716,203,3.221,204,2.383,205,2.135,206,1.771,207,1.63,208,3.221,209,3.221]],["title/modules/DndModule.html",[87,1.822,210,2.165]],["body/modules/DndModule.html",[3,0.908,4,0.648,20,0.839,25,1.862,26,0.026,27,1.617,28,0.533,29,1.407,30,1.057,32,0.023,33,0.023,34,3.889,35,3.292,70,3.675,85,3.889,87,2.514,211,3.292,212,3.675,213,5.266,214,4.188,215,4.967,216,4.967,217,4.967]],["title/injectables/DndService.html",[108,1.257,218,2.386]],["body/injectables/DndService.html",[1,3.84,3,0.541,4,0.386,5,2.189,6,0.765,7,2.189,8,2.46,9,2.934,17,1.687,19,0.46,20,0.707,23,1.383,25,2.172,26,0.027,27,1.583,28,0.693,29,1.377,30,1.034,32,0.017,33,0.017,40,1.033,41,1.109,45,2.518,60,0.422,75,1.191,99,0.781,100,1.57,102,1.627,108,1.033,111,1.958,114,1.627,119,1.778,124,1.815,125,2.609,147,0.893,169,1.822,182,1.272,185,3.099,187,1.191,191,2.333,197,1.958,199,1.958,206,1.627,207,1.497,219,2.958,220,1.778,221,1.186,222,2.494,223,1.961,224,2.958,225,2.494,226,2.958,227,2.958,228,2.494,229,1.961,230,1.282,231,2.958,232,3.099,233,2.958,234,2.273,235,2.958,236,1.282,237,2.958,238,2.119,239,1.191,240,1.627,241,2.958,242,2.189,243,2.958,244,2.189,245,1.778,246,1.03,247,2.494,248,2.958,249,2.958,250,1.778,251,2.958,252,2.958,253,2.958,254,5.794,255,2.907,256,2.08,257,2.472,258,2.958,259,2.292,260,2.776,261,1.463,262,3.597,263,2.494,264,1.815,265,2.119,266,1.958,267,2.518,268,0.959,269,1.627,270,1.778,271,1.463,272,2.958,273,1.497,274,2.958,275,2.494,276,2.494,277,1.383,278,3.099,279,2.189,280,2.494,281,2.494,282,2.958,283,2.958,284,1.961,285,2.958,286,1.497,287,2.958,288,1.961,289,1.106,290,1.109,291,2.958,292,2.303,293,4.188,294,2.776,295,1.815,296,3.531,297,3.531,298,2.958,299,2.958,300,2.958,301,2.776,302,1.497]],["title/interfaces/DragLayer.html",[0,0.766,255,1.98]],["body/interfaces/DragLayer.html",[2,0.511,3,0.511,4,0.365,6,0.511,18,0.911,19,0.435,20,0.679,25,1.509,26,0.026,27,0.911,28,0.628,29,0.792,30,0.595,31,1.127,32,0.016,33,0.016,40,1.907,42,1.547,46,1.127,47,2.07,54,1.049,58,1.406,60,0.736,63,1.509,73,1.244,75,1.127,80,1.682,94,2.037,95,1.682,96,1.682,101,2.047,102,1.539,112,1.416,130,1.222,142,2.359,144,2.359,147,1.13,148,1.986,149,1.898,151,1.539,154,1.767,157,2.07,158,2.42,171,1.308,182,0.85,190,1.213,192,1.539,195,2.359,196,1.539,197,1.882,199,1.308,207,1.416,221,1.335,230,1.213,239,1.127,244,2.07,255,2.213,259,2.043,268,0.64,271,0.977,284,3.124,288,1.854,303,1.539,304,2.978,305,1.049,306,3.488,307,2.037,308,2.798,309,2.856,310,2.798,311,2.07,312,2.798,313,1.682,314,1.854,315,1.854,316,1.213,317,2.798,318,2.798,319,3.394,320,3.62,321,2.798,322,2.359,323,1.854,324,5.292,325,2.07,326,4.025,327,4.208,328,2.798,329,1.745,330,2.42,331,1.539,332,2.037,333,1.854,334,2.798,335,1.854,336,2.359,337,2.798,338,2.798,339,2.798,340,2.798,341,2.07,342,2.798,343,1.308,344,1.682,345,2.798,346,1.127,347,2.834,348,2.07,349,1.308,350,2.043,351,1.854,352,1.854,353,2.359,354,1.682,355,2.978,356,1.854,357,2.359,358,2.798,359,2.359,360,2.07,361,2.798,362,1.049,363,1.682,364,1.127,365,2.07,366,2.798,367,2.07,368,2.798,369,2.798,370,4.025,371,2.798,372,2.798,373,2.359,374,2.42,375,2.798,376,1.539,377,2.359,378,2.07,379,1.416,380,2.798,381,2.07,382,2.798,383,2.359,384,1.539,385,2.798,386,1.539,387,1.854,388,2.798,389,2.07,390,2.798,391,2.798,392,2.668,393,1.682,394,1.682,395,2.07,396,1.682,397,2.07,398,1.854,399,2.359,400,2.359,401,2.798,402,2.798,403,2.798,404,2.798,405,3.394,406,1.854,407,2.359,408,1.308,409,2.798]],["title/interfaces/DragLayerMonitor.html",[0,0.766,347,2.165]],["body/interfaces/DragLayerMonitor.html",[2,0.908,3,0.908,4,0.648,6,0.908,18,1.617,19,0.772,20,0.991,26,0.025,30,1.057,32,0.023,33,0.023,74,2.153,130,1.508,147,0.839,174,2.92,255,2.732,346,2.001,347,2.986,410,4.188,411,3.292,412,2.153,413,2.514,414,2.001,415,2.514,416,3.675,417,2.732,418,3.292]],["title/directives/DragPreviewDirective.html",[273,1.822,419,2.386]],["body/directives/DragPreviewDirective.html",[3,0.844,4,0.602,6,0.844,18,1.503,19,0.718,20,0.948,26,0.026,28,0.602,30,0.982,31,1.86,32,0.022,33,0.022,40,1.612,42,1.308,44,2.001,147,0.948,256,2.114,261,1.612,268,1.057,271,1.961,295,2.001,307,2.842,309,2.626,314,3.06,419,3.06,420,2.001,421,3.06,422,2.001,423,2.776,424,2.776,425,3.416,426,3.416,427,3.416,428,3.416,429,3.06,430,6.053,431,3.639,432,3.377,433,3.329]],["title/interfaces/DragPreviewOptions.html",[0,0.766,433,1.98]],["body/interfaces/DragPreviewOptions.html",[2,0.584,3,0.584,4,0.417,6,0.584,19,0.497,26,0.024,28,0.616,29,1.806,32,0.018,33,0.018,44,1.386,46,1.781,71,1.657,73,0.844,74,1.917,112,1.618,116,1.922,147,1.076,175,2.119,182,1.343,191,1.781,201,2.067,221,0.905,256,1.116,268,1.012,271,1.91,277,1.495,286,2.768,304,2.365,305,2.226,309,2.981,313,2.658,314,2.119,320,2.119,329,1.386,343,1.495,349,2.067,350,1.917,367,2.365,414,2.041,417,2.432,433,1.758,434,2.365,435,5.469,436,5.469,437,4.274,438,5.469,439,5.469,440,3.226,441,3.625,442,4.047,443,4.612,444,5.469,445,3.266,446,3.272,447,4.421,448,3.197,449,4.421,450,4.421,451,4.504,452,4.612,453,2.695,454,4.421,455,4.421,456,3.197,457,4.274,458,2.365,459,2.365,460,3.197,461,2.365,462,2.365,463,1.618,464,1.922,465,3.197,466,3.197,467,3.197,468,1.618,469,2.695,470,4.421,471,3.197,472,2.695,473,3.197,474,3.197,475,3.197,476,3.197,477,3.197,478,1.922,479,2.365,480,4.421,481,1.198,482,3.197,483,1.758,484,3.197,485,3.197,486,1.758,487,2.119,488,2.931,489,2.432,490,3.728]],["title/interfaces/DragSource.html",[0,0.766,256,1.257]],["body/interfaces/DragSource.html",[2,0.542,3,0.542,4,0.386,6,0.542,9,2.611,17,1.193,18,0.965,19,0.461,20,0.822,25,1.824,26,0.027,27,1.723,28,0.681,29,1.378,30,1.188,31,1.193,32,0.017,33,0.017,41,1.111,42,0.839,44,2.293,46,1.689,54,1.824,58,1.035,60,0.694,63,1.572,94,1.499,95,1.782,96,1.782,99,1.397,100,1.572,108,1.035,113,2.499,124,1.284,136,2.306,138,1.63,147,0.822,148,1.035,154,1.111,182,0.9,221,0.839,230,1.818,234,2.275,236,1.284,246,0.729,256,2.024,257,1.386,259,1.284,260,1.964,262,3.103,264,2.293,265,2.122,266,1.193,268,1.114,270,1.782,271,1.464,277,2.275,289,0.782,294,1.964,309,1.386,313,3.485,315,2.779,374,3.181,376,1.63,379,1.499,384,1.63,386,1.63,420,1.818,422,2.109,431,2.521,433,2.306,440,1.499,468,2.122,481,1.824,491,2.193,492,1.782,493,2.499,494,2.193,495,2.193,496,2.462,497,2.499,498,1.782,499,3.536,500,3.536,501,4.103,502,4.103,503,2.963,504,2.779,505,2.779,506,2.779,507,2.521,508,2.963,509,1.63,510,2.193,511,2.193,512,2.963,513,2.193,514,3.536,515,3.536,516,3.103,517,3.536,518,3.536,519,2.963,520,2.521,521,2.499,522,1.964,523,2.963,524,3.536,525,2.499,526,1.964,527,2.193,528,2.521,529,2.499,530,1.964,531,2.193,532,2.963,533,2.963,534,4.193,535,1.782,536,2.963,537,2.963,538,2.963,539,2.963,540,2.963,541,2.963,542,2.963,543,2.963,544,2.963,545,2.963,546,2.963,547,1.499]],["title/directives/DragSourceDirective.html",[273,1.822,548,2.386]],["body/directives/DragSourceDirective.html",[3,0.773,4,0.551,6,0.773,18,1.377,19,0.657,20,0.898,26,0.027,28,0.675,30,0.899,31,1.703,32,0.021,33,0.021,40,1.476,42,1.197,44,1.833,60,0.759,74,1.833,80,2.542,99,1.116,100,1.585,134,2.325,187,1.703,221,1.197,256,2.277,261,1.476,264,1.833,265,2.139,268,0.968,271,1.476,295,1.833,305,1.585,307,2.691,309,1.977,329,1.833,414,1.703,417,2.325,420,1.833,421,2.802,422,1.833,425,3.128,426,3.128,427,3.128,428,3.128,429,2.802,431,3.498,432,3.198,437,3.565,487,2.802,489,2.325,496,2.691,520,3.498,548,2.802,549,5.319,550,5.319,551,3.565,552,3.565,553,1.703,554,3.565,555,4.228,556,4.228,557,4.228]],["title/interfaces/DragSourceMonitor.html",[0,0.766,558,2.165]],["body/interfaces/DragSourceMonitor.html",[2,0.653,3,0.653,4,0.466,6,0.653,17,1.439,18,1.163,19,0.555,20,0.906,26,0.026,30,1.423,32,0.019,33,0.019,60,0.51,66,1.92,74,2.326,75,1.439,88,1.548,101,1.339,105,1.807,130,1.085,147,0.906,174,2.678,187,1.439,191,1.439,197,2.229,220,2.147,238,1.807,246,1.32,261,1.665,266,1.439,267,2.147,268,0.818,277,1.67,289,1.734,290,1.787,346,1.439,381,2.643,386,1.964,397,2.643,411,2.367,412,1.548,413,1.807,414,2.472,415,2.413,416,3.528,417,2.622,418,2.367,423,2.147,459,2.643,463,1.807,486,1.964,507,2.867,526,2.367,535,2.147,558,2.147,559,3.012,560,3.572,561,4.637,562,4.829,563,4.525,564,3.012,565,2.622,566,1.67,567,3.572,568,3.012,569,1.807,570,3.572,571,3.572,572,3.012,573,2.643,574,3.572,575,3.012,576,3.012,577,2.643,578,3.443,579,3.227,580,2.367,581,2.867,582,3.012,583,2.643,584,3.012,585,3.012,586,3.012,587,3.012,588,3.012,589,2.643,590,3.012,591,3.012,592,3.16,593,2.643,594,3.012]],["title/interfaces/DragSourceOptions.html",[0,0.766,520,2.165]],["body/interfaces/DragSourceOptions.html",[2,0.82,3,0.82,4,0.585,6,0.82,19,0.697,26,0.027,28,0.481,29,1.562,32,0.022,33,0.022,42,1.27,60,0.64,71,2.068,73,1.184,75,1.806,112,2.791,182,1.362,256,1.927,264,1.943,292,2.466,305,1.681,325,3.318,350,1.943,378,3.318,393,2.696,434,3.318,487,2.972,488,3.656,520,2.696,595,4.484,596,5.039,597,3.961,598,4.243,599,4.652,600,4.652,601,4.484,602,2.972,603,4.484,604,3.781,605,4.484,606,4.484,607,4.484,608,4.484,609,3.781,610,4.484,611,4.484]],["title/interfaces/DragSourceSpec.html",[0,0.766,266,1.45]],["body/interfaces/DragSourceSpec.html",[0,0.944,2,0.461,3,0.461,4,0.329,6,0.461,17,1.502,18,0.821,19,0.392,20,0.63,25,1.963,26,0.027,27,1.598,28,0.649,29,1.76,30,1.114,31,1.015,32,0.015,33,0.018,42,0.714,54,0.945,58,0.88,60,0.36,66,2.109,69,1.093,71,0.945,74,1.617,75,1.015,81,1.671,88,1.617,98,1.515,108,0.88,114,1.386,115,1.386,125,1.179,130,1.723,134,1.386,136,1.386,147,0.828,149,1.015,154,0.945,161,1.671,165,1.275,174,1.744,182,1.133,190,2.127,197,1.179,205,1.671,221,1.65,234,1.179,242,1.865,246,0.917,247,2.125,250,2.242,259,1.617,261,1.302,264,1.093,266,1.015,267,2.242,268,1.255,278,1.865,284,2.472,288,1.671,289,1.383,290,1.398,295,1.093,302,1.275,303,1.386,305,1.664,311,1.865,316,1.617,346,1.502,348,1.865,349,1.179,350,1.924,362,0.945,384,3.015,387,1.671,398,1.671,408,1.744,412,1.617,414,1.015,415,1.275,440,1.887,461,1.865,462,1.865,463,1.275,478,1.515,481,0.945,483,1.386,492,1.515,495,1.865,509,1.386,530,1.671,535,1.515,547,2.65,553,1.015,558,3.691,561,2.76,566,2.294,569,1.275,578,1.515,579,2.95,581,1.515,594,2.125,596,2.125,597,2.472,598,1.671,609,2.125,612,2.125,613,1.865,614,1.865,615,1.386,616,1.515,617,1.671,618,2.125,619,1.865,620,2.52,621,2.52,622,2.52,623,2.52,624,2.125,625,1.865,626,2.52,627,3.145,628,4.439,629,2.52,630,3.73,631,3.73,632,2.125,633,1.671,634,1.865,635,2.52,636,3.73,637,2.52,638,2.52,639,2.52,640,2.52,641,2.52,642,2.52,643,2.125,644,1.671,645,2.52,646,2.125,647,2.125,648,2.52,649,2.472,650,1.865,651,2.52,652,1.865,653,2.52,654,2.125,655,2.125,656,2.125,657,2.52,658,2.125,659,2.52,660,2.52,661,2.52,662,2.125,663,2.52,664,2.52,665,2.52,666,1.671,667,2.52,668,1.386,669,2.125,670,2.52,671,2.52,672,2.52,673,2.52,674,1.386,675,3.73,676,1.865,677,2.52,678,2.125,679,2.52,680,2.125,681,2.52,682,1.865,683,2.125,684,2.52,685,2.125,686,2.52,687,2.76,688,2.52,689,1.671,690,1.671,691,2.472,692,2.125,693,1.865,694,1.386,695,2.125,696,2.125,697,2.125,698,1.865,699,2.125]],["title/interfaces/DropTarget.html",[0,0.766,257,1.683]],["body/interfaces/DropTarget.html",[2,0.705,3,0.705,4,0.503,6,0.705,7,2.852,9,2.605,17,1.552,18,1.255,19,0.599,20,0.846,25,1.879,26,0.025,27,1.632,28,0.685,29,1.42,30,1.255,31,1.552,32,0.02,33,0.02,42,1.092,46,1.552,54,1.445,58,1.346,60,0.55,63,1.445,69,1.671,73,1.018,94,1.951,95,2.318,96,2.318,99,1.471,100,1.445,101,1.445,108,1.346,111,1.802,136,2.12,138,2.12,147,0.651,148,1.346,154,1.879,230,1.671,234,1.802,236,1.671,246,1.37,256,1.751,257,2.605,260,2.555,269,2.12,270,2.318,271,1.751,277,2.605,289,1.471,294,2.555,301,3.323,313,3.35,376,2.12,384,2.12,420,1.671,422,2.173,468,1.951,481,1.879,496,2.537,498,2.318,501,4.698,504,2.555,505,2.555,506,2.555,507,2.318,514,3.25,515,3.25,516,2.852,517,3.25,518,3.25,521,3.25,522,2.555,524,4.227,525,3.25,526,2.555,527,2.852,528,2.318,569,1.951,674,2.12,700,5.013,701,5.013,702,3.855,703,3.855]],["title/directives/DropTargetDirective.html",[273,1.822,704,2.664]],["body/directives/DropTargetDirective.html",[3,0.769,4,0.549,6,0.769,11,2.916,18,1.37,19,0.654,20,0.895,25,1.577,26,0.026,27,1.37,28,0.674,29,1.191,30,1.128,31,2.135,32,0.021,33,0.021,60,0.6,80,2.529,99,1.111,100,1.577,134,2.314,187,1.694,221,1.191,246,1.035,257,3,271,1.469,301,4.04,360,3.923,420,1.824,421,2.788,422,1.824,425,3.113,426,3.113,427,3.113,428,3.113,429,2.788,431,3.49,432,3.188,496,2.683,551,3.547,552,3.547,553,1.694,554,3.547,704,3.113,705,6.095,706,6.095,707,5.302,708,5.302,709,5.302,710,4.471,711,5.302,712,5.302,713,4.207,714,4.207]],["title/interfaces/DropTargetMonitor.html",[0,0.766,715,2.165]],["body/interfaces/DropTargetMonitor.html",[2,0.657,3,0.657,4,0.469,6,0.657,17,1.448,18,1.17,19,0.559,20,0.909,25,1.347,26,0.026,27,1.17,28,0.577,29,1.018,30,1.417,32,0.019,33,0.019,44,1.558,60,0.513,66,1.448,74,2.334,75,1.928,88,1.558,101,1.347,130,1.092,147,0.808,176,3.173,178,3.805,191,1.448,197,2.239,238,1.819,246,1.412,261,1.672,262,2.66,267,2.161,277,1.681,289,1.767,290,1.795,295,1.558,346,1.448,349,1.681,362,1.347,386,1.977,411,2.382,412,1.558,413,1.819,414,2.476,415,2.423,416,3.543,417,2.633,418,2.382,423,2.161,459,2.66,468,1.819,507,2.879,526,2.382,535,2.161,562,4.841,563,4.54,564,3.031,565,1.977,577,2.66,578,3.452,580,2.382,581,2.879,582,3.031,583,2.66,584,3.031,585,4.037,586,3.031,587,3.031,588,3.031,589,3.984,590,3.031,591,3.031,592,2.382,593,3.543,668,1.977,715,2.161,716,3.031,717,3.595,718,3.595,719,4.788,720,3.595,721,2.66,722,2.66,723,3.595,724,3.031,725,2.66,726,3.595]],["title/interfaces/DropTargetSpec.html",[0,0.766,111,1.683]],["body/interfaces/DropTargetSpec.html",[2,0.615,3,0.615,4,0.439,6,0.615,17,2.251,19,0.524,20,0.774,25,2.192,26,0.025,27,1.696,28,0.627,29,1.804,30,1.189,31,1.845,32,0.018,33,0.018,60,0.48,66,1.845,69,1.986,73,0.889,74,1.46,75,1.845,81,3.037,88,1.986,98,2.024,105,1.704,108,1.176,111,1.575,114,1.852,115,2.52,119,2.024,125,1.575,130,1.582,134,1.852,147,0.568,149,1.356,165,1.704,178,3.452,180,2.839,182,1.023,190,1.46,197,2.435,205,2.232,221,1.475,246,1.484,250,2.024,259,2.423,261,1.6,266,1.845,267,2.024,268,1.049,278,2.492,289,1.63,290,1.262,305,1.262,316,1.986,319,2.839,332,1.704,346,1.356,356,2.232,362,1.262,393,2.024,408,1.575,412,1.46,414,1.356,417,1.852,418,2.232,424,2.024,461,2.492,468,1.704,507,2.024,553,1.356,565,1.852,566,2.143,578,2.024,579,2.024,580,2.232,581,2.024,589,3.39,593,2.492,613,2.492,614,2.492,615,1.852,616,2.755,617,2.232,644,3.452,662,2.839,690,2.232,691,3.037,692,2.839,693,2.492,694,1.852,695,2.839,696,2.839,697,2.839,698,2.492,699,2.839,715,3.777,727,2.839,728,3.367,729,2.839,730,3.367,731,3.367,732,2.232,733,2.839,734,2.839,735,3.367,736,3.367,737,3.367,738,3.367,739,3.367,740,3.367,741,2.839,742,3.367,743,3.367,744,2.839]],["title/interfaces/MonitorBase.html",[0,0.766,413,1.822]],["body/interfaces/MonitorBase.html",[2,0.656,3,0.656,4,0.468,6,0.656,19,0.558,20,0.908,26,0.027,28,0.385,30,1.423,32,0.019,33,0.019,99,1.262,130,1.089,136,1.973,147,0.807,191,2.695,229,2.377,259,2.848,264,1.555,265,1.815,266,1.445,268,0.821,271,1.67,332,2.419,349,2.933,350,2.797,351,2.377,354,2.875,355,4.421,413,1.815,415,1.815,445,3.286,446,4.244,745,3.025,746,3.025,747,2.377,748,5.378,749,5.378,750,5.378,751,5.378,752,5.378,753,5.378,754,5.378,755,5.975,756,4.837,757,3.587,758,4.781,759,4.535,760,3.587,761,2.654,762,4.781,763,3.587,764,3.025]],["title/interfaces/Offset.html",[0,0.766,445,1.98]],["body/interfaces/Offset.html",[2,0.895,3,0.895,4,0.638,6,0.895,19,0.761,26,0.025,28,0.666,32,0.023,33,0.023,71,2.181,88,2.122,400,5.234,440,3.25,445,2.692,765,3.623,766,3.623,767,4.896,768,4.896,769,5.416,770,5.416]],["title/changelog.html",[351,2.033,771,2.587,772,3.068]],["body/changelog.html",[4,0.532,11,3.556,16,1.906,26,0.021,32,0.021,33,0.021,73,1.076,124,1.767,149,1.642,161,2.702,239,2.563,240,3.499,316,1.767,420,1.767,566,2.976,773,4.076,774,4.076,775,4.076,776,3.437,777,4.076,778,3.437,779,3.437,780,4.076,781,3.437,782,6.224,783,6.025,784,5.197,785,4.382,786,5.197,787,5.197,788,4.076,789,4.076,790,4.076,791,4.076,792,4.076,793,3.437,794,3.437,795,4.076,796,3.437,797,4.076,798,3.437,799,4.076,800,4.076,801,4.076,802,5.721,803,6.363,804,4.218,805,4.076,806,4.076,807,4.076,808,4.076,809,5.721,810,5.721,811,4.076,812,4.076,813,4.076,814,4.076,815,4.076]],["title/coverage.html",[816,4.042]],["body/coverage.html",[0,1.427,1,2.263,4,0.445,5,3.423,26,0.027,28,0.366,32,0.018,33,0.018,34,2.263,35,3.066,41,1.28,85,2.263,94,1.728,95,3.38,96,3.38,108,1.192,111,1.597,188,3.725,218,2.263,246,0.84,255,1.878,256,1.192,257,1.597,266,1.375,268,0.782,273,2.654,347,2.053,410,2.879,411,3.477,413,1.728,419,2.263,421,3.477,433,1.878,434,3.423,445,1.878,520,2.053,548,2.263,558,2.053,559,2.879,612,2.879,613,3.423,704,2.526,715,2.053,716,2.879,727,2.879,745,2.879,746,2.879,765,2.526,766,2.526,816,2.879,817,2.263,818,3.414,819,3.414,820,5.779,821,5.876,822,5.623,823,5.623,824,3.414,825,3.414,826,3.414,827,3.414,828,3.414,829,3.414,830,3.414,831,4.625,832,3.414,833,5.224,834,2.879,835,6.195,836,2.879,837,2.879,838,2.879,839,2.879,840,2.526,841,2.879,842,3.414,843,3.414]],["title/dependencies.html",[804,2.033,844,3.623]],["body/dependencies.html",[8,2.528,26,0.027,32,0.023,33,0.023,76,1.517,77,2.748,794,4.213,844,4.965,845,4.996,846,4.996,847,4.996,848,4.996,849,5.888,850,3.697,851,4.996,852,4.996,853,4.996]],["title/index.html",[19,0.477,351,2.033,771,2.587]],["body/index.html",[2,0.455,4,0.324,16,1.163,26,0.015,32,0.015,33,0.015,38,2.448,40,1.29,42,1.381,47,1.84,54,1.384,58,0.869,60,0.629,69,1.601,73,0.657,76,1.981,77,2.422,90,2.097,99,0.657,112,1.259,115,1.368,134,2.031,147,0.823,151,1.368,154,0.932,158,1.495,165,1.259,169,2.322,170,1.649,171,2.279,182,0.755,187,1.487,190,2.113,196,1.368,201,1.163,206,1.368,220,2.22,221,0.704,223,1.649,236,1.078,239,2.388,240,2.031,246,0.612,280,2.097,284,2.448,288,1.649,289,1.287,292,2.031,303,2.422,304,1.84,307,2.229,316,1.909,323,1.649,331,1.368,341,1.84,343,1.727,352,1.649,353,3.114,362,1.384,363,2.648,379,1.259,387,1.649,394,1.495,395,1.84,415,1.259,441,1.649,452,2.097,458,1.84,462,1.84,463,1.259,478,1.495,479,1.84,481,1.384,486,2.031,493,2.097,516,1.84,553,2.275,566,1.163,569,1.869,581,1.495,615,1.368,619,1.84,624,2.097,625,1.84,632,2.097,633,1.649,634,1.84,647,2.097,668,2.031,674,1.368,680,3.114,682,1.84,689,1.649,690,2.448,691,1.649,698,1.84,724,2.097,732,1.649,741,2.097,744,2.097,747,1.649,785,2.097,796,2.097,804,1.649,817,2.448,854,2.487,855,3.714,856,3.693,857,2.487,858,2.487,859,2.487,860,2.487,861,3.607,862,2.097,863,1.84,864,2.487,865,1.84,866,2.448,867,2.487,868,2.487,869,2.487,870,2.487,871,1.84,872,2.487,873,2.487,874,2.097,875,2.487,876,2.487,877,2.487,878,2.487,879,2.487,880,2.097,881,2.097,882,2.487,883,1.84,884,2.487,885,2.487,886,2.487,887,2.097,888,2.487,889,2.487,890,2.487,891,1.495,892,2.487,893,2.487,894,2.487,895,2.097,896,2.487,897,2.097,898,1.84,899,2.487,900,2.487,901,2.097,902,2.487,903,2.487,904,3.693,905,2.487,906,1.84,907,2.487,908,2.487,909,2.097,910,2.733,911,2.097,912,3.114,913,2.487,914,2.487,915,2.097,916,2.487,917,2.487,918,1.84,919,2.487,920,2.097,921,2.097,922,2.487,923,2.487,924,2.487,925,2.487,926,2.487,927,2.487,928,2.487,929,2.097,930,2.487,931,2.487,932,1.84,933,2.487,934,2.487,935,2.487,936,2.097,937,2.097,938,2.487,939,2.487,940,2.487,941,2.487,942,2.487,943,2.487,944,2.487,945,2.487,946,2.487,947,2.097,948,2.487,949,2.487,950,2.487,951,2.487,952,2.487,953,2.487,954,2.487,955,2.487,956,2.487,957,2.487,958,2.487,959,1.649,960,1.84,961,2.487,962,2.487,963,2.448,964,2.487,965,2.487,966,2.487,967,1.84,968,1.84,969,4.405,970,3.693,971,2.487,972,2.487,973,2.487,974,2.487,975,1.84,976,2.487,977,2.487,978,2.487,979,2.487,980,3.693,981,2.487,982,2.487,983,2.487,984,2.487,985,2.097,986,2.487,987,2.487,988,1.649,989,2.487,990,2.487,991,4.875,992,2.097,993,2.097,994,2.487,995,2.487,996,2.487,997,2.487,998,2.487,999,2.487,1000,2.097,1001,2.487,1002,2.487,1003,2.487,1004,2.487,1005,2.097,1006,1.84,1007,3.714,1008,2.487,1009,3.114,1010,2.487]],["title/modules.html",[211,3.177]],["body/modules.html",[26,0.024,32,0.024,33,0.024,87,2.711,211,3.551,1011,4.518]],["title/overview.html",[1012,4.042]],["body/overview.html",[2,0.961,26,0.024,32,0.024,33,0.024,210,3.161,218,3.485,286,3.07,420,2.279,1012,4.434,1013,3.161,1014,5.258]],["title/properties.html",[71,1.611,804,2.033]],["body/properties.html",[6,0.905,11,2.724,26,0.027,32,0.023,33,0.023,71,1.856,76,1.998,147,0.989,169,1.856,239,1.995,289,1.547,553,2.359,781,4.176,1007,4.176,1009,4.176,1015,4.953,1016,4.953,1017,4.953,1018,4.953,1019,4.953]],["title/miscellaneous/typealiases.html",[1020,2.033,1021,4.297]],["body/miscellaneous/typealiases.html",[19,0.73,26,0.026,28,0.503,32,0.022,33,0.022,46,1.89,63,2.374,124,2.459,264,2.745,265,3.205,289,1.239,290,1.759,301,3.76,765,3.473,766,4.197,959,3.76,1020,3.111,1022,4.694,1023,5.673,1024,6.484,1025,5.673,1026,5.673,1027,5.673,1028,4.694,1029,4.694]],["title/miscellaneous/variables.html",[1020,2.033,1030,3.623]],["body/miscellaneous/variables.html",[19,0.565,26,0.027,28,0.618,32,0.019,33,0.019,41,2.312,42,1.747,44,2.09,46,1.463,50,3.063,60,0.823,65,2.408,68,3.063,72,2.688,73,0.959,76,1.984,77,3.667,112,1.838,119,2.184,154,1.362,191,1.463,246,0.894,265,2.44,268,0.832,305,2.359,381,2.688,489,3.461,721,4.005,732,4.171,833,3.063,834,4.066,836,4.066,837,4.066,838,4.066,839,4.066,840,3.568,841,4.066,963,2.408,1020,2.408,1030,3.063,1031,6.293,1032,5.412,1033,5.201,1034,6.168,1035,5.412,1036,2.688,1037,3.633,1038,3.633,1039,4.066,1040,4.822,1041,3.633,1042,3.633,1043,3.633,1044,3.633,1045,3.063,1046,3.063,1047,3.633]],["title/additional-documentation/quickstart.html",[364,1.236,865,2.27,1048,1.435]],["body/additional-documentation/quickstart.html",[2,0.404,10,1.863,11,1.215,12,1.863,16,1.033,26,0.027,28,0.362,32,0.013,33,0.016,38,2.239,40,1.604,41,0.828,42,1.805,43,1.863,46,0.89,49,3.458,54,0.828,58,1.18,59,2.239,60,0.655,63,1.855,65,1.465,66,1.361,70,1.635,71,0.828,73,0.583,76,1.648,87,2.324,88,0.958,89,3.458,92,1.863,93,2.849,99,1.212,101,0.828,112,2.504,115,1.215,116,1.329,117,1.635,122,1.329,124,0.958,125,1.033,130,1.026,147,1.005,148,1.18,149,0.89,151,1.215,154,1.266,169,1.855,171,1.918,190,0.958,191,0.89,201,1.033,206,1.858,210,2.466,211,1.465,213,1.863,221,1.161,228,1.863,234,1.033,236,1.464,238,1.118,239,1.993,240,1.858,245,3.263,246,0.544,250,1.329,259,1.464,261,0.772,265,1.118,268,1.051,271,0.772,279,1.635,289,1.306,290,0.828,292,1.215,302,1.118,305,1.537,307,2.747,309,1.58,313,2.466,323,1.465,325,1.635,327,1.635,329,1.778,331,1.215,333,1.465,341,1.635,343,2.44,344,2.761,346,0.89,363,2.466,376,2.255,379,1.709,392,2.239,395,2.5,396,1.329,406,2.718,408,1.58,414,0.89,415,1.118,422,1.464,441,1.465,442,1.635,463,1.709,464,1.329,478,1.329,481,1.721,483,1.215,486,1.215,487,2.718,489,1.215,497,1.863,498,1.329,504,1.465,528,1.329,553,1.361,561,1.635,565,1.215,566,1.033,579,1.329,592,2.239,604,1.863,616,1.329,617,1.465,619,1.635,646,1.863,668,1.215,683,1.863,693,1.635,732,1.465,747,1.465,764,1.863,817,1.465,862,1.863,863,1.635,866,1.465,874,1.863,880,1.863,895,1.863,920,1.863,947,1.863,960,1.635,963,2.239,988,1.465,1006,1.635,1011,2.849,1013,2.031,1049,2.21,1050,1.635,1051,2.21,1052,4.948,1053,1.863,1054,3.378,1055,2.849,1056,3.458,1057,1.465,1058,2.21,1059,1.863,1060,2.21,1061,2.21,1062,2.975,1063,2.21,1064,2.21,1065,1.635,1066,1.465,1067,1.863,1068,3.378,1069,2.255,1070,3.378,1071,2.21,1072,1.863,1073,1.863,1074,2.21,1075,2.21,1076,2.21,1077,2.21,1078,2.21,1079,1.863,1080,1.465,1081,2.849,1082,1.863,1083,1.863,1084,1.465,1085,1.465,1086,2.21,1087,2.21,1088,2.21,1089,1.863,1090,3.378,1091,2.21,1092,2.21,1093,2.849,1094,2.21,1095,2.21,1096,1.635,1097,2.21,1098,1.863,1099,2.21,1100,2.21,1101,2.21,1102,2.21,1103,1.635,1104,1.863,1105,2.21,1106,2.21,1107,3.378,1108,3.378,1109,2.21,1110,3.378,1111,2.21,1112,3.378,1113,2.21,1114,2.21,1115,2.21,1116,3.378,1117,2.21,1118,2.21,1119,2.21,1120,2.21,1121,2.21,1122,2.21,1123,2.21,1124,2.21,1125,2.21,1126,2.21,1127,2.21,1128,2.21,1129,2.21,1130,2.21,1131,2.21,1132,1.635,1133,2.21,1134,2.849,1135,1.863,1136,2.21,1137,2.21,1138,2.21,1139,2.21,1140,2.21,1141,2.21,1142,3.378,1143,1.863,1144,1.863,1145,2.21,1146,2.21,1147,1.863,1148,2.849,1149,2.21,1150,2.21,1151,1.863,1152,2.21,1153,1.863,1154,2.21,1155,2.21]],["title/additional-documentation/guide.html",[364,1.236,1048,1.435,1085,2.033]],["body/additional-documentation/guide.html",[17,1.938,20,0.813,26,0.023,32,0.023,33,0.023,40,1.681,45,2.894,60,0.822,76,1.462,99,1.52,100,2.159,101,2.159,148,2.011,149,1.938,199,2.251,230,2.086,232,3.561,239,1.938,269,2.647,286,2.435,330,2.894,331,2.647,397,3.561,420,2.086,423,2.894,424,2.894,496,2.435,498,2.894,1084,3.19,1156,3.19,1157,3.19,1158,4.058,1159,2.894,1160,4.813,1161,4.813,1162,3.19,1163,4.813]],["title/additional-documentation/guide/1.-creating-connections.html",[286,1.198,364,0.954,1048,1.107,1156,1.569,1157,1.569]],["body/additional-documentation/guide/1.-creating-connections.html",[8,2.091,9,2.451,16,1.357,20,0.698,23,1.357,26,0.028,28,0.311,32,0.016,33,0.016,40,1.68,41,1.088,54,1.088,60,0.59,63,1.088,69,1.258,73,0.766,76,1.255,94,1.469,99,1.384,100,2.158,101,1.803,102,2.272,108,1.935,111,1.357,124,1.791,125,1.357,130,0.881,137,3.484,147,0.698,149,1.664,154,2.076,182,0.881,185,2.148,188,1.745,190,1.258,192,1.596,199,2.59,201,1.932,207,2.091,221,1.715,222,2.448,223,1.924,225,2.448,229,1.924,230,2.496,234,1.932,236,1.258,242,2.148,244,3.057,245,1.745,246,1.183,255,1.596,256,1.443,257,1.932,261,1.443,266,1.169,268,1.101,269,1.596,289,0.766,290,1.088,296,2.448,302,1.469,303,1.596,305,1.088,320,1.924,343,1.357,344,1.745,350,1.791,362,1.088,365,2.148,374,1.745,384,1.596,392,1.924,399,2.448,422,1.791,440,1.469,463,1.469,464,1.745,481,1.088,531,2.148,547,1.469,573,3.057,602,1.924,627,3.484,710,3.484,906,3.057,910,2.148,932,2.148,959,1.924,968,2.148,1050,2.148,1062,1.745,1065,2.148,1066,1.924,1069,1.596,1080,1.924,1098,2.448,1151,2.448,1156,2.739,1157,3.189,1159,1.745,1164,3.879,1165,4.132,1166,3.56,1167,4.132,1168,2.903,1169,2.903,1170,2.448,1171,2.739,1172,2.148,1173,2.903,1174,2.903,1175,2.903,1176,2.903,1177,2.903,1178,3.484,1179,3.057,1180,2.903,1181,2.448,1182,2.903,1183,2.903,1184,2.903,1185,2.903,1186,2.448,1187,2.148,1188,2.903,1189,2.903,1190,2.903,1191,2.148,1192,2.903,1193,2.903,1194,2.903,1195,4.132,1196,5.242,1197,2.448,1198,2.903,1199,2.903,1200,2.448,1201,2.448,1202,3.484,1203,2.903,1204,2.903,1205,2.903,1206,2.903,1207,2.903,1208,2.903,1209,2.448,1210,2.448]],["title/additional-documentation/guide/2.-connecting-to-dom.html",[99,0.625,166,1.569,364,0.954,1048,1.107,1159,1.424]],["body/additional-documentation/guide/2.-connecting-to-dom.html",[20,0.505,23,1.398,26,0.027,27,1.374,32,0.017,33,0.017,40,2.03,41,1.12,42,1.195,44,1.296,60,0.758,73,1.114,99,1.402,100,1.581,102,2.32,105,2.135,111,1.398,114,1.644,116,1.797,130,0.908,147,1.009,148,1.044,149,1.204,169,1.12,182,0.908,204,3.122,214,2.521,220,1.797,229,1.981,230,1.296,236,1.296,246,0.735,256,1.708,259,1.296,266,1.699,268,0.966,269,2.32,270,1.797,271,2.196,273,1.513,289,1.291,290,1.12,292,1.644,295,1.296,302,1.513,305,1.12,307,1.513,309,2.718,314,2.796,315,3.241,320,1.981,324,2.521,329,1.296,330,2.536,331,1.644,332,2.135,335,1.981,343,1.398,344,1.797,349,1.973,350,1.296,362,1.12,376,1.644,389,2.212,392,2.796,393,3.495,394,2.536,408,1.973,412,1.829,419,1.981,432,1.797,433,1.644,451,3.122,464,1.797,481,1.12,483,1.644,488,2.796,509,1.644,510,2.212,511,2.212,513,2.212,547,1.513,548,1.981,598,1.981,602,1.981,618,2.521,644,1.981,649,1.981,666,1.981,674,1.644,678,2.521,689,2.796,694,2.689,725,2.212,871,2.212,891,1.797,909,2.521,985,2.521,1036,2.212,1050,2.212,1158,3.557,1159,1.797,1162,1.981,1166,3.122,1211,2.989,1212,2.989,1213,2.989,1214,4.219,1215,4.219,1216,2.989,1217,2.989,1218,4.219,1219,4.219,1220,3.557,1221,4.219,1222,4.219,1223,3.557,1224,4.219,1225,2.989,1226,2.989,1227,2.521,1228,2.989,1229,2.521,1230,2.521,1231,2.989,1232,4.219,1233,2.989,1234,2.989,1235,4.219,1236,2.989,1237,2.989,1238,2.521,1239,2.989,1240,2.989,1241,2.989,1242,2.989,1243,2.521,1244,2.989,1245,2.989,1246,2.989,1247,2.212,1248,2.989,1249,2.521,1250,2.989,1251,2.521,1252,2.521,1253,2.989,1254,2.989,1255,2.989]],["title/additional-documentation/guide/3.-monitoring-state.html",[148,0.827,364,0.954,1013,1.424,1048,1.107,1162,1.569]],["body/additional-documentation/guide/3.-monitoring-state.html",[2,0.794,8,1.576,20,0.733,23,2.338,26,0.027,28,0.466,30,0.663,32,0.017,33,0.017,54,1.168,58,1.088,60,0.62,63,1.168,69,1.35,71,1.628,76,0.946,100,1.628,101,2.132,105,2.197,122,1.873,125,2.338,130,1.836,136,1.713,138,1.713,147,0.733,148,1.746,151,1.713,159,2.626,165,1.576,169,1.168,171,2.031,174,1.457,176,2.065,182,1.642,187,1.749,188,1.873,192,2.388,194,2.878,196,2.388,201,1.457,205,2.878,206,2.749,221,1.23,234,1.457,236,1.35,246,1.33,257,1.457,261,1.746,277,1.457,289,1.32,316,1.35,329,1.35,332,1.576,346,1.749,347,1.873,354,2.611,356,2.065,360,2.305,362,1.168,363,1.873,379,1.576,396,1.873,398,2.065,408,2.031,412,1.35,413,1.576,414,1.254,424,1.873,440,1.576,445,1.713,478,2.611,481,1.168,492,3.252,529,2.626,558,1.873,566,1.457,569,2.197,575,2.626,597,2.065,615,1.713,617,2.065,666,2.065,687,2.305,691,2.065,694,1.713,715,1.873,722,3.699,756,2.626,776,2.626,861,2.305,891,1.873,960,2.305,1059,2.626,1066,2.065,1069,2.974,1080,2.065,1089,2.626,1104,2.626,1162,2.065,1164,3.213,1227,2.626,1247,2.305,1256,2.626,1257,2.626,1258,3.213,1259,2.626,1260,3.115,1261,4.999,1262,3.662,1263,3.115,1264,3.115,1265,3.115,1266,4.343,1267,3.115,1268,2.626,1269,2.626,1270,2.626,1271,3.115,1272,3.115,1273,3.115,1274,3.115,1275,4.343,1276,3.115,1277,2.626,1278,3.115,1279,2.626,1280,3.115,1281,2.305,1282,2.626,1283,2.626,1284,4.343,1285,3.115,1286,3.115,1287,2.626,1288,3.115,1289,3.662,1290,3.115,1291,3.115,1292,3.115,1293,3.115,1294,2.305,1295,2.626,1296,3.115,1297,3.115,1298,3.115,1299,2.626]],["title/additional-documentation/chess-tutorial.html",[364,1.076,866,1.772,918,1.978,1048,1.25]],["body/additional-documentation/chess-tutorial.html",[0,0.314,4,0.368,8,1.239,9,0.385,11,0.453,16,1.595,20,0.339,23,0.691,26,0.028,27,0.268,28,0.088,30,0.175,32,0.006,33,0.006,40,0.855,41,1.58,42,0.233,45,0.495,46,0.595,54,0.309,59,2.982,60,0.521,61,0.694,63,0.554,66,1.47,69,0.87,73,0.39,75,1.264,76,0.953,87,0.417,88,0.357,98,1.472,99,0.39,101,0.554,102,0.812,106,0.694,108,1.191,109,0.694,116,0.888,117,0.609,122,0.888,124,0.357,127,1.245,130,0.448,138,0.453,147,0.799,148,0.701,149,0.332,150,0.694,151,0.453,153,0.694,154,1.733,165,0.417,166,2.893,169,0.309,170,1.331,171,0.939,172,0.609,174,0.691,175,0.546,176,1.869,178,2.079,182,1.036,183,0.694,187,1.862,188,0.495,190,1.36,192,0.453,196,1.347,199,1.145,201,1.145,202,0.694,204,2.321,207,1.427,210,0.888,212,0.609,218,1.623,220,2.051,221,1.37,230,1.062,234,0.385,236,0.357,238,1.427,239,1.136,240,0.812,245,2.965,246,0.772,250,1.696,261,0.287,264,0.87,268,0.718,271,0.287,277,0.691,286,2.133,289,1.325,290,0.753,292,0.453,295,0.357,297,0.694,303,0.453,306,1.486,307,0.417,309,1.145,315,1.331,316,1.062,322,1.245,329,1.222,330,0.495,331,0.453,332,0.747,333,0.546,335,0.979,343,1.971,344,0.495,346,0.595,348,0.609,349,0.691,350,0.64,352,1.623,354,0.495,355,2.995,356,1.623,357,0.694,359,0.694,362,0.753,364,0.332,365,1.812,373,1.693,374,2.051,377,0.694,378,1.812,379,0.417,383,0.694,386,0.812,389,0.609,393,0.495,394,0.888,396,0.495,405,1.245,406,1.331,408,0.939,412,0.64,414,0.332,422,0.357,423,0.888,429,1.869,440,0.747,442,1.486,443,0.694,446,1.093,451,0.609,453,1.245,457,0.694,458,1.093,464,0.888,468,0.747,469,1.245,472,1.693,479,1.093,481,1.176,483,0.812,486,0.812,488,0.546,489,1.104,490,0.694,491,0.609,492,0.495,495,0.609,496,0.417,504,0.546,505,0.546,506,0.546,509,1.876,510,0.609,511,0.609,513,0.609,528,0.495,531,0.609,535,0.495,547,0.417,553,0.986,565,0.453,566,0.385,568,0.694,569,1.847,572,0.694,573,1.812,577,0.609,578,1.207,583,0.609,592,0.546,598,2.42,600,0.694,602,0.546,614,0.609,615,1.347,616,0.495,625,0.609,633,0.979,634,0.609,643,0.694,644,0.546,649,1.623,650,0.609,652,1.093,654,2.378,655,0.694,656,0.694,658,0.694,666,0.546,668,0.453,674,0.453,676,1.093,682,3.88,685,0.694,687,0.609,689,0.546,694,1.104,722,0.609,729,0.694,733,0.694,734,3.554,747,0.546,759,0.694,761,0.609,769,3.898,770,3.992,778,0.694,779,1.245,793,1.245,798,0.694,820,3.68,850,2.524,855,1.693,861,1.812,865,0.609,866,1.623,871,1.812,881,0.694,883,0.609,887,0.694,891,0.888,906,0.609,910,1.093,912,0.694,915,0.694,918,2.701,921,1.693,929,0.694,932,0.609,936,0.694,959,0.546,967,1.486,968,0.609,975,0.609,988,0.546,992,0.694,1006,0.609,1013,1.207,1053,0.694,1057,2.893,1062,1.696,1065,1.812,1066,0.546,1067,1.693,1069,1.551,1073,0.694,1080,0.546,1081,0.694,1082,2.378,1083,2.378,1084,1.331,1085,0.979,1093,1.693,1096,0.609,1103,1.093,1132,0.609,1135,0.694,1144,1.245,1148,1.245,1164,1.093,1166,1.486,1170,1.245,1171,1.623,1172,1.812,1179,0.609,1186,3.413,1187,0.609,1191,0.609,1200,0.694,1201,0.694,1202,0.694,1209,1.693,1210,0.694,1220,1.245,1223,0.694,1230,0.694,1238,0.694,1243,0.694,1247,1.093,1251,0.694,1252,0.694,1256,0.694,1257,0.694,1258,0.609,1259,0.694,1262,0.694,1268,0.694,1269,0.694,1270,0.694,1277,1.245,1279,0.694,1281,1.093,1282,0.694,1283,0.694,1287,0.694,1295,0.694,1299,0.694,1300,0.823,1301,3.411,1302,5.811,1303,0.694,1304,0.823,1305,0.823,1306,1.477,1307,2.008,1308,4.215,1309,1.477,1310,3.411,1311,4.364,1312,2.449,1313,4.364,1314,3.651,1315,2.008,1316,3.651,1317,1.477,1318,0.823,1319,0.823,1320,0.609,1321,2.008,1322,0.823,1323,0.823,1324,0.823,1325,1.477,1326,1.093,1327,0.823,1328,2.008,1329,0.823,1330,0.823,1331,3.651,1332,2.449,1333,1.477,1334,0.823,1335,2.449,1336,1.477,1337,0.823,1338,4.048,1339,0.823,1340,0.823,1341,1.477,1342,2.008,1343,0.823,1344,0.823,1345,0.823,1346,0.823,1347,0.823,1348,0.823,1349,1.477,1350,0.823,1351,2.008,1352,2.008,1353,0.823,1354,1.477,1355,0.823,1356,1.477,1357,1.477,1358,0.823,1359,0.823,1360,0.823,1361,1.477,1362,0.823,1363,0.823,1364,0.823,1365,0.823,1366,2.82,1367,0.694,1368,2.008,1369,2.449,1370,3.137,1371,0.823,1372,0.823,1373,2.449,1374,0.823,1375,0.823,1376,1.477,1377,0.823,1378,0.823,1379,0.823,1380,0.823,1381,0.823,1382,1.477,1383,2.82,1384,0.823,1385,0.823,1386,0.823,1387,0.823,1388,1.477,1389,2.82,1390,1.245,1391,0.823,1392,0.823,1393,0.694,1394,0.823,1395,0.823,1396,0.823,1397,0.823,1398,1.477,1399,1.477,1400,0.823,1401,0.823,1402,0.823,1403,0.823,1404,0.694,1405,0.823,1406,0.823,1407,0.823,1408,0.823,1409,0.823,1410,0.823,1411,1.477,1412,0.823,1413,5.099,1414,0.823,1415,0.823,1416,0.823,1417,0.823,1418,0.823,1419,1.477,1420,0.823,1421,2.645,1422,0.823,1423,0.823,1424,0.823,1425,3.137,1426,2.065,1427,0.694,1428,0.694,1429,0.823,1430,3.861,1431,2.82,1432,0.823,1433,0.694,1434,0.823,1435,0.823,1436,0.823,1437,1.477,1438,0.823,1439,0.823,1440,0.823,1441,0.823,1442,0.823,1443,0.823,1444,1.477,1445,1.477,1446,0.823,1447,0.823,1448,1.477,1449,0.823,1450,0.823,1451,0.823,1452,0.823,1453,0.823,1454,0.823,1455,0.823,1456,0.823,1457,0.823,1458,0.823,1459,0.823,1460,1.693,1461,0.823,1462,0.823,1463,1.477,1464,0.823,1465,1.477,1466,1.477,1467,0.823,1468,0.823,1469,1.477,1470,2.008,1471,0.823,1472,1.477,1473,0.823,1474,1.477,1475,0.823,1476,0.823,1477,0.823,1478,0.823,1479,0.823,1480,0.823,1481,1.477,1482,1.477,1483,0.823,1484,0.823,1485,0.823,1486,0.823,1487,0.823,1488,0.823,1489,0.823,1490,0.694,1491,1.477,1492,0.823,1493,0.823,1494,0.823,1495,0.823,1496,0.823,1497,0.823,1498,0.823,1499,0.823,1500,0.823,1501,0.823,1502,0.694,1503,0.823,1504,1.477,1505,0.823,1506,0.823,1507,0.823,1508,3.651,1509,0.694,1510,0.823,1511,0.823,1512,0.823,1513,2.065,1514,0.823,1515,1.477,1516,0.823,1517,0.823,1518,0.823,1519,0.823,1520,2.008,1521,0.823,1522,0.823,1523,0.823,1524,0.823,1525,0.823,1526,1.477,1527,0.823,1528,1.477,1529,0.823,1530,0.823,1531,1.477,1532,0.694,1533,0.694,1534,0.823,1535,0.823,1536,0.823,1537,1.477,1538,0.823,1539,0.694,1540,0.823,1541,0.823,1542,0.823,1543,0.823,1544,0.823,1545,0.823,1546,0.823,1547,0.823,1548,0.694,1549,0.823,1550,0.823,1551,0.823,1552,0.823,1553,0.823,1554,0.823,1555,0.823,1556,2.82,1557,2.065,1558,0.823,1559,0.823,1560,1.477,1561,0.823,1562,2.008,1563,0.694,1564,1.477,1565,0.823,1566,0.823,1567,0.823,1568,0.823,1569,0.823,1570,0.823,1571,0.823,1572,0.823,1573,0.823,1574,0.823,1575,0.823,1576,0.823,1577,0.823,1578,0.823,1579,0.823,1580,0.823,1581,1.477,1582,1.477,1583,0.823,1584,0.823,1585,0.823,1586,0.823,1587,0.823,1588,0.823,1589,0.823,1590,0.823,1591,0.823,1592,0.823,1593,0.823,1594,0.823,1595,0.823,1596,0.823,1597,0.823,1598,0.823,1599,0.823,1600,0.823,1601,0.823,1602,0.823,1603,0.823,1604,0.823,1605,2.82,1606,0.823,1607,0.823,1608,0.823,1609,0.823,1610,1.477,1611,0.823,1612,1.477,1613,0.823,1614,1.477,1615,0.823,1616,0.823,1617,0.823,1618,0.823,1619,0.823]],["title/additional-documentation/translating-react-code.html",[169,0.887,171,1.107,364,0.954,898,1.752,1048,1.107]],["body/additional-documentation/translating-react-code.html",[2,0.331,9,1.352,18,0.59,20,0.306,23,1.687,26,0.027,28,0.387,30,0.385,32,0.011,33,0.011,40,1.26,41,0.679,51,2.139,54,1.084,58,1.677,59,1.916,60,0.515,63,1.688,66,1.453,69,1.253,71,0.679,73,0.953,76,1.773,88,0.785,99,1.267,100,1.544,101,1.084,105,0.916,108,1.01,114,1.59,119,1.089,122,1.089,124,0.785,125,2.106,130,1.638,135,1.527,138,1.59,147,0.696,148,1.01,154,1.961,155,1.527,157,1.34,158,1.089,161,1.2,165,0.916,166,1.2,169,2.325,170,1.2,171,2.106,172,1.34,174,1.927,175,1.916,182,0.55,187,1.814,191,1.453,192,0.996,193,1.527,194,1.2,196,1.59,197,0.847,199,0.847,201,0.847,206,1.985,207,0.916,221,1.729,230,1.564,232,1.34,238,0.916,239,1.164,256,1.01,259,0.785,260,1.2,261,1.439,263,1.527,264,0.785,268,0.414,269,0.996,270,1.089,273,1.463,275,1.527,276,2.438,279,1.34,281,1.527,286,0.916,294,1.2,295,1.564,302,0.916,303,0.996,305,0.679,311,1.34,316,1.564,323,1.2,327,1.34,329,0.785,330,1.738,333,2.985,335,1.2,343,1.352,349,1.352,350,1.253,352,1.916,354,1.089,362,0.679,363,2.17,374,2.17,379,0.916,386,0.996,387,1.2,394,1.089,396,1.089,398,1.2,406,1.2,407,1.527,408,1.927,412,0.785,420,1.253,422,0.785,424,1.738,431,1.089,432,2.17,441,1.2,463,2.085,468,0.916,483,1.59,486,0.996,489,0.996,491,1.34,492,2.17,494,1.34,496,2.085,498,1.089,499,1.527,500,3.043,502,1.527,505,1.2,509,0.996,527,1.34,528,1.089,530,1.2,547,1.463,553,2.411,569,1.463,576,1.527,579,1.738,597,1.2,599,1.527,615,2.266,616,1.089,633,1.2,649,1.2,652,2.139,674,2.476,676,1.34,694,0.996,761,1.34,817,1.916,883,1.34,891,1.089,897,1.527,898,1.34,901,1.527,937,1.527,963,1.916,967,1.34,988,2.392,993,1.527,1000,1.527,1005,1.527,1013,1.089,1036,1.34,1045,1.527,1046,1.527,1057,2.392,1062,2.707,1069,1.59,1072,1.527,1084,1.916,1132,1.34,1134,2.438,1143,2.438,1147,1.527,1153,1.527,1157,2.731,1159,1.089,1171,1.2,1181,1.527,1187,2.139,1191,1.34,1197,1.527,1294,1.34,1303,2.438,1320,1.34,1326,1.34,1367,1.527,1390,1.527,1393,1.527,1404,1.527,1421,2.438,1426,1.527,1427,1.527,1460,2.438,1502,1.527,1509,1.527,1513,1.527,1532,1.527,1533,1.527,1539,1.527,1548,2.438,1557,3.043,1563,1.527,1620,1.811,1621,1.811,1622,1.811,1623,1.811,1624,1.811,1625,1.811,1626,1.811,1627,1.811,1628,1.811,1629,1.811,1630,1.811,1631,1.811,1632,1.811,1633,1.811,1634,2.891,1635,5.839,1636,4.801,1637,1.811,1638,1.811,1639,1.811,1640,2.891,1641,2.438,1642,1.811,1643,1.811,1644,1.811,1645,1.811,1646,1.811,1647,1.811,1648,1.811,1649,1.811,1650,1.811,1651,1.811,1652,1.811,1653,1.811,1654,3.609,1655,2.891,1656,2.891,1657,1.811,1658,1.811,1659,2.891,1660,4.12,1661,3.609,1662,1.811,1663,2.891,1664,1.811,1665,1.811,1666,1.811,1667,1.811,1668,1.811,1669,1.811,1670,1.811,1671,1.811,1672,1.811,1673,1.811,1674,2.891,1675,1.811,1676,1.811,1677,1.811,1678,1.811,1679,1.811,1680,1.811,1681,1.811,1682,1.811,1683,1.811,1684,1.811,1685,1.811,1686,1.811,1687,1.811,1688,1.811,1689,1.811,1690,1.811,1691,1.811,1692,1.811,1693,1.811,1694,1.811,1695,1.811,1696,1.811,1697,1.811,1698,1.811,1699,1.811,1700,1.811,1701,3.043,1702,1.811,1703,1.527,1704,1.811,1705,1.811,1706,1.811,1707,1.811,1708,1.811,1709,1.811,1710,2.891,1711,1.811,1712,1.811,1713,1.811,1714,1.811]],["title/additional-documentation/testing.html",[364,1.236,522,2.033,1048,1.435]],["body/additional-documentation/testing.html",[16,1.231,26,0.028,32,0.015,33,0.015,37,1.949,42,1.808,51,1.949,58,0.92,60,0.55,66,1.061,67,3.84,73,0.695,76,1.747,77,1.448,87,1.333,98,1.583,99,0.695,105,1.949,108,1.345,115,1.448,121,2.221,147,1.032,148,0.92,158,1.583,169,2.088,174,1.231,187,1.061,190,1.142,191,1.061,194,1.745,199,1.231,207,1.949,210,1.583,212,1.949,221,1.51,223,2.553,238,1.333,239,1.551,240,2.118,245,3.459,246,1.311,268,1.22,289,1.519,290,0.987,295,1.142,302,1.333,306,1.949,316,1.142,329,1.142,332,1.333,336,2.221,346,1.061,362,1.444,367,1.949,376,2.118,384,1.448,481,1.707,494,1.949,506,1.745,509,2.118,522,3.534,530,1.745,547,1.333,553,1.061,565,1.448,580,3.988,650,1.949,668,1.448,669,2.221,690,1.745,721,1.949,725,1.949,840,1.949,850,1.949,863,1.949,911,2.221,975,1.949,1033,2.221,1039,2.221,1055,2.221,1056,2.221,1057,1.745,1062,2.316,1069,1.448,1079,3.248,1085,1.745,1096,1.949,1103,3.37,1156,1.745,1171,1.745,1172,1.949,1178,2.221,1179,1.949,1229,2.221,1249,3.248,1258,1.949,1281,1.949,1289,2.221,1294,1.949,1320,1.949,1326,1.949,1428,2.221,1433,2.221,1490,3.248,1641,4.225,1701,2.221,1703,2.221,1715,3.852,1716,3.852,1717,2.633,1718,2.633,1719,2.633,1720,2.633,1721,2.633,1722,2.633,1723,2.633,1724,2.633,1725,2.633,1726,2.633,1727,2.633,1728,2.633,1729,2.633,1730,2.633,1731,2.633,1732,2.633,1733,3.852,1734,3.852,1735,2.633,1736,3.852,1737,2.633,1738,2.633,1739,2.633,1740,2.633,1741,3.852,1742,3.852,1743,2.633,1744,2.633,1745,2.633,1746,2.633,1747,2.633,1748,2.633,1749,2.633,1750,2.633,1751,2.633,1752,2.633,1753,4.554,1754,2.633,1755,2.633,1756,2.633,1757,2.633,1758,2.633,1759,2.633,1760,2.633,1761,2.633,1762,2.633,1763,2.633,1764,2.633,1765,2.633,1766,2.633]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["0",{"_index":442,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["0..63",{"_index":1416,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["0.1.1",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["0.1.2",{"_index":812,"title":{},"body":{"changelog.html":{}}}],["0.11.0",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["0.25",{"_index":1542,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["0.5",{"_index":443,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["02",{"_index":802,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":784,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":783,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":810,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":813,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":286,"title":{"additional-documentation/guide/1.-creating-connections.html":{}},"body":{"injectables/DndService.html":{},"interfaces/DragPreviewOptions.html":{},"overview.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["1.0.0",{"_index":808,"title":{},"body":{"changelog.html":{}}}],["1.0.1",{"_index":806,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":805,"title":{},"body":{"changelog.html":{}}}],["1.0.3",{"_index":801,"title":{},"body":{"changelog.html":{}}}],["1/1",{"_index":835,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":820,"title":{},"body":{"coverage.html":{},"additional-documentation/chess-tutorial.html":{}}}],["12.5",{"_index":1399,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["13.0.0",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["14",{"_index":811,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":1014,"title":{},"body":{"overview.html":{}}}],["16.0.0",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["19",{"_index":807,"title":{},"body":{"changelog.html":{}}}],["1px",{"_index":1395,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["2",{"_index":166,"title":{"additional-documentation/guide/2.-connecting-to-dom.html":{}},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["2.0.0",{"_index":792,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":781,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["2.3.0",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":822,"title":{},"body":{"coverage.html":{}}}],["2021",{"_index":809,"title":{},"body":{"changelog.html":{}}}],["2022",{"_index":782,"title":{},"body":{"changelog.html":{}}}],["2c0127e",{"_index":791,"title":{},"body":{"changelog.html":{}}}],["2d",{"_index":943,"title":{},"body":{"index.html":{}}}],["3",{"_index":1013,"title":{"additional-documentation/guide/3.-monitoring-state.html":{}},"body":{"overview.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["3/3",{"_index":831,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":826,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":1513,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["4/4",{"_index":821,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":830,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":1334,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["5",{"_index":1426,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["5.5",{"_index":1593,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["5/5",{"_index":823,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":828,"title":{},"body":{"coverage.html":{}}}],["54px",{"_index":1336,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["560px",{"_index":1403,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["6",{"_index":1700,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["6/6",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":1315,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["7",{"_index":790,"title":{},"body":{"changelog.html":{}}}],["7.0.0",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["700",{"_index":1527,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["70px",{"_index":1339,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["75",{"_index":825,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1419,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["8/8",{"_index":832,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":829,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["8x8",{"_index":1388,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["above",{"_index":333,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["abramov",{"_index":858,"title":{},"body":{"index.html":{}}}],["absolute",{"_index":1382,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["abstraction",{"_index":905,"title":{},"body":{"index.html":{}}}],["accept",{"_index":1078,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["accepts",{"_index":91,"title":{},"body":{"interfaces/BackendInput.html":{}}}],["access",{"_index":1294,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["accessors",{"_index":707,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["accomplish",{"_index":1663,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["achieve",{"_index":1358,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["action",{"_index":610,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["actions",{"_index":81,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["actual",{"_index":1621,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["actually",{"_index":936,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["add",{"_index":16,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["add(teardown",{"_index":103,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["add(teardownlogic",{"_index":21,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["added",{"_index":1404,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["adding",{"_index":1051,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["additional",{"_index":1048,"title":{"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}},"body":{}}],["addsubscription",{"_index":1,"title":{"interfaces/AddSubscription.html":{}},"body":{"interfaces/AddSubscription.html":{},"injectables/DndService.html":{},"coverage.html":{}}}],["advanced",{"_index":1151,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["advantage",{"_index":893,"title":{},"body":{"index.html":{}}}],["advice",{"_index":366,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["affected",{"_index":1355,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["again",{"_index":1059,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["aliases",{"_index":1022,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1371,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["allow",{"_index":1498,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["allowing",{"_index":710,"title":{},"body":{"directives/DropTargetDirective.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["allows",{"_index":422,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["already",{"_index":468,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["alt",{"_index":639,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["alternate",{"_index":1089,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["alternatives",{"_index":954,"title":{},"body":{"index.html":{}}}],["always",{"_index":1247,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ambitious",{"_index":916,"title":{},"body":{"index.html":{}}}],["amend",{"_index":1469,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["anchorx",{"_index":435,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["anchory",{"_index":436,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["angular",{"_index":553,"title":{},"body":{"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"properties.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["angular's",{"_index":61,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/chess-tutorial.html":{}}}],["angular/common",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":850,"title":{},"body":{"dependencies.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["angular/core/testing",{"_index":1738,"title":{},"body":{"additional-documentation/testing.html":{}}}],["angular/platform",{"_index":1739,"title":{},"body":{"additional-documentation/testing.html":{}}}],["another",{"_index":689,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["answer",{"_index":1506,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["anything",{"_index":389,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["anyway",{"_index":695,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["aot",{"_index":49,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{}}}],["api",{"_index":51,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["apis",{"_index":878,"title":{},"body":{"index.html":{}}}],["app",{"_index":1083,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["app.module.ts",{"_index":1123,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["appear",{"_index":696,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["appearance",{"_index":1550,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["appearance—even",{"_index":684,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["applies",{"_index":555,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["apply",{"_index":469,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["applying",{"_index":1248,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["appmodule",{"_index":1058,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["approach",{"_index":1668,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["appropriate",{"_index":279,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["aptly",{"_index":55,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["arbitrarily",{"_index":1363,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["arbitrary",{"_index":1712,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["area",{"_index":926,"title":{},"body":{"index.html":{}}}],["aren't",{"_index":987,"title":{},"body":{"index.html":{}}}],["argument",{"_index":276,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["arguments",{"_index":1672,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["around",{"_index":204,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["array",{"_index":959,"title":{},"body":{"index.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["array(64).fill(0).map((_",{"_index":1387,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["arrow",{"_index":1134,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["ask",{"_index":403,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["asking",{"_index":282,"title":{},"body":{"injectables/DndService.html":{}}}],["assembly",{"_index":1107,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["assign",{"_index":632,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["assigning",{"_index":272,"title":{},"body":{"injectables/DndService.html":{}}}],["associated",{"_index":1697,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["assumes",{"_index":1317,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["assuming",{"_index":1592,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["assumptions",{"_index":1549,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["async",{"_index":1258,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["asynchronous",{"_index":1710,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["attach",{"_index":1166,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["attached",{"_index":1201,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["attaching",{"_index":1353,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["attention",{"_index":1375,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["automatic",{"_index":391,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["automatically",{"_index":514,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["available",{"_index":346,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["avoid",{"_index":657,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["avoiding",{"_index":252,"title":{},"body":{"injectables/DndService.html":{}}}],["aware",{"_index":1676,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["backend",{"_index":42,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["backend';generally",{"_index":1120,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["backend's",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["backend.simulatebegindrag([source",{"_index":1757,"title":{},"body":{"additional-documentation/testing.html":{}}}],["backend.simulatedrop",{"_index":1762,"title":{},"body":{"additional-documentation/testing.html":{}}}],["backend.simulateenddrag",{"_index":1763,"title":{},"body":{"additional-documentation/testing.html":{}}}],["backend.simulatehover([target",{"_index":1759,"title":{},"body":{"additional-documentation/testing.html":{}}}],["backendexample",{"_index":1732,"title":{},"body":{"additional-documentation/testing.html":{}}}],["backendfactory",{"_index":65,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{}}}],["backendfactoryfactory",{"_index":57,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["backendfactoryinput",{"_index":34,"title":{"interfaces/BackendFactoryInput.html":{}},"body":{"interfaces/BackendFactoryInput.html":{},"modules/DndModule.html":{},"coverage.html":{}}}],["backendinput",{"_index":85,"title":{"interfaces/BackendInput.html":{}},"body":{"interfaces/BackendInput.html":{},"modules/DndModule.html":{},"coverage.html":{}}}],["backendnext",{"_index":864,"title":{},"body":{"index.html":{}}}],["backendorbackendfactory",{"_index":216,"title":{},"body":{"modules/DndModule.html":{}}}],["backends",{"_index":38,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["backendyou",{"_index":1049,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["background",{"_index":1262,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["backgroundcolor",{"_index":1351,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["bare",{"_index":955,"title":{},"body":{"index.html":{}}}],["base",{"_index":97,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["base.ts",{"_index":746,"title":{},"body":{"interfaces/MonitorBase.html":{},"coverage.html":{}}}],["based",{"_index":379,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["basic",{"_index":1326,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["basics",{"_index":1319,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["batches",{"_index":889,"title":{},"body":{"index.html":{}}}],["bbb",{"_index":1459,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["become",{"_index":735,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["becomes",{"_index":321,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["before",{"_index":761,"title":{},"body":{"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["beforeeach",{"_index":1747,"title":{},"body":{"additional-documentation/testing.html":{}}}],["beforeeach(async",{"_index":1745,"title":{},"body":{"additional-documentation/testing.html":{}}}],["begindrag",{"_index":547,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["begindrag(monitor",{"_index":645,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["behaviorsubject",{"_index":1431,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["behaviour",{"_index":269,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["behavioursubject",{"_index":1439,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["being",{"_index":349,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["belong",{"_index":994,"title":{},"body":{"index.html":{}}}],["below",{"_index":1229,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/testing.html":{}}}],["benefit",{"_index":1002,"title":{},"body":{"index.html":{}}}],["best",{"_index":623,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["better",{"_index":1448,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["between",{"_index":441,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["beyond",{"_index":1180,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["bg",{"_index":1605,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["big",{"_index":1365,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["biggest",{"_index":1653,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["binding",{"_index":554,"title":{},"body":{"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["bit",{"_index":1504,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["black",{"_index":1311,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["blindly",{"_index":567,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["block",{"_index":1366,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["blocks",{"_index":909,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["board",{"_index":682,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["boardcomponent",{"_index":1314,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["boardsquarecomponent",{"_index":1556,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["body",{"_index":1347,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["boilerplate",{"_index":1435,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["bones",{"_index":956,"title":{},"body":{"index.html":{}}}],["boolean",{"_index":74,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["boolean;then",{"_index":1348,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["border",{"_index":1394,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["born",{"_index":980,"title":{},"body":{"index.html":{}}}],["both",{"_index":616,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["bottom",{"_index":459,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["bound",{"_index":186,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["bounding",{"_index":1214,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["box",{"_index":1235,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["break",{"_index":1304,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["breaking",{"_index":1468,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["brevity's",{"_index":1401,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["broadcast",{"_index":1436,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["broken",{"_index":557,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["browse",{"_index":1011,"title":{},"body":{"modules.html":{},"additional-documentation/quickstart.html":{}}}],["browser",{"_index":1096,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["browsers",{"_index":601,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["browsing",{"_index":1088,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["bug",{"_index":785,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["build",{"_index":793,"title":{},"body":{"changelog.html":{},"additional-documentation/chess-tutorial.html":{}}}],["builder",{"_index":948,"title":{},"body":{"index.html":{}}}],["building",{"_index":855,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["bump",{"_index":803,"title":{},"body":{"changelog.html":{}}}],["c.candrop",{"_index":1600,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["c.isdragging",{"_index":189,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["c.isover",{"_index":1599,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cad",{"_index":944,"title":{},"body":{"index.html":{}}}],["call",{"_index":234,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["callback",{"_index":114,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["callbacks",{"_index":206,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["called",{"_index":197,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/translating-react-code.html":{}}}],["calling",{"_index":1129,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["came",{"_index":1547,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["can't",{"_index":1132,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["candrag",{"_index":561,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{}}}],["candrag(monitor",{"_index":661,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["candrop",{"_index":178,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["candrop(monitor",{"_index":730,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["canmoveknight",{"_index":1470,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["canmoveknight(to",{"_index":1476,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["capturedraggingstate",{"_index":437,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{}}}],["card",{"_index":679,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["cards",{"_index":934,"title":{},"body":{"index.html":{}}}],["carry",{"_index":1295,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["case",{"_index":180,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTargetSpec.html":{}}}],["cases",{"_index":304,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"index.html":{}}}],["cat",{"_index":1261,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["cats",{"_index":1260,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["center",{"_index":1372,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["certain",{"_index":310,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["chain",{"_index":587,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["change",{"_index":316,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["changelog",{"_index":772,"title":{"changelog.html":{}},"body":{}}],["changes",{"_index":149,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"changelog.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["changing",{"_index":1277,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["character",{"_index":1330,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["check",{"_index":668,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["checking",{"_index":738,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["checks",{"_index":160,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["chess",{"_index":918,"title":{"additional-documentation/chess-tutorial.html":{}},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["chessboard",{"_index":1409,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["child",{"_index":592,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["choose",{"_index":198,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["chrome",{"_index":84,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{}}}],["circumstances",{"_index":622,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["class",{"_index":1057,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["classes",{"_index":747,"title":{},"body":{"interfaces/MonitorBase.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["clean",{"_index":237,"title":{},"body":{"injectables/DndService.html":{}}}],["clearer",{"_index":1462,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["clearly",{"_index":1424,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["click",{"_index":1093,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["client",{"_index":404,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["code",{"_index":171,"title":{"additional-documentation/translating-react-code.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["codebase",{"_index":995,"title":{},"body":{"index.html":{}}}],["coll",{"_index":1604,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["collect",{"_index":1660,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["collect((props",{"_index":1680,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["collected",{"_index":172,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["color",{"_index":1352,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["colour",{"_index":1342,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["columns",{"_index":1397,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["combination",{"_index":1266,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["combine",{"_index":1686,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["comes",{"_index":1679,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["commence",{"_index":1071,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["commit",{"_index":779,"title":{},"body":{"changelog.html":{},"additional-documentation/chess-tutorial.html":{}}}],["commits",{"_index":778,"title":{},"body":{"changelog.html":{},"additional-documentation/chess-tutorial.html":{}}}],["common",{"_index":229,"title":{},"body":{"injectables/DndService.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["community",{"_index":1001,"title":{},"body":{"index.html":{}}}],["compared",{"_index":1630,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["compatibility",{"_index":12,"title":{},"body":{"interfaces/AddSubscription.html":{},"additional-documentation/quickstart.html":{}}}],["compatible",{"_index":732,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{}}}],["compilation",{"_index":62,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["complete",{"_index":1320,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["completely",{"_index":52,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["completions",{"_index":1154,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["complex",{"_index":856,"title":{},"body":{"index.html":{}}}],["component",{"_index":221,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["component's",{"_index":530,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["component.fireaction(monitor.getitem",{"_index":1638,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["component.source.gethandlerid",{"_index":1754,"title":{},"body":{"additional-documentation/testing.html":{}}}],["component.target.gethandlerid",{"_index":1755,"title":{},"body":{"additional-documentation/testing.html":{}}}],["componentfixture",{"_index":1736,"title":{},"body":{"additional-documentation/testing.html":{}}}],["components",{"_index":207,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["composing",{"_index":1664,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["comprehensive",{"_index":899,"title":{},"body":{"index.html":{}}}],["comprehensively",{"_index":1145,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["compute",{"_index":1494,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["computed",{"_index":1553,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["concept",{"_index":1657,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["concepts",{"_index":1068,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["conceptually",{"_index":1536,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["concerned",{"_index":1364,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["configuration",{"_index":90,"title":{},"body":{"interfaces/BackendInput.html":{},"index.html":{}}}],["configure",{"_index":37,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"additional-documentation/testing.html":{}}}],["configuring",{"_index":48,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["confusing",{"_index":1533,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["confusion",{"_index":709,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["connect",{"_index":496,"title":{},"body":{"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["connect.connectdragsource",{"_index":1640,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["connectdragpreview",{"_index":499,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["connectdragpreview(elementornode",{"_index":503,"title":{},"body":{"interfaces/DragSource.html":{}}}],["connectdragsource",{"_index":500,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["connectdragsource(elementornode",{"_index":519,"title":{},"body":{"interfaces/DragSource.html":{}}}],["connectdroptarget",{"_index":700,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["connectdroptarget(elementornode",{"_index":702,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["connected",{"_index":270,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["connecting",{"_index":1159,"title":{"additional-documentation/guide/2.-connecting-to-dom.html":{}},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["connection",{"_index":100,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["connection's",{"_index":1160,"title":{},"body":{"additional-documentation/guide.html":{}}}],["connection.unsubscribe",{"_index":224,"title":{},"body":{"injectables/DndService.html":{}}}],["connectionbase",{"_index":94,"title":{"interfaces/ConnectionBase.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["connectionbase.unsubscribe",{"_index":1671,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["connections",{"_index":1157,"title":{"additional-documentation/guide/1.-creating-connections.html":{}},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["connectors",{"_index":1698,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["connects",{"_index":1694,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["consider",{"_index":1050,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["considered",{"_index":671,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["console.log('dropped",{"_index":1227,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["const",{"_index":509,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["constant",{"_index":1517,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["constants",{"_index":1526,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["constants.ts",{"_index":1519,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["construct",{"_index":1726,"title":{},"body":{"additional-documentation/testing.html":{}}}],["constructor",{"_index":1220,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["constructor(private",{"_index":1171,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["constructors",{"_index":243,"title":{},"body":{"injectables/DndService.html":{}}}],["consumers",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contain",{"_index":15,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["containercomponent",{"_index":1405,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["content",{"_index":575,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["context",{"_index":68,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"miscellaneous/variables.html":{}}}],["contributors",{"_index":996,"title":{},"body":{"index.html":{}}}],["convenience",{"_index":1193,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["convenient",{"_index":113,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{}}}],["conventional",{"_index":777,"title":{},"body":{"changelog.html":{}}}],["convert",{"_index":1415,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cookie",{"_index":965,"title":{},"body":{"index.html":{}}}],["cool",{"_index":1391,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["coord",{"_index":1413,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["coord.ts",{"_index":1414,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["coordinate",{"_index":400,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/Offset.html":{}}}],["coordinates",{"_index":405,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["copy",{"_index":597,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["copying",{"_index":605,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["core",{"_index":77,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/testing.html":{}}}],["core's",{"_index":146,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["cormacrelf",{"_index":981,"title":{},"body":{"index.html":{}}}],["corollary",{"_index":274,"title":{},"body":{"injectables/DndService.html":{}}}],["correctly",{"_index":1121,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["corresponds",{"_index":606,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["couples",{"_index":659,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["course",{"_index":1626,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["coverage",{"_index":816,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":230,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["createbackend",{"_index":1108,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["created",{"_index":1211,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["creates",{"_index":260,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/translating-react-code.html":{}}}],["createtestbackend",{"_index":1733,"title":{},"body":{"additional-documentation/testing.html":{}}}],["creating",{"_index":1156,"title":{"additional-documentation/guide/1.-creating-connections.html":{}},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/testing.html":{}}}],["css",{"_index":871,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["current",{"_index":354,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["currently",{"_index":721,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"miscellaneous/variables.html":{},"additional-documentation/testing.html":{}}}],["currentposition",{"_index":1472,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cursor",{"_index":488,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["custom",{"_index":320,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["customisations",{"_index":595,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["customise",{"_index":1223,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["customize",{"_index":1610,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["cutter",{"_index":966,"title":{},"body":{"index.html":{}}}],["d",{"_index":1731,"title":{},"body":{"additional-documentation/testing.html":{}}}],["d5aa05b",{"_index":795,"title":{},"body":{"changelog.html":{}}}],["dan",{"_index":857,"title":{},"body":{"index.html":{}}}],["data",{"_index":284,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["data:image/png;base64",{"_index":1613,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dead",{"_index":1521,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["deadline",{"_index":971,"title":{},"body":{"index.html":{}}}],["debug",{"_index":72,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"miscellaneous/variables.html":{}}}],["debugging",{"_index":79,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{}}}],["decisions",{"_index":1293,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["declarations",{"_index":212,"title":{},"body":{"modules/DndModule.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["declared",{"_index":1673,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["decorating",{"_index":1659,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["decorators",{"_index":1666,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["decreased",{"_index":471,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["deep",{"_index":1359,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["default",{"_index":305,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["defer",{"_index":1714,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["define",{"_index":634,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["defined",{"_index":565,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["definitions",{"_index":1122,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["degradation",{"_index":699,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["deleting",{"_index":922,"title":{},"body":{"index.html":{}}}],["demo",{"_index":1144,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["demonstrations",{"_index":952,"title":{},"body":{"index.html":{}}}],["demos",{"_index":1633,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["depend",{"_index":1709,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dependencies",{"_index":844,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["dependency",{"_index":1735,"title":{},"body":{"additional-documentation/testing.html":{}}}],["depending",{"_index":356,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["depends",{"_index":1010,"title":{},"body":{"index.html":{}}}],["deprecated",{"_index":36,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["derive",{"_index":1273,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["describe",{"_index":1514,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["describe(mycomponent.name",{"_index":1740,"title":{},"body":{"additional-documentation/testing.html":{}}}],["described",{"_index":1718,"title":{},"body":{"additional-documentation/testing.html":{}}}],["describing",{"_index":648,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["description",{"_index":6,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"properties.html":{}}}],["designed",{"_index":341,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["desirable",{"_index":475,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["desktop",{"_index":1094,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["desktops",{"_index":1095,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["destroy",{"_index":232,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/translating-react-code.html":{}}}],["destroy.unsubscribe",{"_index":235,"title":{},"body":{"injectables/DndService.html":{}}}],["destroyed",{"_index":137,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["destroying",{"_index":1182,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["destructive",{"_index":611,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["details",{"_index":669,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/testing.html":{}}}],["detection",{"_index":690,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/testing.html":{}}}],["determine",{"_index":662,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["devices",{"_index":1091,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["diagramming",{"_index":938,"title":{},"body":{"index.html":{}}}],["diddrop",{"_index":562,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["difference",{"_index":1654,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["differences",{"_index":1627,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["different",{"_index":408,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["differently",{"_index":1742,"title":{},"body":{"additional-documentation/testing.html":{}}}],["difficult",{"_index":1573,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["directive",{"_index":273,"title":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}},"body":{"injectables/DndService.html":{},"coverage.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["directives",{"_index":420,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"changelog.html":{},"overview.html":{},"additional-documentation/guide.html":{},"additional-documentation/translating-react-code.html":{}}}],["directly",{"_index":505,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["disappears",{"_index":1507,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["discover",{"_index":1250,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["discussed",{"_index":1005,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["discussion",{"_index":729,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["dispatched",{"_index":588,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["displacement",{"_index":758,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["display",{"_index":378,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["distinctuntilchanged",{"_index":159,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["div",{"_index":1369,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["divs",{"_index":1380,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dnd",{"_index":76,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"dependencies.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["dnd's",{"_index":275,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["dnd.dragsource('item",{"_index":1646,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dnd/core",{"_index":240,"title":{},"body":{"injectables/DndService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["dnd/multi",{"_index":395,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["dnd/ng",{"_index":1019,"title":{},"body":{"properties.html":{}}}],["dnd/sortable",{"_index":869,"title":{},"body":{"index.html":{}}}],["dnddirective",{"_index":425,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["dndmodule",{"_index":87,"title":{"modules/DndModule.html":{}},"body":{"interfaces/BackendInput.html":{},"modules/DndModule.html":{},"modules.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["dndmodule.forroot",{"_index":1056,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/testing.html":{}}}],["dndservice",{"_index":108,"title":{"injectables/DndService.html":{}},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["dndservice#draglayer",{"_index":1168,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["dndservice#dragsource",{"_index":1165,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["dndservice#droptarget",{"_index":1167,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["dndservice.draglayer",{"_index":342,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["dndservice.dragsource",{"_index":1631,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dndservice.droptarget(types",{"_index":129,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["dock",{"_index":452,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{}}}],["docs",{"_index":407,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/translating-react-code.html":{}}}],["documentation",{"_index":817,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["documented",{"_index":776,"title":{},"body":{"changelog.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["doesn't",{"_index":486,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["doing",{"_index":658,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["dom",{"_index":99,"title":{"additional-documentation/guide/2.-connecting-to-dom.html":{}},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/MonitorBase.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["don't",{"_index":201,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["done",{"_index":1187,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["down",{"_index":932,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["drag",{"_index":147,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"index.html":{},"properties.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["drag/drop",{"_index":914,"title":{},"body":{"index.html":{}}}],["drag/listen",{"_index":283,"title":{},"body":{"injectables/DndService.html":{}}}],["drag_drop_backend",{"_index":834,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["drag_drop_backend_debug_mode",{"_index":836,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["drag_drop_backend_factory",{"_index":837,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["drag_drop_backend_options",{"_index":838,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["drag_drop_global_context",{"_index":839,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["drag_drop_manager",{"_index":840,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/testing.html":{}}}],["dragdropmanager",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/testing.html":{}}}],["draggable",{"_index":394,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragged",{"_index":350,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragging",{"_index":190,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["draggingclassapplied",{"_index":1743,"title":{},"body":{"additional-documentation/testing.html":{}}}],["draglayer",{"_index":255,"title":{"interfaces/DragLayer.html":{}},"body":{"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["draglayer(subscription",{"_index":258,"title":{},"body":{"injectables/DndService.html":{}}}],["draglayer.listen",{"_index":345,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["draglayermonitor",{"_index":347,"title":{"interfaces/DragLayerMonitor.html":{}},"body":{"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["dragpreview",{"_index":430,"title":{},"body":{"directives/DragPreviewDirective.html":{}}}],["dragpreview]=\"source",{"_index":1232,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragpreviewdirective",{"_index":419,"title":{"directives/DragPreviewDirective.html":{}},"body":{"directives/DragPreviewDirective.html":{},"coverage.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragpreviewoptions",{"_index":433,"title":{"interfaces/DragPreviewOptions.html":{}},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"coverage.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsource",{"_index":256,"title":{"interfaces/DragSource.html":{}},"body":{"injectables/DndService.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DropTarget.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragsource's",{"_index":560,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["dragsource('item",{"_index":1639,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dragsource(type",{"_index":263,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragsource.connectdragpreview",{"_index":1255,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsource.listen",{"_index":1539,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragsource.settype",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/translating-react-code.html":{}}}],["dragsource]=\"itemsource",{"_index":1696,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["dragsource]=\"source",{"_index":1245,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsourcedecorator",{"_index":1023,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dragsourcedirective",{"_index":548,"title":{"directives/DragSourceDirective.html":{}},"body":{"directives/DragSourceDirective.html":{},"coverage.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsourcefactory",{"_index":1025,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["dragsourcemonitor",{"_index":558,"title":{"interfaces/DragSourceMonitor.html":{}},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["dragsourcemonitor.id",{"_index":673,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["dragsourcemonitor.isdragging",{"_index":1540,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dragsourceoptions",{"_index":520,"title":{"interfaces/DragSourceOptions.html":{}},"body":{"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"coverage.html":{}}}],["dragsourcespec",{"_index":266,"title":{"interfaces/DragSourceSpec.html":{}},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["dragsourcespec.begindrag",{"_index":380,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["dragsourcetype",{"_index":549,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["dragula",{"_index":970,"title":{},"body":{"index.html":{}}}],["draw",{"_index":940,"title":{},"body":{"index.html":{}}}],["drill",{"_index":931,"title":{},"body":{"index.html":{}}}],["drive",{"_index":1428,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["drop",{"_index":289,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["drop(monitor",{"_index":731,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["dropeffect",{"_index":596,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{}}}],["dropped",{"_index":644,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["dropping",{"_index":117,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["dropresult",{"_index":267,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["drops",{"_index":1499,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptarget",{"_index":257,"title":{"interfaces/DropTarget.html":{}},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["droptarget's",{"_index":717,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["droptarget(types",{"_index":300,"title":{},"body":{"injectables/DndService.html":{}}}],["droptarget.listen",{"_index":1586,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptarget.settypes",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["droptargetdecorator",{"_index":1026,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["droptargetdirective",{"_index":704,"title":{"directives/DropTargetDirective.html":{}},"body":{"directives/DropTargetDirective.html":{},"coverage.html":{}}}],["droptargetfactory",{"_index":1027,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["droptargetmonitor",{"_index":715,"title":{"interfaces/DropTargetMonitor.html":{}},"body":{"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["droptargetmonitor.candrop",{"_index":1587,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptargetmonitor.isover",{"_index":1588,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["droptargetspec",{"_index":111,"title":{"interfaces/DropTargetSpec.html":{}},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["droptargetspec.candrop",{"_index":1268,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["droptargetspec.drop",{"_index":1299,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["droptargettype",{"_index":705,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["droptargettypes",{"_index":706,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["dt",{"_index":128,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["dt.add(subj.pipe",{"_index":139,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["dumb",{"_index":371,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["duplication",{"_index":361,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["duration",{"_index":120,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["during",{"_index":631,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["dx",{"_index":1477,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dy",{"_index":1479,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["dynamic",{"_index":294,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/translating-react-code.html":{}}}],["dynamically",{"_index":524,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["e.g",{"_index":1239,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["each",{"_index":1069,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["earlier",{"_index":1585,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["easier",{"_index":542,"title":{},"body":{"interfaces/DragSource.html":{}}}],["easily",{"_index":506,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["easy",{"_index":223,"title":{},"body":{"injectables/DndService.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/testing.html":{}}}],["editor",{"_index":1152,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["eee",{"_index":1263,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["effectively",{"_index":368,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["efficient",{"_index":1684,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["element",{"_index":271,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["element's",{"_index":1213,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["elementornode",{"_index":518,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["elementref",{"_index":1695,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["elementref.nativeelement",{"_index":508,"title":{},"body":{"interfaces/DragSource.html":{}}}],["elements",{"_index":330,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["elsewhere",{"_index":1427,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["emit",{"_index":1077,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["emits",{"_index":1522,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["empty",{"_index":485,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["emulate",{"_index":168,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["enable",{"_index":78,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{}}}],["enabled",{"_index":1112,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["enabled/disabled",{"_index":570,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["encapsulation",{"_index":1357,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["encountered",{"_index":1126,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["enddrag",{"_index":579,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["enddrag(monitor",{"_index":664,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["ends",{"_index":288,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["enough",{"_index":1361,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["enters",{"_index":888,"title":{},"body":{"index.html":{}}}],["entire",{"_index":1281,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["equality",{"_index":162,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["erasedto",{"_index":340,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["ergonomic",{"_index":903,"title":{},"body":{"index.html":{}}}],["error",{"_index":1125,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["es6",{"_index":1706,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["eslint",{"_index":797,"title":{},"body":{"changelog.html":{}}}],["especially",{"_index":1203,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["essentially",{"_index":152,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["etc",{"_index":1691,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["etcthen",{"_index":1221,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["even",{"_index":386,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["event",{"_index":577,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["events",{"_index":376,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/testing.html":{}}}],["everything",{"_index":1197,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["exact",{"_index":1727,"title":{},"body":{"additional-documentation/testing.html":{}}}],["exactly",{"_index":1287,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["example",{"_index":58,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["examples",{"_index":363,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["except",{"_index":1511,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["execute",{"_index":1487,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["executing",{"_index":1484,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["exist",{"_index":209,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["existing",{"_index":312,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["exiting",{"_index":118,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["expect",{"_index":629,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["expect(draggingclassapplied()).tobefalsy",{"_index":1764,"title":{},"body":{"additional-documentation/testing.html":{}}}],["expect(draggingclassapplied()).tobetruthy",{"_index":1758,"title":{},"body":{"additional-documentation/testing.html":{}}}],["experience",{"_index":698,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["explicitly",{"_index":590,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["export",{"_index":59,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["exported",{"_index":1105,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["exports",{"_index":213,"title":{},"body":{"modules/DndModule.html":{},"additional-documentation/quickstart.html":{}}}],["express",{"_index":1411,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["expresses",{"_index":1267,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["extended",{"_index":728,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["extends",{"_index":18,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/translating-react-code.html":{}}}],["extension",{"_index":83,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{}}}],["extra",{"_index":633,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["f8fb0df",{"_index":800,"title":{},"body":{"changelog.html":{}}}],["fact",{"_index":979,"title":{},"body":{"index.html":{}}}],["fairly",{"_index":1625,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["false",{"_index":417,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["familiar",{"_index":1318,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["famous",{"_index":933,"title":{},"body":{"index.html":{}}}],["fancy",{"_index":1453,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["far",{"_index":1689,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["faster",{"_index":972,"title":{},"body":{"index.html":{}}}],["feature",{"_index":602,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["features",{"_index":796,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["few",{"_index":929,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["figure",{"_index":1578,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["find",{"_index":975,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["finished",{"_index":1322,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["fire",{"_index":205,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["fireaction",{"_index":1643,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["fireaction(item",{"_index":1649,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["fired",{"_index":1212,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["fires",{"_index":200,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["first",{"_index":1170,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["fit",{"_index":879,"title":{},"body":{"index.html":{}}}],["five",{"_index":1667,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["fix",{"_index":787,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":357,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["fixes",{"_index":786,"title":{},"body":{"changelog.html":{}}}],["fixture",{"_index":1741,"title":{},"body":{"additional-documentation/testing.html":{}}}],["fixture.componentinstance",{"_index":1751,"title":{},"body":{"additional-documentation/testing.html":{}}}],["fixture.debugelement.query(by.css('.dragging",{"_index":1744,"title":{},"body":{"additional-documentation/testing.html":{}}}],["fixture.detectchanges",{"_index":1753,"title":{},"body":{"additional-documentation/testing.html":{}}}],["flag",{"_index":571,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["flight",{"_index":881,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["floating",{"_index":1516,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["flow",{"_index":877,"title":{},"body":{"index.html":{}}}],["flows",{"_index":334,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["fly",{"_index":539,"title":{},"body":{"interfaces/DragSource.html":{}}}],["folder",{"_index":928,"title":{},"body":{"index.html":{}}}],["follow",{"_index":331,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["following",{"_index":122,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["follows",{"_index":1230,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["font",{"_index":1332,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["foreground",{"_index":1343,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["forget",{"_index":228,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/quickstart.html":{}}}],["form",{"_index":1231,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["forroot",{"_index":70,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"modules/DndModule.html":{},"additional-documentation/quickstart.html":{}}}],["forroot(backendorbackendfactory",{"_index":215,"title":{},"body":{"modules/DndModule.html":{}}}],["forrootto",{"_index":1064,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["found",{"_index":993,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["four",{"_index":1321,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["free",{"_index":1685,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["frequently",{"_index":743,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["fresh",{"_index":1423,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["friendly",{"_index":880,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["full",{"_index":892,"title":{},"body":{"index.html":{}}}],["function",{"_index":63,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["functioning",{"_index":1669,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["functions",{"_index":396,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["funky",{"_index":1618,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["game",{"_index":1301,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gameservice",{"_index":1430,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gameservice.canmoveknight",{"_index":1495,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["gameservice.moveknight",{"_index":1463,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["general",{"_index":397,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"additional-documentation/guide.html":{}}}],["getclientoffset",{"_index":748,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getdifferencefrominitialoffset",{"_index":749,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getdropresult",{"_index":563,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["gethandlerid",{"_index":501,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["getinitialclientoffset",{"_index":750,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getinitialsourceclientoffset",{"_index":751,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getitem",{"_index":752,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getitemtype",{"_index":753,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["gets",{"_index":687,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["getsourceclientoffset",{"_index":754,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["getstyle",{"_index":1349,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["getting",{"_index":771,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["gifs",{"_index":953,"title":{},"body":{"index.html":{}}}],["github",{"_index":1006,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["give",{"_index":1457,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["given",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gives",{"_index":1682,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["glance",{"_index":1535,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["global",{"_index":327,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["gme",{"_index":1570,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["go",{"_index":1421,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["goals",{"_index":884,"title":{},"body":{"index.html":{}}}],["going",{"_index":734,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["good",{"_index":250,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["grab",{"_index":1249,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/testing.html":{}}}],["graphical",{"_index":946,"title":{},"body":{"index.html":{}}}],["green",{"_index":1582,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["greenplus",{"_index":642,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["grid",{"_index":1389,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["grouping",{"_index":184,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["groupings",{"_index":538,"title":{},"body":{"interfaces/DragSource.html":{}}}],["guidance",{"_index":1571,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["guide",{"_index":1085,"title":{"additional-documentation/guide.html":{}},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["guidelines",{"_index":780,"title":{},"body":{"changelog.html":{}}}],["habit",{"_index":251,"title":{},"body":{"injectables/DndService.html":{}}}],["handle",{"_index":393,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["handled",{"_index":507,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["handler",{"_index":1490,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["handles",{"_index":1208,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["handlesquareclick",{"_index":1483,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["handlesquareclick(pos",{"_index":1465,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["hanging",{"_index":203,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["happen",{"_index":1510,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["happens",{"_index":915,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["happily",{"_index":167,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["hard",{"_index":656,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["having",{"_index":227,"title":{},"body":{"injectables/DndService.html":{}}}],["head",{"_index":1114,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["heavy",{"_index":1565,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["height",{"_index":1338,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["help",{"_index":1000,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["helpful",{"_index":1291,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["here",{"_index":69,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["here's",{"_index":1460,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["hide",{"_index":482,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["high",{"_index":885,"title":{},"body":{"index.html":{}}}],["higher",{"_index":1655,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["highlighted",{"_index":1298,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["hinders",{"_index":1280,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["hint",{"_index":608,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["hoist",{"_index":285,"title":{},"body":{"injectables/DndService.html":{}}}],["hold",{"_index":1412,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["hook",{"_index":297,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/chess-tutorial.html":{}}}],["hooks",{"_index":1073,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["horizontal",{"_index":448,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["horse",{"_index":1619,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["host",{"_index":1368,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["hover",{"_index":115,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/testing.html":{}}}],["hover(monitor",{"_index":742,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["hovered",{"_index":725,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/testing.html":{}}}],["hovering",{"_index":722,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["hovers",{"_index":744,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["html",{"_index":1346,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["html5",{"_index":307,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["html5backend",{"_index":89,"title":{},"body":{"interfaces/BackendInput.html":{},"additional-documentation/quickstart.html":{}}}],["html5dropresult",{"_index":636,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["https",{"_index":1615,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["https://github.com/ng",{"_index":1018,"title":{},"body":{"properties.html":{}}}],["icon",{"_index":643,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["id",{"_index":384,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/testing.html":{}}}],["idea",{"_index":660,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["identical",{"_index":1584,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["identifier",{"_index":818,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":1752,"title":{},"body":{"additional-documentation/testing.html":{}}}],["ie",{"_index":480,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["ie11",{"_index":556,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["illegal",{"_index":1488,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["illustrate",{"_index":1629,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["image",{"_index":315,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["imaginary",{"_index":1119,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["imagine",{"_index":1703,"title":{},"body":{"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["img",{"_index":510,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["img.onload",{"_index":511,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["img.src",{"_index":513,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["immediate",{"_index":517,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["immediately",{"_index":461,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["implement",{"_index":910,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["implementation",{"_index":1284,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["implemented",{"_index":1092,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["implementing",{"_index":1307,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["implements",{"_index":426,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["import",{"_index":245,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["important",{"_index":387,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["importing",{"_index":1116,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["imports",{"_index":1055,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/testing.html":{}}}],["improvements",{"_index":1004,"title":{},"body":{"index.html":{}}}],["include",{"_index":1067,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["includes",{"_index":1104,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["including",{"_index":399,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["incorporate",{"_index":1564,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["independent",{"_index":1406,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indicator",{"_index":1572,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["indices",{"_index":1417,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["inferring",{"_index":621,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{}}}],["information",{"_index":492,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["initial",{"_index":759,"title":{},"body":{"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["initialized",{"_index":1063,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["initiated",{"_index":594,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{}}}],["inject",{"_index":1065,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["injectable",{"_index":218,"title":{"injectables/DndService.html":{}},"body":{"coverage.html":{},"overview.html":{},"additional-documentation/chess-tutorial.html":{}}}],["injectables",{"_index":219,"title":{},"body":{"injectables/DndService.html":{}}}],["injected",{"_index":1661,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["injection",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/testing.html":{}}}],["injectiontoken",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('dnd",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inline",{"_index":882,"title":{},"body":{"index.html":{}}}],["input",{"_index":374,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["inputs",{"_index":432,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["inside",{"_index":412,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["inspired",{"_index":1074,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["install",{"_index":1730,"title":{},"body":{"additional-documentation/testing.html":{}}}],["installation",{"_index":862,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["instance",{"_index":1066,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["instantiate",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instead",{"_index":463,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["instructions",{"_index":1130,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["interaction",{"_index":1103,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["interactions",{"_index":911,"title":{},"body":{"index.html":{},"additional-documentation/testing.html":{}}}],["interactive",{"_index":1237,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["interactivity",{"_index":375,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["interest",{"_index":1622,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["interested",{"_index":1438,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["interesting",{"_index":1509,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{}},"body":{"interfaces/DragSourceSpec.html":{},"coverage.html":{},"additional-documentation/chess-tutorial.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"index.html":{},"overview.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["internally",{"_index":109,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["internals",{"_index":281,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/translating-react-code.html":{}}}],["interpolate",{"_index":454,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["introducing",{"_index":1451,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["investigate",{"_index":1222,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["isblack",{"_index":1422,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["isdragging",{"_index":174,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["isdragging(monitor",{"_index":670,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["isdraggingobj",{"_index":1290,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["isdraggingplain",{"_index":1288,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["ish.ts",{"_index":766,"title":{},"body":{"interfaces/Offset.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["isn't",{"_index":568,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["isolate",{"_index":1722,"title":{},"body":{"additional-documentation/testing.html":{}}}],["isolation",{"_index":1719,"title":{},"body":{"additional-documentation/testing.html":{}}}],["isover",{"_index":176,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["isover(options",{"_index":718,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["issue",{"_index":999,"title":{},"body":{"index.html":{}}}],["issues",{"_index":991,"title":{},"body":{"index.html":{}}}],["it's",{"_index":649,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["it('should",{"_index":1756,"title":{},"body":{"additional-documentation/testing.html":{}}}],["item",{"_index":259,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["item's",{"_index":760,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["items",{"_index":292,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSourceOptions.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["itemsource",{"_index":1645,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["itemsourcespec",{"_index":1634,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["itemtypes",{"_index":1520,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["itemtypes.knight",{"_index":1523,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["itself",{"_index":1283,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["javascript",{"_index":647,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["jest",{"_index":1716,"title":{},"body":{"additional-documentation/testing.html":{}}}],["job",{"_index":1233,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["jones",{"_index":1218,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["js",{"_index":617,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["jsx",{"_index":1692,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["kanban",{"_index":681,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["keep",{"_index":572,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["key",{"_index":640,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["keys",{"_index":1286,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["keywords",{"_index":1015,"title":{},"body":{"properties.html":{}}}],["kinds",{"_index":1102,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["knight",{"_index":1302,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knight's",{"_index":1437,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightcomponent",{"_index":1308,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightposition",{"_index":1425,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightposition$|async",{"_index":1455,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knights",{"_index":1515,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["knightsource",{"_index":1528,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["know",{"_index":652,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["kp",{"_index":1475,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["laid",{"_index":1272,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["large",{"_index":1200,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["largely",{"_index":895,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["last",{"_index":583,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["lastly",{"_index":1609,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["later",{"_index":676,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["layer",{"_index":324,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["layers",{"_index":367,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/testing.html":{}}}],["lazy",{"_index":1060,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["leaked",{"_index":253,"title":{},"body":{"injectables/DndService.html":{}}}],["learn",{"_index":460,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["learnable",{"_index":1575,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["learning",{"_index":973,"title":{},"body":{"index.html":{}}}],["leave",{"_index":202,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["left",{"_index":453,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["let's",{"_index":1383,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["lets",{"_index":80,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragLayer.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["level",{"_index":908,"title":{},"body":{"index.html":{}}}],["libraries",{"_index":1502,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["library",{"_index":963,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["license",{"_index":1007,"title":{},"body":{"index.html":{},"properties.html":{}}}],["lifecycle",{"_index":296,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["lifetime",{"_index":299,"title":{},"body":{"injectables/DndService.html":{}}}],["lifting",{"_index":1566,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["lightgoldenrodyellow",{"_index":1264,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["lightweight",{"_index":1433,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["limitations",{"_index":311,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/translating-react-code.html":{}}}],["limitedsupplyofpaper",{"_index":1138,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["line",{"_index":1337,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["linearly",{"_index":455,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["liners",{"_index":1141,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["lines",{"_index":1611,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["link",{"_index":599,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/translating-react-code.html":{}}}],["linked",{"_index":1367,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["links",{"_index":941,"title":{},"body":{"index.html":{}}}],["list",{"_index":495,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["listen",{"_index":101,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["listen()/subscribe",{"_index":110,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["listen(m",{"_index":193,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/translating-react-code.html":{}}}],["listen(mapto",{"_index":142,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{}}}],["listens",{"_index":1723,"title":{},"body":{"additional-documentation/testing.html":{}}}],["lists",{"_index":680,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["literal",{"_index":719,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["little",{"_index":1531,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["live",{"_index":1325,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["lives",{"_index":875,"title":{},"body":{"index.html":{}}}],["load",{"_index":1252,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["loaded",{"_index":1061,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["log",{"_index":773,"title":{},"body":{"changelog.html":{}}}],["logic",{"_index":573,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["long",{"_index":1612,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["longer",{"_index":208,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["look",{"_index":1082,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["looking",{"_index":1181,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/translating-react-code.html":{}}}],["looks",{"_index":1537,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["loops",{"_index":1385,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["lot",{"_index":1080,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["lots",{"_index":225,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["lower",{"_index":907,"title":{},"body":{"index.html":{}}}],["luna",{"_index":951,"title":{},"body":{"index.html":{}}}],["m.candrop",{"_index":1596,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["m.candrop());what",{"_index":1271,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["m.isdragging",{"_index":194,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["m.isover",{"_index":1270,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["macos",{"_index":924,"title":{},"body":{"index.html":{}}}],["made",{"_index":516,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"index.html":{}}}],["maintain",{"_index":1190,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["maintaining",{"_index":983,"title":{},"body":{"index.html":{}}}],["maintains",{"_index":145,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["make",{"_index":343,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["makes",{"_index":1548,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["making",{"_index":694,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["managed",{"_index":1670,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["manager",{"_index":67,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/testing.html":{}}}],["manager.getbackend",{"_index":1749,"title":{},"body":{"additional-documentation/testing.html":{}}}],["mandated",{"_index":1628,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["manually",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/translating-react-code.html":{}}}],["many",{"_index":303,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["map",{"_index":1594,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["map(coll",{"_index":1603,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["mapto",{"_index":195,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{}}}],["marker",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":450,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["matching",{"_index":33,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["math.abs(dx",{"_index":1481,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["math.abs(dy",{"_index":1482,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["math.floor(i",{"_index":1420,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["maximally",{"_index":902,"title":{},"body":{"index.html":{}}}],["maybe",{"_index":231,"title":{},"body":{"injectables/DndService.html":{}}}],["mcfly",{"_index":1219,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["mean",{"_index":1379,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["meaning",{"_index":913,"title":{},"body":{"index.html":{}}}],["means",{"_index":451,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["merging",{"_index":927,"title":{},"body":{"index.html":{}}}],["mesource",{"_index":1216,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["metadata",{"_index":428,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["metarget",{"_index":1225,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["method",{"_index":17,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide.html":{}}}],["methods",{"_index":20,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["midflight",{"_index":317,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["minimal",{"_index":651,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["miscellaneous",{"_index":1020,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1009,"title":{},"body":{"index.html":{},"properties.html":{}}}],["mobile",{"_index":1090,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["mode",{"_index":50,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"miscellaneous/variables.html":{}}}],["model",{"_index":532,"title":{},"body":{"interfaces/DragSource.html":{}}}],["modern",{"_index":1392,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["modify",{"_index":667,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["module",{"_index":210,"title":{"modules/DndModule.html":{}},"body":{"overview.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["module's",{"_index":1340,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["modulenamemapper",{"_index":1717,"title":{},"body":{"additional-documentation/testing.html":{}}}],["modules",{"_index":211,"title":{"modules.html":{}},"body":{"modules/DndModule.html":{},"modules.html":{},"additional-documentation/quickstart.html":{}}}],["modulewithproviders",{"_index":217,"title":{},"body":{"modules/DndModule.html":{}}}],["moment",{"_index":1491,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["monitor",{"_index":130,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["monitor.candrop",{"_index":179,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["monitor.diddrop",{"_index":1143,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["monitor.getdropresult",{"_index":630,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["monitor.getitem",{"_index":618,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["monitor.isdragging",{"_index":175,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["monitor.isover",{"_index":177,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["monitor.ts",{"_index":411,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"coverage.html":{}}}],["monitorbase",{"_index":413,"title":{"interfaces/MonitorBase.html":{}},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["monitoring",{"_index":1162,"title":{"additional-documentation/guide/3.-monitoring-state.html":{}},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["monitors",{"_index":1275,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["moot",{"_index":1675,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["more",{"_index":54,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["mounted",{"_index":688,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["mouse",{"_index":332,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["movable",{"_index":919,"title":{},"body":{"index.html":{}}}],["move",{"_index":598,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["moved",{"_index":338,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["moveknight",{"_index":1501,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["moveknight(to",{"_index":1444,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["moves",{"_index":339,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["moving",{"_index":678,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["much",{"_index":1461,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["multi",{"_index":10,"title":{},"body":{"interfaces/AddSubscription.html":{},"additional-documentation/quickstart.html":{}}}],["multibackend",{"_index":93,"title":{},"body":{"interfaces/BackendInput.html":{},"additional-documentation/quickstart.html":{}}}],["multibackend(html5totouch",{"_index":1109,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["multiple",{"_index":1665,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["mutable",{"_index":958,"title":{},"body":{"index.html":{}}}],["mutate",{"_index":870,"title":{},"body":{"index.html":{}}}],["mybackend",{"_index":1124,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["mybackendfactory",{"_index":64,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["mycomponent",{"_index":1641,"title":{},"body":{"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["mydraggeditemtype",{"_index":626,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["mydropresult",{"_index":637,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["name",{"_index":27,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["named",{"_index":56,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["neat",{"_index":1185,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["necessarily",{"_index":961,"title":{},"body":{"index.html":{}}}],["necessary",{"_index":47,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/DragLayer.html":{},"index.html":{}}}],["need",{"_index":481,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["nested",{"_index":589,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["never",{"_index":1282,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["new",{"_index":41,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragSource.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["next",{"_index":464,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ng",{"_index":239,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"changelog.html":{},"index.html":{},"properties.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["ng2",{"_index":969,"title":{},"body":{"index.html":{}}}],["ngfor",{"_index":1209,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ngif",{"_index":183,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ngif=\"aaa",{"_index":1458,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ngmodule",{"_index":1054,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["ngonchanges",{"_index":431,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/translating-react-code.html":{}}}],["ngondestroy",{"_index":199,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["ngoninit",{"_index":531,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ngrx",{"_index":1434,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ngrx/store",{"_index":741,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["ngstyle",{"_index":1354,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ngswitch",{"_index":358,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["ngx",{"_index":1016,"title":{},"body":{"properties.html":{}}}],["ngzone.run",{"_index":697,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["noble",{"_index":1467,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["node",{"_index":313,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{}}}],["nodes",{"_index":942,"title":{},"body":{"index.html":{}}}],["nohtml5preview",{"_index":550,"title":{},"body":{"directives/DragSourceDirective.html":{}}}],["non",{"_index":711,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["none",{"_index":600,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["notable",{"_index":774,"title":{},"body":{"changelog.html":{}}}],["notation",{"_index":1677,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["note",{"_index":566,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"changelog.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["nothing",{"_index":733,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["notice",{"_index":1377,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["noticed",{"_index":1101,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["notified",{"_index":150,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["notifies",{"_index":665,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["notifying",{"_index":287,"title":{},"body":{"injectables/DndService.html":{}}}],["now",{"_index":352,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["null",{"_index":191,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["number",{"_index":440,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/Offset.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["o",{"_index":144,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{}}}],["object",{"_index":261,"title":{},"body":{"injectables/DndService.html":{},"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["objects",{"_index":165,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["observable",{"_index":196,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["observable.combinelatest",{"_index":1687,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["observable.map",{"_index":153,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["observables",{"_index":1590,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["observe",{"_index":1589,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["obvious",{"_index":1574,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["occur",{"_index":467,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["offer",{"_index":1169,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["offers",{"_index":1079,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/testing.html":{}}}],["offset",{"_index":445,"title":{"interfaces/Offset.html":{}},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"coverage.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["offsetx",{"_index":438,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["offsety",{"_index":439,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["once",{"_index":236,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["onchanges",{"_index":427,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["one",{"_index":154,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["ones",{"_index":1149,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["onload",{"_index":1253,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["onpush",{"_index":894,"title":{},"body":{"index.html":{}}}],["op",{"_index":1729,"title":{},"body":{"additional-documentation/testing.html":{}}}],["opacity",{"_index":472,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["operation",{"_index":415,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/MonitorBase.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["operations",{"_index":1072,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["opposed",{"_index":726,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["optimisation",{"_index":1274,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["optimise",{"_index":1278,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["optimises",{"_index":1285,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["optimization",{"_index":156,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["option",{"_index":607,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["optional",{"_index":29,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["optionally",{"_index":585,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["options",{"_index":44,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DropTargetMonitor.html":{},"miscellaneous/variables.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["optionshere",{"_index":1131,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["order",{"_index":1656,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["original",{"_index":483,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["others",{"_index":859,"title":{},"body":{"index.html":{}}}],["otherwise",{"_index":418,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["out",{"_index":861,"title":{},"body":{"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["output",{"_index":157,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"additional-documentation/translating-react-code.html":{}}}],["outside",{"_index":581,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["over",{"_index":362,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["overall",{"_index":1246,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["overlay",{"_index":1591,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["overlaystyle",{"_index":1601,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["override",{"_index":672,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["overrides",{"_index":591,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["overview",{"_index":1012,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":593,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["owner's",{"_index":564,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["package",{"_index":804,"title":{"dependencies.html":{},"properties.html":{}},"body":{"changelog.html":{},"index.html":{}}}],["packages",{"_index":868,"title":{},"body":{"index.html":{}}}],["page",{"_index":364,"title":{"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["papercount",{"_index":1137,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["parameter",{"_index":242,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["parameters",{"_index":25,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{}}}],["parent",{"_index":535,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/chess-tutorial.html":{}}}],["parentid",{"_index":533,"title":{},"body":{"interfaces/DragSource.html":{}}}],["part",{"_index":1084,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["particular",{"_index":494,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["particularly",{"_index":1297,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["parts",{"_index":1563,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["pass",{"_index":295,"title":{},"body":{"injectables/DndService.html":{},"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["passed",{"_index":614,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["paste",{"_index":1652,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["pattern",{"_index":45,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{}}}],["patterns",{"_index":1699,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["paying",{"_index":1374,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["peer",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["per",{"_index":359,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["perfectly",{"_index":1554,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["perform",{"_index":319,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DropTargetSpec.html":{}}}],["performance",{"_index":691,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["pick",{"_index":650,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["picked",{"_index":1545,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["piece",{"_index":365,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["pieces",{"_index":920,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["pipe",{"_index":1259,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["pipeline",{"_index":950,"title":{},"body":{"index.html":{}}}],["pipes",{"_index":1292,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["place",{"_index":666,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["placed",{"_index":1407,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["places",{"_index":740,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["placing",{"_index":1410,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["plain",{"_index":88,"title":{},"body":{"interfaces/BackendInput.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/Offset.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["planning",{"_index":388,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["play",{"_index":1324,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["players",{"_index":1546,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["plenty",{"_index":964,"title":{},"body":{"index.html":{}}}],["plural",{"_index":712,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["point",{"_index":1373,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["pointer",{"_index":720,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["poor",{"_index":1206,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["populated",{"_index":1713,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["posing",{"_index":1234,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["position",{"_index":355,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["possibile",{"_index":409,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["possible",{"_index":896,"title":{},"body":{"index.html":{}}}],["potential",{"_index":1003,"title":{},"body":{"index.html":{}}}],["power",{"_index":977,"title":{},"body":{"index.html":{}}}],["powered",{"_index":860,"title":{},"body":{"index.html":{}}}],["powerful",{"_index":968,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["practice",{"_index":385,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["precisely",{"_index":890,"title":{},"body":{"index.html":{}}}],["prefer",{"_index":39,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["presents",{"_index":1624,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["preserves",{"_index":1558,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["pressed",{"_index":641,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["prevent",{"_index":620,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["preview",{"_index":309,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["previews",{"_index":392,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["previously",{"_index":526,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{}}}],["primary",{"_index":1658,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["private",{"_index":1569,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["probably",{"_index":181,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["problem",{"_index":998,"title":{},"body":{"index.html":{}}}],["problems",{"_index":1098,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["procedure",{"_index":1583,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["process",{"_index":1552,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["produced",{"_index":293,"title":{},"body":{"injectables/DndService.html":{}}}],["product",{"_index":1323,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["program",{"_index":945,"title":{},"body":{"index.html":{}}}],["progress",{"_index":416,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["project",{"_index":775,"title":{},"body":{"changelog.html":{}}}],["projected",{"_index":763,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["properties",{"_index":71,"title":{"properties.html":{}},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/Offset.html":{},"properties.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["property",{"_index":528,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["props",{"_index":1635,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["props.someproperty",{"_index":1637,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["props.type",{"_index":1702,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["prospective",{"_index":1471,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["provide",{"_index":112,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{}}}],["provides",{"_index":390,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["providing",{"_index":86,"title":{},"body":{"interfaces/BackendInput.html":{}}}],["public",{"_index":254,"title":{},"body":{"injectables/DndService.html":{}}}],["pulls",{"_index":382,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["purely",{"_index":372,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["put",{"_index":654,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["queries",{"_index":278,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["query",{"_index":947,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["quick",{"_index":1632,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["quickstart",{"_index":865,"title":{"additional-documentation/quickstart.html":{}},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["quite",{"_index":967,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["rapidly",{"_index":1276,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["rare",{"_index":477,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["rarely",{"_index":474,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["re",{"_index":887,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["react",{"_index":169,"title":{"additional-documentation/translating-react-code.html":{}},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"index.html":{},"properties.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["react.component",{"_index":1642,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["react/react",{"_index":1651,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["read",{"_index":406,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["reading",{"_index":1306,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["real",{"_index":1158,"title":{},"body":{"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["really",{"_index":1378,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["rears",{"_index":1113,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["reasons",{"_index":692,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{}}}],["received",{"_index":736,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["recent",{"_index":1442,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["recently",{"_index":1760,"title":{},"body":{"additional-documentation/testing.html":{}}}],["recognises",{"_index":635,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["recommended",{"_index":1199,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["recorded",{"_index":584,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["rectangle",{"_index":1215,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["red",{"_index":1581,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["reduce",{"_index":360,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["redundant",{"_index":1452,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["redux",{"_index":82,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{}}}],["refer",{"_index":498,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/translating-react-code.html":{}}}],["reference",{"_index":161,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"changelog.html":{},"additional-documentation/translating-react-code.html":{}}}],["refers",{"_index":1146,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["reflected",{"_index":473,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["registered",{"_index":291,"title":{},"body":{"injectables/DndService.html":{}}}],["registers",{"_index":1070,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["regular",{"_index":1148,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["related",{"_index":493,"title":{},"body":{"interfaces/DragSource.html":{},"index.html":{}}}],["relative",{"_index":446,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["released",{"_index":1008,"title":{},"body":{"index.html":{}}}],["relevant",{"_index":424,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["remember",{"_index":1163,"title":{},"body":{"additional-documentation/guide.html":{}}}],["reminded",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remove",{"_index":798,"title":{},"body":{"changelog.html":{},"additional-documentation/chess-tutorial.html":{}}}],["renamed",{"_index":1690,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["renaming",{"_index":1117,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["render",{"_index":329,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["rendered",{"_index":336,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/testing.html":{}}}],["rendering",{"_index":306,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["renders",{"_index":1384,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["repeat(8",{"_index":1398,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replace",{"_index":1561,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replacing",{"_index":1489,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replay",{"_index":1441,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["replicate",{"_index":574,"title":{},"body":{"interfaces/DragSourceMonitor.html":{}}}],["repository",{"_index":1017,"title":{},"body":{"properties.html":{}}}],["represent",{"_index":98,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["representing",{"_index":582,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["represents",{"_index":7,"title":{},"body":{"interfaces/AddSubscription.html":{},"injectables/DndService.html":{},"interfaces/DropTarget.html":{}}}],["require",{"_index":121,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/testing.html":{}}}],["required",{"_index":646,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{}}}],["requires",{"_index":1106,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["resolve",{"_index":1155,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["resolving",{"_index":1127,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["resorting",{"_index":484,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["respectively",{"_index":1076,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["respond",{"_index":1161,"title":{},"body":{"additional-documentation/guide.html":{}}}],["responsible",{"_index":1309,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["rest",{"_index":1711,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["result",{"_index":578,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["result.dropeffect",{"_index":638,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["resulting",{"_index":1257,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["results",{"_index":32,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["resurrected",{"_index":677,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["retain",{"_index":683,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{}}}],["return",{"_index":66,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["returned",{"_index":136,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["returning",{"_index":586,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{}}}],["returns",{"_index":30,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragLayerMonitor.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["reusable",{"_index":767,"title":{},"body":{"interfaces/Offset.html":{}}}],["reuse",{"_index":377,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["rgba(0,0,0,0",{"_index":1606,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["right",{"_index":456,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["root",{"_index":764,"title":{},"body":{"interfaces/MonitorBase.html":{},"additional-documentation/quickstart.html":{}}}],["rows",{"_index":1400,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["ruin",{"_index":1555,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["rules",{"_index":921,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["run",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{}}}],["runs",{"_index":134,"title":{},"body":{"interfaces/ConnectionBase.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{}}}],["rxjs",{"_index":8,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"dependencies.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["rxjs/operators",{"_index":1595,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["sake",{"_index":1402,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["same",{"_index":23,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["sane",{"_index":1075,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["save",{"_index":1256,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["scalars",{"_index":163,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["scope",{"_index":1450,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["screen",{"_index":1240,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["screenshot",{"_index":314,"title":{},"body":{"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["screenshotting",{"_index":466,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["seamlessly",{"_index":1099,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["seconds",{"_index":930,"title":{},"body":{"index.html":{}}}],["section",{"_index":1341,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["see",{"_index":73,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetSpec.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["seem",{"_index":1503,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["seen",{"_index":1577,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["selecting",{"_index":1242,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["selector",{"_index":429,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{},"additional-documentation/chess-tutorial.html":{}}}],["sense",{"_index":1381,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["sensible",{"_index":476,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["separate",{"_index":369,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["separated",{"_index":1492,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["serves",{"_index":1518,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["service",{"_index":1446,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["set",{"_index":277,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTarget.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["setdroptargettype(t",{"_index":713,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["setting",{"_index":552,"title":{},"body":{"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["settype",{"_index":502,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/translating-react-code.html":{}}}],["settype(type",{"_index":523,"title":{},"body":{"interfaces/DragSource.html":{}}}],["settype/settypes",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settypes",{"_index":701,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["settypes(type",{"_index":703,"title":{},"body":{"interfaces/DropTarget.html":{}}}],["shallow",{"_index":723,"title":{},"body":{"interfaces/DropTargetMonitor.html":{}}}],["shallowequal",{"_index":164,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["shortcut",{"_index":551,"title":{},"body":{"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{}}}],["shorthand",{"_index":1140,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["shouldn't",{"_index":693,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{}}}],["show",{"_index":1153,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["showoverlay",{"_index":1597,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["shows",{"_index":604,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"additional-documentation/quickstart.html":{}}}],["sick",{"_index":982,"title":{},"body":{"index.html":{}}}],["sidebar",{"_index":1086,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["similar",{"_index":674,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["simple",{"_index":220,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSourceMonitor.html":{},"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["simpler",{"_index":737,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["simply",{"_index":244,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["simulate",{"_index":521,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["simulation",{"_index":1724,"title":{},"body":{"additional-documentation/testing.html":{}}}],["single",{"_index":1202,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["situations",{"_index":1189,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["sixtyfour",{"_index":1386,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["size",{"_index":1335,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["sized",{"_index":1205,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["sizes",{"_index":449,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["slash",{"_index":789,"title":{},"body":{"changelog.html":{}}}],["slightly",{"_index":1532,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["small",{"_index":155,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/translating-react-code.html":{}}}],["smaller",{"_index":1236,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["smart",{"_index":370,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["solid",{"_index":1396,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["solution",{"_index":1449,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["solutions",{"_index":904,"title":{},"body":{"index.html":{}}}],["solve",{"_index":1097,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["somebackend",{"_index":43,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"additional-documentation/quickstart.html":{}}}],["somedragsourceconnection.connectdragpreview(img",{"_index":1254,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["someimaginarybackendwithnamedexports",{"_index":1118,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["someone",{"_index":1576,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["someproperty",{"_index":1636,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["something",{"_index":348,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["sometimes",{"_index":318,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["somewhere",{"_index":383,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["sortable",{"_index":957,"title":{},"body":{"index.html":{}}}],["source",{"_index":268,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["source's",{"_index":739,"title":{},"body":{"interfaces/DropTargetSpec.html":{}}}],["sources",{"_index":302,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["space",{"_index":1362,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["span",{"_index":1328,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["spec",{"_index":125,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["spec.hover",{"_index":132,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["spec.hover(monitor",{"_index":133,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["special",{"_index":325,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/quickstart.html":{}}}],["specific",{"_index":912,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["specification.ts",{"_index":613,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"coverage.html":{}}}],["specifics",{"_index":1087,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["specified",{"_index":119,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DropTargetSpec.html":{},"miscellaneous/variables.html":{},"additional-documentation/translating-react-code.html":{}}}],["specifies",{"_index":444,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["specify",{"_index":423,"title":{},"body":{"directives/DragPreviewDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/guide.html":{},"additional-documentation/chess-tutorial.html":{}}}],["specifying",{"_index":603,"title":{},"body":{"interfaces/DragSourceOptions.html":{}}}],["specs",{"_index":1136,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["spirit",{"_index":1579,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["spot",{"_index":337,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["square",{"_index":1313,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["squarecomponent",{"_index":1310,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["squarecomponents",{"_index":1493,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["squares",{"_index":1316,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["src/.../tokens.ts",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../type",{"_index":1028,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../wrappers.ts",{"_index":1024,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/connection",{"_index":95,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"coverage.html":{}}}],["src/connector.service.ts",{"_index":5,"title":{},"body":{"interfaces/AddSubscription.html":{},"injectables/DndService.html":{},"coverage.html":{}}}],["src/connectors.ts",{"_index":434,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceOptions.html":{},"coverage.html":{}}}],["src/dnd.directive.ts",{"_index":421,"title":{},"body":{"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"directives/DropTargetDirective.html":{},"coverage.html":{}}}],["src/dnd.module.ts",{"_index":35,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"modules/DndModule.html":{},"coverage.html":{}}}],["src/drag",{"_index":612,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"coverage.html":{}}}],["src/drop",{"_index":727,"title":{},"body":{"interfaces/DropTargetSpec.html":{},"coverage.html":{}}}],["src/layer",{"_index":410,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"coverage.html":{}}}],["src/monitor",{"_index":745,"title":{},"body":{"interfaces/MonitorBase.html":{},"coverage.html":{}}}],["src/source",{"_index":559,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"coverage.html":{}}}],["src/target",{"_index":716,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"coverage.html":{}}}],["src/tokens.ts",{"_index":833,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/type",{"_index":765,"title":{},"body":{"interfaces/Offset.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/wrappers.ts",{"_index":1029,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["stage",{"_index":1551,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["stamping",{"_index":925,"title":{},"body":{"index.html":{}}}],["standard",{"_index":13,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["start",{"_index":335,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["started",{"_index":351,"title":{"changelog.html":{},"index.html":{}},"body":{"interfaces/DragLayer.html":{},"interfaces/MonitorBase.html":{}}}],["starts",{"_index":462,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["state",{"_index":148,"title":{"additional-documentation/guide/3.-monitoring-state.html":{}},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["statements",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":214,"title":{},"body":{"modules/DndModule.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["statically",{"_index":1128,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["stationary",{"_index":1538,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["step",{"_index":1508,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["steps",{"_index":1081,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["still",{"_index":1408,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["store",{"_index":1172,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["strange",{"_index":1183,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["strategy",{"_index":1496,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["strictly",{"_index":724,"title":{},"body":{"interfaces/DropTargetMonitor.html":{},"index.html":{}}}],["string",{"_index":264,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/MonitorBase.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["strings",{"_index":1705,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["string|symbol",{"_index":1708,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["strong",{"_index":624,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{}}}],["structure",{"_index":1207,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["struggle",{"_index":986,"title":{},"body":{"index.html":{}}}],["style",{"_index":170,"title":{},"body":{"interfaces/ConnectionBase.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["styles",{"_index":1331,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["styling",{"_index":470,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["sub",{"_index":867,"title":{},"body":{"index.html":{}}}],["subj",{"_index":126,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subj.next",{"_index":131,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subject",{"_index":127,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["subs",{"_index":1194,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["subscribe",{"_index":192,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["subscribe(callback",{"_index":140,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subscriber",{"_index":326,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["subscribers",{"_index":1443,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["subscribes",{"_index":1683,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["subscribing",{"_index":491,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["subscription",{"_index":9,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["subscription#add",{"_index":24,"title":{},"body":{"interfaces/AddSubscription.html":{}}}],["subscription.add",{"_index":104,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["subscription.add(conn",{"_index":1192,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["subscriptionlike",{"_index":14,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{}}}],["subscriptions",{"_index":185,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["successful",{"_index":1500,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["such",{"_index":478,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["suffice",{"_index":308,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["sufficient",{"_index":663,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["sufficiently",{"_index":1150,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["superpowers",{"_index":962,"title":{},"body":{"index.html":{}}}],["supplied",{"_index":381,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"miscellaneous/variables.html":{}}}],["supplies",{"_index":1681,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["supply",{"_index":1701,"title":{},"body":{"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["supplying",{"_index":1720,"title":{},"body":{"additional-documentation/testing.html":{}}}],["support",{"_index":487,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"additional-documentation/quickstart.html":{}}}],["supports",{"_index":241,"title":{},"body":{"injectables/DndService.html":{}}}],["sure",{"_index":344,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["switch",{"_index":1100,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["symbol",{"_index":265,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/MonitorBase.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{}}}],["symbols",{"_index":1707,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["syntax",{"_index":1135,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["t",{"_index":714,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["table",{"_index":843,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":842,"title":{},"body":{"coverage.html":{}}}],["tags",{"_index":1345,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["take",{"_index":891,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["target",{"_index":246,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["target(s",{"_index":1761,"title":{},"body":{"additional-documentation/testing.html":{}}}],["targets",{"_index":290,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["taste",{"_index":978,"title":{},"body":{"index.html":{}}}],["tear",{"_index":1173,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["teardown",{"_index":141,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["teardownlogic",{"_index":22,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{}}}],["technically",{"_index":686,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["tedious",{"_index":226,"title":{},"body":{"injectables/DndService.html":{}}}],["tell",{"_index":1534,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["template",{"_index":187,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"directives/DropTargetDirective.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["template's",{"_index":1693,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["templates",{"_index":873,"title":{},"body":{"index.html":{}}}],["tempted",{"_index":653,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["ten",{"_index":1188,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["terms",{"_index":1688,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["test",{"_index":580,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/testing.html":{}}}],["testable",{"_index":1721,"title":{},"body":{"additional-documentation/testing.html":{}}}],["testbackend",{"_index":1734,"title":{},"body":{"additional-documentation/testing.html":{}}}],["testbed",{"_index":1737,"title":{},"body":{"additional-documentation/testing.html":{}}}],["testbed.configuretestingmodule",{"_index":1746,"title":{},"body":{"additional-documentation/testing.html":{}}}],["testbed.createcomponent(mycomponent",{"_index":1750,"title":{},"body":{"additional-documentation/testing.html":{}}}],["testbed.get(drag_drop_manager",{"_index":1748,"title":{},"body":{"additional-documentation/testing.html":{}}}],["testing",{"_index":522,"title":{"additional-documentation/testing.html":{}},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/testing.html":{}}}],["tests",{"_index":1728,"title":{},"body":{"additional-documentation/testing.html":{}}}],["text",{"_index":1243,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["that's",{"_index":497,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/quickstart.html":{}}}],["there's",{"_index":989,"title":{},"body":{"index.html":{}}}],["therefore",{"_index":1674,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["thing",{"_index":988,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["things",{"_index":906,"title":{},"body":{"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["think",{"_index":992,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["this.black",{"_index":1350,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.cat.id",{"_index":1175,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.collected$.pipe",{"_index":1602,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.collected$.pipe(map(c",{"_index":1598,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.currentposition",{"_index":1474,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.destroy",{"_index":248,"title":{},"body":{"injectables/DndService.html":{}}}],["this.destroy.add(xxx.subscribe",{"_index":233,"title":{},"body":{"injectables/DndService.html":{}}}],["this.destroy.unsubscribe",{"_index":249,"title":{},"body":{"injectables/DndService.html":{}}}],["this.dnd.dragsource",{"_index":627,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.dnd.dragsource(\"cat",{"_index":1174,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.dnd.dragsource('dragme",{"_index":1217,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["this.dnd.dragsource('paper",{"_index":1139,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["this.dnd.dragsource('test",{"_index":1765,"title":{},"body":{"additional-documentation/testing.html":{}}}],["this.dnd.dragsource(itemtypes.knight",{"_index":1529,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.dnd.dragsource(null",{"_index":534,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.dnd.droptarget",{"_index":247,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSourceSpec.html":{}}}],["this.dnd.droptarget('cat",{"_index":1265,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["this.dnd.droptarget('dragme",{"_index":1226,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["this.dnd.droptarget('test",{"_index":1766,"title":{},"body":{"additional-documentation/testing.html":{}}}],["this.dnd.droptarget([\"cat",{"_index":1176,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.dnd.droptarget(itemtypes.knight",{"_index":1562,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.fireaction(monitor.getitem",{"_index":1647,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.game.canmoveknight(pos",{"_index":1485,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.canmoveknight(this.position",{"_index":1567,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.knightposition",{"_index":1447,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.moveknight(pos",{"_index":1466,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.game.moveknight(this.position",{"_index":1568,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.id",{"_index":628,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["this.itemsource.destroy",{"_index":1650,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.itemsource.listen(monitor",{"_index":1648,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.knightposition$.next(to",{"_index":1445,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightposition$.subscribe(kp",{"_index":1473,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightsource.connectdragpreview(img",{"_index":1617,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightsource.listen(monitor",{"_index":1541,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.knightsource.unsubscribe",{"_index":1530,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.layer.unsubscribe",{"_index":1184,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.method",{"_index":1133,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["this.model.parentid.tostring",{"_index":541,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.notation",{"_index":1678,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.papercount",{"_index":1142,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["this.position",{"_index":1560,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["this.props",{"_index":1644,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["this.someproperty",{"_index":576,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"additional-documentation/translating-react-code.html":{}}}],["this.source.connectdragpreview(img",{"_index":512,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.source.listen(m",{"_index":1289,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/testing.html":{}}}],["this.source.settype(t",{"_index":546,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.source.unsubscribe",{"_index":1178,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/testing.html":{}}}],["this.subs",{"_index":1195,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.subs.add(myservice.subscribe",{"_index":1196,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.subs.unsubscribe",{"_index":1198,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["this.target.listen(m",{"_index":1269,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["this.target.listen(monitor",{"_index":173,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["this.target.settype(\"parent_",{"_index":540,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.target.settype(this.type",{"_index":537,"title":{},"body":{"interfaces/DragSource.html":{}}}],["this.target.unsubscribe",{"_index":1179,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/testing.html":{}}}],["those",{"_index":151,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["though",{"_index":685,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["three",{"_index":1164,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["through",{"_index":158,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["throw",{"_index":1464,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["tick",{"_index":465,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["tie",{"_index":298,"title":{},"body":{"injectables/DndService.html":{}}}],["time",{"_index":398,"title":{},"body":{"interfaces/DragLayer.html":{},"interfaces/DragSourceSpec.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{}}}],["timely",{"_index":401,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["times",{"_index":280,"title":{},"body":{"injectables/DndService.html":{},"index.html":{}}}],["tiny",{"_index":1300,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["tmonitor",{"_index":143,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["to.x",{"_index":1478,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["to.y",{"_index":1480,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["token",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["told",{"_index":536,"title":{},"body":{"interfaces/DragSource.html":{}}}],["tons",{"_index":900,"title":{},"body":{"index.html":{}}}],["tool",{"_index":939,"title":{},"body":{"index.html":{}}}],["toolkit",{"_index":854,"title":{},"body":{"index.html":{}}}],["top",{"_index":458,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["touch",{"_index":1052,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["touchbackend",{"_index":92,"title":{},"body":{"interfaces/BackendInput.html":{},"additional-documentation/quickstart.html":{}}}],["touching",{"_index":1241,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["traditional",{"_index":917,"title":{},"body":{"index.html":{}}}],["transit",{"_index":762,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["translate",{"_index":897,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["translated",{"_index":447,"title":{},"body":{"interfaces/DragPreviewOptions.html":{}}}],["translating",{"_index":898,"title":{"additional-documentation/translating-react-code.html":{}},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["translation",{"_index":1303,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["transparent",{"_index":1543,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["trapped",{"_index":1429,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["trash",{"_index":923,"title":{},"body":{"index.html":{}}}],["trello.com",{"_index":935,"title":{},"body":{"index.html":{}}}],["trick",{"_index":1454,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["triple",{"_index":788,"title":{},"body":{"changelog.html":{}}}],["troubleshooting",{"_index":1110,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["true",{"_index":414,"title":{},"body":{"interfaces/DragLayerMonitor.html":{},"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["truth",{"_index":874,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{}}}],["truthy",{"_index":1456,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["try",{"_index":655,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["trying",{"_index":1725,"title":{},"body":{"additional-documentation/testing.html":{}}}],["tslib",{"_index":794,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["tslint",{"_index":799,"title":{},"body":{"changelog.html":{}}}],["turn",{"_index":1497,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["turning",{"_index":1360,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["tutorial",{"_index":866,"title":{"additional-documentation/chess-tutorial.html":{}},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["two",{"_index":615,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["type",{"_index":28,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"modules/DndModule.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"interfaces/MonitorBase.html":{},"interfaces/Offset.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["type(s",{"_index":1704,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["type(t",{"_index":545,"title":{},"body":{"interfaces/DragSource.html":{}}}],["type_dynamic",{"_index":841,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1021,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typed",{"_index":525,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["typeerror",{"_index":1111,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["typeortypearray",{"_index":301,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"miscellaneous/typealiases.html":{}}}],["types",{"_index":124,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragSource.html":{},"changelog.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["types.ts",{"_index":96,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"coverage.html":{}}}],["typescript",{"_index":619,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/quickstart.html":{}}}],["typical",{"_index":1662,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["typically",{"_index":328,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["typing",{"_index":625,"title":{},"body":{"interfaces/DragSourceSpec.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["typo",{"_index":708,"title":{},"body":{"directives/DropTargetDirective.html":{}}}],["ui",{"_index":1238,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["ultra",{"_index":1432,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["undefined",{"_index":1115,"title":{},"body":{"additional-documentation/quickstart.html":{}}}],["under",{"_index":353,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{}}}],["underlying",{"_index":1559,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["understand",{"_index":543,"title":{},"body":{"interfaces/DragSource.html":{}}}],["understandable",{"_index":1623,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["unicode",{"_index":1329,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["unidirectional",{"_index":876,"title":{},"body":{"index.html":{}}}],["unique",{"_index":1228,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["unlike",{"_index":1440,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["unmounted",{"_index":675,"title":{},"body":{"interfaces/DragSourceSpec.html":{}}}],["unnecessary",{"_index":53,"title":{},"body":{"interfaces/BackendFactoryInput.html":{}}}],["unsubscribe",{"_index":102,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["unsubscribed",{"_index":515,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{}}}],["unsubscribing",{"_index":222,"title":{},"body":{"injectables/DndService.html":{},"additional-documentation/guide/1.-creating-connections.html":{}}}],["until",{"_index":135,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/translating-react-code.html":{}}}],["unwanted",{"_index":1244,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["up",{"_index":238,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetMonitor.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["update",{"_index":527,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/translating-react-code.html":{}}}],["updated",{"_index":402,"title":{},"body":{"interfaces/DragLayer.html":{}}}],["updates",{"_index":1279,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["url",{"_index":1614,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["urls",{"_index":1616,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["usable",{"_index":1296,"title":{},"body":{"additional-documentation/guide/3.-monitoring-state.html":{}}}],["usage",{"_index":1715,"title":{},"body":{"additional-documentation/testing.html":{}}}],["use",{"_index":60,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["used",{"_index":46,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["useful",{"_index":105,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["user",{"_index":609,"title":{},"body":{"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{}}}],["users",{"_index":985,"title":{},"body":{"index.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["uses",{"_index":937,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["using",{"_index":40,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"directives/DragSourceDirective.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["usually",{"_index":504,"title":{},"body":{"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["valid",{"_index":1580,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["value",{"_index":489,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"directives/DragSourceDirective.html":{},"miscellaneous/variables.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["values",{"_index":960,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["vanish",{"_index":1512,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["variable",{"_index":188,"title":{},"body":{"interfaces/ConnectionBase.html":{},"coverage.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{}}}],["variables",{"_index":1030,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["variably",{"_index":1204,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["vector",{"_index":757,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["version",{"_index":11,"title":{},"body":{"interfaces/AddSubscription.html":{},"directives/DropTargetDirective.html":{},"changelog.html":{},"properties.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["vertical",{"_index":457,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["very",{"_index":569,"title":{},"body":{"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"index.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["via",{"_index":138,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragSource.html":{},"interfaces/DropTarget.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["view",{"_index":1356,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["viewport",{"_index":756,"title":{},"body":{"interfaces/MonitorBase.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["visible",{"_index":872,"title":{},"body":{"index.html":{}}}],["visual",{"_index":949,"title":{},"body":{"index.html":{}}}],["visuals",{"_index":373,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["void",{"_index":31,"title":{},"body":{"interfaces/AddSubscription.html":{},"interfaces/ConnectionBase.html":{},"interfaces/DragLayer.html":{},"directives/DragPreviewDirective.html":{},"interfaces/DragSource.html":{},"directives/DragSourceDirective.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTarget.html":{},"directives/DropTargetDirective.html":{},"interfaces/DropTargetSpec.html":{}}}],["voil",{"_index":1486,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["vs",{"_index":1147,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["vue",{"_index":990,"title":{},"body":{"index.html":{}}}],["wait",{"_index":1251,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["want",{"_index":182,"title":{},"body":{"interfaces/ConnectionBase.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragPreviewOptions.html":{},"interfaces/DragSource.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetSpec.html":{},"index.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/guide/3.-monitoring-state.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["wanting",{"_index":976,"title":{},"body":{"index.html":{}}}],["warned",{"_index":974,"title":{},"body":{"index.html":{}}}],["watching",{"_index":984,"title":{},"body":{"index.html":{}}}],["way",{"_index":1062,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{},"additional-documentation/testing.html":{}}}],["ways",{"_index":1191,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["we'll",{"_index":1327,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["we're",{"_index":1186,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["wealth",{"_index":997,"title":{},"body":{"index.html":{}}}],["web",{"_index":1620,"title":{},"body":{"additional-documentation/translating-react-code.html":{}}}],["weight",{"_index":1333,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["weird",{"_index":1505,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["well",{"_index":1053,"title":{},"body":{"additional-documentation/quickstart.html":{},"additional-documentation/chess-tutorial.html":{}}}],["what's",{"_index":1524,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["whatever",{"_index":1344,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["whether",{"_index":75,"title":{},"body":{"interfaces/BackendFactoryInput.html":{},"interfaces/BackendInput.html":{},"injectables/DndService.html":{},"interfaces/DragLayer.html":{},"interfaces/DragSourceMonitor.html":{},"interfaces/DragSourceOptions.html":{},"interfaces/DragSourceSpec.html":{},"interfaces/DropTargetMonitor.html":{},"interfaces/DropTargetSpec.html":{},"additional-documentation/chess-tutorial.html":{}}}],["white",{"_index":1312,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["whole",{"_index":1210,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{},"additional-documentation/chess-tutorial.html":{}}}],["width",{"_index":1370,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["wish",{"_index":529,"title":{},"body":{"interfaces/DragSource.html":{},"additional-documentation/guide/3.-monitoring-state.html":{}}}],["within",{"_index":1224,"title":{},"body":{"additional-documentation/guide/2.-connecting-to-dom.html":{}}}],["without",{"_index":116,"title":{},"body":{"interfaces/ConnectionBase.html":{},"interfaces/DragPreviewOptions.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/guide/2.-connecting-to-dom.html":{},"additional-documentation/chess-tutorial.html":{}}}],["won't",{"_index":490,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"additional-documentation/chess-tutorial.html":{}}}],["work",{"_index":479,"title":{},"body":{"interfaces/DragPreviewOptions.html":{},"index.html":{},"additional-documentation/chess-tutorial.html":{}}}],["works",{"_index":883,"title":{},"body":{"index.html":{},"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["worth",{"_index":1305,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["wrap",{"_index":1390,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["wrapper",{"_index":1557,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["wrapper(dndservice",{"_index":123,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["wrappers",{"_index":107,"title":{},"body":{"interfaces/ConnectionBase.html":{}}}],["wrapping",{"_index":1393,"title":{},"body":{"additional-documentation/chess-tutorial.html":{},"additional-documentation/translating-react-code.html":{}}}],["write",{"_index":544,"title":{},"body":{"interfaces/DragSource.html":{}}}],["writing",{"_index":106,"title":{},"body":{"interfaces/ConnectionBase.html":{},"additional-documentation/chess-tutorial.html":{}}}],["written",{"_index":901,"title":{},"body":{"index.html":{},"additional-documentation/translating-react-code.html":{}}}],["x",{"_index":769,"title":{},"body":{"interfaces/Offset.html":{},"additional-documentation/chess-tutorial.html":{}}}],["x,y",{"_index":755,"title":{},"body":{"interfaces/MonitorBase.html":{}}}],["xy",{"_index":768,"title":{},"body":{"interfaces/Offset.html":{}}}],["xy(i",{"_index":1418,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["y",{"_index":770,"title":{},"body":{"interfaces/Offset.html":{},"additional-documentation/chess-tutorial.html":{}}}],["yarn",{"_index":863,"title":{},"body":{"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/testing.html":{}}}],["yellow",{"_index":1607,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["yes",{"_index":262,"title":{},"body":{"injectables/DndService.html":{},"interfaces/DragSource.html":{},"interfaces/DropTargetMonitor.html":{}}}],["you'd",{"_index":1525,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["you'll",{"_index":1376,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["you're",{"_index":322,"title":{},"body":{"interfaces/DragLayer.html":{},"additional-documentation/chess-tutorial.html":{}}}],["you've",{"_index":1544,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["yourself",{"_index":323,"title":{},"body":{"interfaces/DragLayer.html":{},"index.html":{},"additional-documentation/quickstart.html":{},"additional-documentation/translating-react-code.html":{}}}],["zebra",{"_index":1177,"title":{},"body":{"additional-documentation/guide/1.-creating-connections.html":{}}}],["zindex",{"_index":1608,"title":{},"body":{"additional-documentation/chess-tutorial.html":{}}}],["zone",{"_index":886,"title":{},"body":{"index.html":{}}}],["zone.js",{"_index":852,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddSubscription.html":{"url":"interfaces/AddSubscription.html","title":"interface - AddSubscription","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddSubscription\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connector.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents an RxJS Subscription, with multi-version compatibility.\nThe standard SubscriptionLike does not contain an add() method.\n\n            \n\n            \n                Extends\n            \n            \n                    SubscriptionLike\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        add\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(teardownLogic: TeardownLogic)\n                \n            \n\n\n\n\n            \n                \n                    Same as RxJS Subscription#add\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teardownLogic\n                                    \n                                            TeardownLogic\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendFactoryInput.html":{"url":"interfaces/BackendFactoryInput.html","title":"interface - BackendFactoryInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BackendFactoryInput\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.module.ts\n        \n\n\n            \n                Description\n            \n            \n                DEPRECATED / @deprecated\nTo configure backends, prefer using the new { backend: SomeBackend, options: { ... } } pattern.\nThis used to be necessary for configuring backends in AOT mode, but with the new API,\nit is completely unnecessary.\nThis would be more aptly named as 'backendFactoryFactory'. Example:\n// must export for use with Angular's AOT compilation.\nexport function MyBackendFactory(): BackendFactory {\n    return (manager, context) => SomeBackend({ options: \"here\" })(manager, context);\n}\nforRoot({ backendFactory: MyBackendFactory })\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            backendFactory\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            debug\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backendFactory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backendFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    DEPRECATED / @deprecated\nTo configure backends, prefer using the new { backend: SomeBackend, options: { ... } }\npattern. See BackendFactoryInput\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether dnd-core should enable debugging, which lets you see dnd-core actions\nin the Redux extension for Chrome.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BackendInput.html":{"url":"interfaces/BackendInput.html","title":"interface - BackendInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BackendInput\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Used for providing backends to DndModule.\nYou can configure your backend with options.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            backend\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            debug\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        backend\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        backend:     BackendFactory\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     BackendFactory\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A plain backend, for example the HTML5Backend.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        debug\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        debug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Whether dnd-core should enable debugging, which lets you see dnd-core actions\nin the Redux extension for Chrome.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Any configuration your backend accepts. Use this with the TouchBackend or the MultiBackend,\nfor example.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConnectionBase.html":{"url":"interfaces/ConnectionBase.html","title":"interface - ConnectionBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConnectionBase\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n\n            \n                Description\n            \n            \n                A base type to represent a DOM connection.\n\n            \n\n            \n                Extends\n            \n            \n                    SubscriptionLike\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        add\n                                    \n                                \n                                \n                                    \n                                        listen\n                                    \n                                \n                                \n                                    \n                                        unsubscribe\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        add\n                        \n                    \n                \n            \n            \n                \nadd(teardown: TeardownLogic)\n                \n            \n\n\n\n\n            \n                \n                    Same as RxJS Subscription.add().\nUseful, for example, for writing wrappers for the DndService methods,\nwhich might internally listen()/subscribe to DropTargetSpec and provide\na convenient callback after you hover without dropping or exiting for a specified\nduration. That would require the following pattern:\nfunction wrapper(dndService, types, spec, callback) {\n  let subj = new Subject();\n  let dt = dndService.dropTarget(types, {\n      ...spec,\n      hover: monitor => {\n      subj.next();\n      spec.hover && spec.hover(monitor);\n    }\n  });\n  // runs the callback until the returned connection\n  // is destroyed via unsubscribe()\n  dt.add(subj.pipe( ... ).subscribe(callback))\n  return dt;\n}\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teardown\n                                    \n                                            TeardownLogic\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten(mapTo: (monitor: TMonitor) => void)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        O\n                    \n                \n            \n\n            \n                \n                    A connection maintains a subscription to dnd-core's drag state\nchanges. This function is how you are notified of those changes.\nThis function is essentially RxJS Observable.map with one small\noptimization: it runs the output of\nthe function you provide through distinctUntilChanged, and checks\nreference equality (===) for scalars and shallowEqual for Objects.\nBecause of #2, you can happily emulate react-dnd-style code like:\ncollected$ = this.target.listen(monitor => ({\n  isDragging: monitor.isDragging(),\n  isOver: monitor.isOver(),\n  canDrop: monitor.canDrop()\n}));... in which case you probably want to use the *ngIf as pattern for\n grouping subscriptions into one bound template variable:\n\n  {{c.isDragging ? 'dragging': null}}\n  ...\nYou can also subscribe one-by-one, with isDragging$ = listen(m => m.isDragging()).\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapTo\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribe\n                        \n                    \n                \n            \n            \n                \nunsubscribe()\n                \n            \n\n\n\n\n            \n                \n                    This method MUST be called, however you choose to, when ngOnDestroy() fires.\nIf you don't, you will leave subscriptions hanging around that will fire\ncallbacks on components that no longer exist.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DndModule.html":{"url":"modules/DndModule.html","title":"module - DndModule","body":"\n                   \n\n\n\n\n    Modules\n    DndModule\n\n\n\n\n    \n        Info\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/dnd.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EXPORTS\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EXPORTS\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(backendOrBackendFactory: BackendInput | BackendFactoryInput)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    backendOrBackendFactory\n                                    \n                                            BackendInput | BackendFactoryInput\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DndService.html":{"url":"injectables/DndService.html","title":"injectable - DndService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  DndService\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connector.service.ts\n        \n\n\n            \n                Description\n            \n            \n                For a simple component, unsubscribing is as easy as connection.unsubscribe() in ngOnDestroy()\nIf your components have lots of subscriptions, it can get tedious having to\nunsubscribe from all of them, and you might forget. A common pattern is to create an RxJS Subscription\n(maybe called destroy), to use this.destroy.add(xxx.subscribe(...))\nand to call destroy.unsubscribe() once to clean up all of them. @ng-dnd/core\nsupports this pattern with by using the subscription parameter on the\nconstructors. Simply:\nimport { Subscription } from 'rxjs';\n// ...\ndestroy = new Subscription();\ntarget = this.dnd.dropTarget({\n  // ...\n}, this.destroy);\nngOnDestroy() { this.destroy.unsubscribe(); }It is a good habit for avoiding leaked subscriptions, because .\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dragLayer\n                            \n                            \n                                    Public\n                                dragSource\n                            \n                            \n                                    Public\n                                dropTarget\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dragLayer\n                        \n                    \n                \n            \n            \n                \n                    \n                    dragLayer(subscription?: AddSubscription)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        Item\n                    \n                \n            \n\n            \n                \n                    This method creates a DragLayer object\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subscription\n                                    \n                                                AddSubscription\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DragLayer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dragSource\n                        \n                    \n                \n            \n            \n                \n                    \n                    dragSource(type: string | symbol | null, spec: DragSourceSpec, subscription?: AddSubscription)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        Item\n                        DropResult\n                    \n                \n            \n\n            \n                \n                    This method creates a DragSource object. It represents a drag\nsource and its behaviour, and can be connected to a DOM element by\nassigning it to the [dragSource] directive on that element in your\ntemplate.\nIt is the corollary of react-dnd's\nDragSource.\nThe spec argument (DragSourceSpec) is a set of queries and\ncallbacks that are called at appropriate times by the internals. The\nqueries are for asking your component whether to drag/listen and what\nitem data to hoist up; the callback (just 1) is for notifying you when\nthe drag ends.\nOnly the drop targets registered for the same type will\nreact to the items produced by this drag source. If you want a dynamic\ntype, pass null as the type; and call DragSource in\na lifecycle hook.\nconnection to.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            string | symbol | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    spec\n                                    \n                                            DragSourceSpec\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    subscription\n                                    \n                                                AddSubscription\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                    \n                                        An RxJS Subscription to tie the lifetime of the\nconnection to.\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DragSource\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dropTarget\n                        \n                    \n                \n            \n            \n                \n                    \n                    dropTarget(types: TypeOrTypeArray | null, spec: DropTargetSpec, subscription?: AddSubscription)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        Item\n                        DropResult\n                    \n                \n            \n\n            \n                \n                    This drop target will only react to the items produced by the drag sources\nof the specified type or types.\nIf you want a dynamic type, pass null as the type; and call\nDropTarget in a lifecycle hook.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    types\n                                    \n                                                TypeOrTypeArray | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    spec\n                                    \n                                            DropTargetSpec\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    subscription\n                                    \n                                                AddSubscription\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DropTarget\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragLayer.html":{"url":"interfaces/DragLayer.html","title":"interface - DragLayer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DragLayer\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n\n            \n                Description\n            \n            \n                For many use cases, the default rendering of the HTML5 backend should suffice.\nHowever, its drag preview has certain limitations. For example, it has to be an\nexisting node screenshot or an image, and it cannot change midflight.\nSometimes you might want to perform the custom rendering. This also becomes\nnecessary if you're using a custom backend. DragLayer lets you perform the\nrendering of the drag preview yourself.\nA drag layer is a special subscriber to the global drag state. It is called\na 'layer', not just a subscriber, because it is typically used to render custom\nelements that follow the mouse, above all other elements. The data flows like\nso:\ndrag start => global state => drag source => no preview\n                           => drag layer  => preview rendered on the spot\ndrag moved => global state => drag layer  => preview moves\ndrag ends  => global state => drag layer  => preview erasedTo use a drag layer as designed:\n\nCreate a drag layer: DndService.dragLayer. Make sure to unsubscribe from\nit in ngOnDestroy().\n\nListen to global drag state changes with DragLayer.listen. These are all available on DragLayerMonitor:\nwhether something is being dragged, what type it is, where the drag started, where the dragged element is now.\n\nIf dragging, render a custom preview under the current mouse position,\ndepending on the item type, in a position: fixed 'layer'. You may like to\nuse an *ngSwitch on the type, rather than one drag layer per type, simply\nto reduce code duplication.\n\n\nYou can see an example of a drag layer over on the Examples page.\nOne piece of advice for using drag layers effectively is to separate 'smart' and\n'dumb' components. If you have one component purely for visuals, which does all\ninput through @Input() and all interactivity through @Output() events, then\nyou can reuse it to display a drag preview based on either data in the item from\nDragSourceSpec.beginDrag, or supplied by a 'smart' component which pulls\ndata from somewhere else using only an id. This practice is even more\nimportant if you are using, or planning on using, anything other than the HTML5\nbackend, because no other backend provides automatic previews. In those cases\nyou must handle every draggable type in a drag layer to have any previews at\nall.\nOr, you could just use @ng-dnd/multi-backend.\n\n            \n\n            \n                Extends\n            \n            \n                        ConnectionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        listen\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        listen\n                        \n                    \n                \n            \n            \n                \nlisten(mapTo: (monitor: DragLayerMonitor) => void)\n                \n            \n\n\n\n            \n                \n                    Type parameters :\n                    \n                        O\n                    \n                \n            \n\n            \n                \n                    For listen functions in general, see ConnectionBase.\nThis listen function is called any time the global drag state\nchanges, including the coordinate changes, so that your component can\nprovide a timely updated custom drag preview. You can ask the monitor for\nthe client coordinates of the dragged item. Read the DragLayerMonitor\ndocs to see all the different possibile coordinates you might subscribe to.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    mapTo\n                                    \n                                                function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragLayerMonitor.html":{"url":"interfaces/DragLayerMonitor.html","title":"interface - DragLayerMonitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DragLayerMonitor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/layer-monitor.ts\n        \n\n\n            \n                Description\n            \n            \n                The monitor available inside DragLayer.\n\n            \n\n            \n                Extends\n            \n            \n                        MonitorBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        isDragging\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isDragging\n                        \n                    \n                \n            \n            \n                \nisDragging()\n                \n            \n\n\n\n\n            \n                \n                    true if there is a drag operation in progress, false otherwise.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DragPreviewDirective.html":{"url":"directives/DragPreviewDirective.html","title":"directive - DragPreviewDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  DragPreviewDirective\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Allows you to specify which element a DragSource should screenshot\nas an HTML5 drag preview.\nOnly relevant when using the HTML5 backend.\n\n            \n\n            \n                Extends\n            \n            \n                    DndDirective\n            \n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [dragPreview]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragPreview\n                            \n                            \n                                dragPreviewOptions\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dragPreview\n                    \n                \n                \n                    \n                        Type :         DragSource\n\n                    \n                \n                \n                    \n                        The drag source for which this element will be the preview.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragPreviewOptions\n                    \n                \n                \n                    \n                        Type :         DragPreviewOptions\n\n                    \n                \n                \n                    \n                        Pass an options object as you would to DragSource.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragPreviewOptions.html":{"url":"interfaces/DragPreviewOptions.html","title":"interface - DragPreviewOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DragPreviewOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Provide options for how to render a drag preview. See DragSource.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            anchorX\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            anchorY\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            captureDraggingState\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            offsetX\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            offsetY\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        anchorX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anchorX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A number between 0 and 1. By default, 0.5. Specifies how the\noffset relative to the drag source node is translated into the the\nhorizontal offset of the drag preview when their sizes don't match.\n0 means \"dock the preview to the left\", 0.5 means \"interpolate linearly\"\nand 1 means \"dock the preview to the right\".\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        anchorY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        anchorY:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A number between 0 and 1. By default, 0.5. Specifies how the\noffset relative to the drag source node is translated into the the\nvertical offset of the drag preview when their sizes don't match. 0 means\n\"dock the preview to the top, 0.5 means \"interpolate linearly\" and\n1 means \"dock the preview to the bottom.\"\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        captureDraggingState\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        captureDraggingState:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, false. If true, the component will learn that it is being\ndragged immediately as the drag starts instead of the next tick. This\nmeans that the screenshotting would occur with monitor.isDragging()\nalready being true, and if you apply any styling like a decreased opacity\nto the dragged element, this styling will also be reflected on the\nscreenshot. This is rarely desirable, so false is a sensible default.\nHowever, you might want to set it to true in rare cases, such as if you\nwant to make the custom drag layers work in IE and you need to hide the\noriginal element without resorting to an empty drag preview which IE\ndoesn't support.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offsetX\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offsetX:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, null. Specifies the vertical offset between the cursor and\nthe drag preview element. If offsetX has a value, anchorX won't be\nused.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offsetY\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        offsetY:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    By default, null. Specifies the vertical offset between the cursor and\nthe drag preview element. If offsetY has a value, anchorY won't be\nused.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSource.html":{"url":"interfaces/DragSource.html","title":"interface - DragSource","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DragSource\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n\n            \n                Description\n            \n            \n                Like DropTarget, it can be used just for subscribing to\ndrag state information related to a particular item type or list of types.\nYou do not have to connect it to a DOM element if that's all you want.\nTo create one, refer to DndService.\n\n            \n\n            \n                Extends\n            \n            \n                        ConnectionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        connectDragPreview\n                                    \n                                \n                                \n                                    \n                                        connectDragSource\n                                    \n                                \n                                \n                                    \n                                        getHandlerId\n                                    \n                                \n                                \n                                    \n                                        setType\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connectDragPreview\n                        \n                    \n                \n            \n            \n                \nconnectDragPreview(elementOrNode: Node, options?: DragPreviewOptions)\n                \n            \n\n\n\n\n            \n                \n                    This function allows you to connect a DOM node to your DragSource as a preview.\nYou will not usually need to call this directly;\nit is more easily handled by the directives.\nYou might use an ElementRef.nativeElement, or even an\nImage.\nconst img = new Image();\nimg.onload = this.source.connectDragPreview(img);\nimg.src = '...';The subscription returned is automatically unsubscribed when the connection is made.\nThis may be immediate if the DragSource already has a type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementOrNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                DragPreviewOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        connectDragSource\n                        \n                    \n                \n            \n            \n                \nconnectDragSource(elementOrNode: Node, options?: DragSourceOptions)\n                \n            \n\n\n\n\n            \n                \n                    This function allows you to connect a DOM node to your DragSource.\nYou will not usually need to call this directly;\nit is more easily handled by the directives.\nThe subscription returned is automatically unsubscribed when the connection is made.\nThis may be immediate if the DragSource already has a type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementOrNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    options\n                                    \n                                                DragSourceOptions\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHandlerId\n                        \n                    \n                \n            \n            \n                \ngetHandlerId()\n                \n            \n\n\n\n\n            \n                \n                    Returns the drag source ID that can be used to simulate the drag and drop events\nwith the testing backend.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setType\n                        \n                    \n                \n            \n            \n                \nsetType(type: string | symbol)\n                \n            \n\n\n\n\n            \n                \n                    Use this method to have a dynamically typed source. If no type has\npreviously been set, it creates the subscription and allows the\n[dragSource] DOM element to be connected. If you do not need to\ndynamically update the type, you can set it once via the\nDragSourceSpec property.\nIf you wish to have a dynamic type based on an @Input() property, for\nexample, you must call setType() in either of your component's\nngOnInit or ngOnChanges methods:\n@Input() type: string;\n@Input() model: { parentId: number; name: string; };\ntarget = this.dnd.dragSource(null, {\n  // ...\n});\nngOnChanges() {\n  // use what your parent component told you to\n  this.target.setType(this.type);\n  // or create groupings on the fly\n  this.target.setType(\"PARENT_\" + this.model.parentId.toString());\n}It may be more convenient or easier to understand if you write:\n@Input() set type(t) {\n  this.source.setType(t);\n}\nsource = this.dnd.dragSource(null, {\n  beginDrag: () => ({ ... })\n});\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                            string | symbol\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DragSourceDirective.html":{"url":"directives/DragSourceDirective.html","title":"directive - DragSourceDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  DragSourceDirective\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Allows you to connect a DragSource to an element in a component template.\n\n            \n\n            \n                Extends\n            \n            \n                    DndDirective\n            \n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [dragSource]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dragSource\n                            \n                            \n                                dragSourceOptions\n                            \n                            \n                                dragSourceType\n                            \n                            \n                                noHTML5Preview\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dragSource\n                    \n                \n                \n                    \n                        Type :         DragSource\n\n                    \n                \n                \n                    \n                        Which source to connect the DOM to\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragSourceOptions\n                    \n                \n                \n                    \n                        Type :         DragSourceOptions\n\n                    \n                \n                \n                    \n                        Pass an options object as you would to DragSource.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dragSourceType\n                    \n                \n                \n                    \n                        Type :     string | symbol\n\n                    \n                \n                \n                    \n                        Shortcut for setting a type on the connection.\nLets you use Angular binding to do it. Runs DragSource.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        noHTML5Preview\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                \n                    \n                        Do not render an HTML5 preview. Only applies when using the HTML5 backend.\nIt does not use { captureDraggingState: true } for IE11 support; that is broken.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSourceMonitor.html":{"url":"interfaces/DragSourceMonitor.html","title":"interface - DragSourceMonitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DragSourceMonitor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/source-monitor.ts\n        \n\n\n            \n                Description\n            \n            \n                The monitor available in DragSource's listen method.\n\n            \n\n            \n                Extends\n            \n            \n                        MonitorBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        canDrag\n                                    \n                                \n                                \n                                    \n                                        didDrop\n                                    \n                                \n                                \n                                    \n                                        getDropResult\n                                    \n                                \n                                \n                                    \n                                        isDragging\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canDrag\n                        \n                    \n                \n            \n            \n                \ncanDrag()\n                \n            \n\n\n\n\n            \n                \n                    Returns true if NO drag operation is in progress, and the owner's\ncanDrag() returns true or is not defined.\nNote that canDrag doesn't blindly return what you supplied in\nDragSourceSpec, so it isn't very useful as a general\nsource-is-enabled/disabled flag.\nInstead, keep your canDrag logic simple, and replicate it in your template.\n content {\n  canDrag: () => this.someProperty\n}\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        didDrop\n                        \n                    \n                \n            \n            \n                \ndidDrop()\n                \n            \n\n\n\n\n            \n                \n                    Returns true if some drop target handled the drop event; false\notherwise. Even if a target did not return a drop result, didDrop()\nreturns true. Use it inside endDrag() to test whether any drop target\nhas handled the drop. Returns false if called outside endDrag().\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDropResult\n                        \n                    \n                \n            \n            \n                \ngetDropResult()\n                \n            \n\n\n\n\n            \n                \n                    Returns a plain object representing the last recorded drop result. The\ndrop targets may optionally specify it by returning an object from their\ndrop() methods. When a chain of drop() is dispatched for the nested\ntargets, bottom up, any parent that explicitly returns its own result from\ndrop() overrides the child drop result previously set by the child.\nReturns null if called outside endDrag().\n\n\n                    \n                        Returns :     DropResult\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDragging\n                        \n                    \n                \n            \n            \n                \nisDragging()\n                \n            \n\n\n\n\n            \n                \n                    Returns true if a drag operation is in progress, and either the owner\ninitiated the drag, or its isDragging() is defined and returns true.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSourceOptions.html":{"url":"interfaces/DragSourceOptions.html","title":"interface - DragSourceOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DragSourceOptions\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connectors.ts\n        \n\n\n            \n                Description\n            \n            \n                Provide customisations for how a backend should handle a DragSource and\ndisplay items dragged from it. See DragSource.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            dropEffect\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dropEffect\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dropEffect:     \"copy\" | \"move\" | \"link\" | \"none\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"copy\" | \"move\" | \"link\" | \"none\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    A string. By default, 'move'. In the browsers that support this\nfeature, specifying 'copy' shows a special \"copying\" cursor, while 'move'\ncorresponds to the \"move\" cursor. You might want to use this option to\nprovide a hint to the user about whether an action is destructive.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DragSourceSpec.html":{"url":"interfaces/DragSourceSpec.html","title":"interface - DragSourceSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DragSourceSpec\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/drag-source-specification.ts\n        \n\n\n            \n                Description\n            \n            \n                The spec passed to DndService.\nNote the two type parameters. Both must represent plain JS objects.\nItem is the type you return from beginDrag(), and available in monitor.getItem().\nLimitations in TypeScript may prevent inferring this in many circumstances,\nand it will default to {}. It is best if you are strong-typing to pass a\ntype parameter like so:\ninterface MyDraggedItemType { id: number; }\n// ...\nsource = this.dnd.dragSource(..., {\n    beginDrag: monitor => ({ id: this.id })\n})DropResult is the type you expect a drop target to return from drop().\nIt is the type of the object returned by monitor.getDropResult() during endDrag().\nNote that your backend may assign some extra properties. You should define a\nDropResult type that recognises these, such as:\ninterface HTML5DropResult { dropEffect: string; }\ninterface MyDropResult extends HTML5DropResult { id: number; }\ntarget = this.dnd.dropTarget(..., {\n    drop: monitor => ({ id: this.id })\n});\n\nsource = this.dnd.dragSource(..., {\n    endDrag: monitor => {\n        const result = monitor.getDropResult();\n        if (result.dropEffect === 'copy') {\n            // user had alt key pressed + the GreenPlus icon when they dropped,\n            // so copy instead of move\n        }\n    }\n});\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        beginDrag\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        canDrag\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        endDrag\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        isDragging\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        beginDrag\n                        \n                    \n                \n            \n            \n                \nbeginDrag(monitor: DragSourceMonitor)\n                \n            \n\n\n\n\n            \n                \n                    Required. When the dragging starts, beginDrag is called. You must return\na plain JavaScript object describing the data being dragged. What you\nreturn is the only information available to the drop targets about the\ndrag source so it's important to pick the minimal data they need to know.\nYou may be tempted to put a reference to the component into it, but you\nshould try very hard to avoid doing this because it couples the drag\nsources and drop targets. It's a good idea to return something like { id: this.id } from this method.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                            DragSourceMonitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Item\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        canDrag\n                        \n                    \n                \n            \n            \n                \ncanDrag(monitor: DragSourceMonitor)\n                \n            \n\n\n\n\n            \n                \n                    Optional. Queries your component to determine whether this source can be\ndragged. Default returns true; this is often sufficient.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                            DragSourceMonitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        endDrag\n                        \n                    \n                \n            \n            \n                \nendDrag(monitor: DragSourceMonitor)\n                \n            \n\n\n\n\n            \n                \n                    Optional. Notifies your component when dragging ends.\nThis is a good place to fire actions or modify a component. You will often\nwant to check DragSourceMonitor and DragSourceMonitor for more\ndetails.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                            DragSourceMonitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        isDragging\n                        \n                    \n                \n            \n            \n                \nisDragging(monitor: DragSourceMonitor)\n                \n            \n\n\n\n\n            \n                \n                    By default, only the drag source that initiated the drag operation is\n considered to be dragging. You might override this by matching on the\n DragSourceMonitor.id and your component's id, or similar. Do this if the\n original component may be unmounted during the dragging and later\n \"resurrected\" with a different parent. For example, when moving a card\n across the lists in a Kanban board, you want it to retain the dragged\n appearance—even though technically, the component gets unmounted and\n a different one gets mounted every time you hover over another list.\n Note: You may not call DragSourceMonitor inside this method.\nNOTE: runs outside Angular change detection. This is for performance\nreasons. You shouldn't be making changes to your component here anyway. If\nyou do change your component inside this callback, it may not appear\nimmediately, and if you use NgZone.run() then you may experience\nperformance degradation.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                            DragSourceMonitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropTarget.html":{"url":"interfaces/DropTarget.html","title":"interface - DropTarget","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DropTarget\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/connection-types.ts\n        \n\n\n            \n                Description\n            \n            \n                Represents one drop target and its behaviour, that can listen to the state\nand connect to a DOM element.\nTo create one, refer to DndService.\n\n            \n\n            \n                Extends\n            \n            \n                        ConnectionBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        connectDropTarget\n                                    \n                                \n                                \n                                    \n                                        getHandlerId\n                                    \n                                \n                                \n                                    \n                                        setTypes\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        connectDropTarget\n                        \n                    \n                \n            \n            \n                \nconnectDropTarget(elementOrNode: Node)\n                \n            \n\n\n\n\n            \n                \n                    This function allows you to connect a DOM node to your DropTarget.\nYou will not usually need to call this directly;\nit is more easily handled by the directives.\nThe subscription returned is automatically unsubscribed when the connection is made.\nThis may be immediate if the DropTarget already has a type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    elementOrNode\n                                    \n                                            Node\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Subscription\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHandlerId\n                        \n                    \n                \n            \n            \n                \ngetHandlerId()\n                \n            \n\n\n\n\n            \n                \n                    Returns the drop target ID that can be used to simulate the drag and drop events\nwith the testing backend.\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTypes\n                        \n                    \n                \n            \n            \n                \nsetTypes(type: TypeOrTypeArray)\n                \n            \n\n\n\n\n            \n                \n                    Use this method to have a dynamically typed target. If no type has\npreviously been set, it creates the subscription and allows the\n[dragSource] DOM element to be connected. If you do not need to\ndynamically update the type, you can set it once via the\nDropTargetSpec property.\nSee DragSource for an example of how to set\na dynamic type, for it is very similar here.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                TypeOrTypeArray\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropTargetDirective.html":{"url":"directives/DropTargetDirective.html","title":"directive - DropTargetDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  DropTargetDirective\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dnd.directive.ts\n        \n\n\n            \n                Description\n            \n            \n                Allows you to connect a DropTarget to an element in a component template.\n\n            \n\n            \n                Extends\n            \n            \n                    DndDirective\n            \n\n            \n                Implements\n            \n            \n                            OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [dropTarget]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                dropTarget\n                            \n                            \n                                dropTargetType\n                            \n                            \n                                dropTargetTypes\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    dropTargetType\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        dropTarget\n                    \n                \n                \n                    \n                        Type :         DropTarget\n\n                    \n                \n                \n                    \n                        Which target to connect the DOM to\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dropTargetType\n                    \n                \n                \n                    \n                        Type :         TypeOrTypeArray\n\n                    \n                \n                \n                    \n                        Reduce typo confusion by allowing non-plural version of dropTargetTypes\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        dropTargetTypes\n                    \n                \n                \n                    \n                        Type :         TypeOrTypeArray\n\n                    \n                \n                \n                    \n                        Shortcut for setting a type on the connection.\nLets you use Angular binding to do it. Runs DropTarget.\n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnChanges\n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        dropTargetType\n                    \n                \n\n\n                \n                    \n                        setdropTargetType(t: TypeOrTypeArray)\n                    \n                \n                    \n                        \n                                Reduce typo confusion by allowing non-plural version of dropTargetTypes\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            t\n                                                    \n                                                            \n                                                                            TypeOrTypeArray\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropTargetMonitor.html":{"url":"interfaces/DropTargetMonitor.html","title":"interface - DropTargetMonitor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DropTargetMonitor\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/target-monitor.ts\n        \n\n\n            \n                Description\n            \n            \n                The monitor available in DropTarget's listen method.\n\n            \n\n            \n                Extends\n            \n            \n                        MonitorBase\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        canDrop\n                                    \n                                \n                                \n                                    \n                                        didDrop\n                                    \n                                \n                                \n                                    \n                                        getDropResult\n                                    \n                                \n                                \n                                    \n                                        isOver\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canDrop\n                        \n                    \n                \n            \n            \n                \ncanDrop()\n                \n            \n\n\n\n\n            \n                \n                    Returns true if there is a drag operation in progress, and the owner's\ncanDrop() returns true or is not defined.\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        didDrop\n                        \n                    \n                \n            \n            \n                \ndidDrop()\n                \n            \n\n\n\n\n            \n                \n                    Returns true if some drop target has handled the drop event, false\notherwise. Even if a target did not return a drop result, didDrop()\nreturns true. Use it inside drop() to test whether any nested drop\ntarget has already handled the drop. Returns false if called outside\ndrop().\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDropResult\n                        \n                    \n                \n            \n            \n                \ngetDropResult()\n                \n            \n\n\n\n\n            \n                \n                    Returns a plain object representing the last recorded drop result. The\ndrop targets may optionally specify it by returning an object from their\ndrop() methods. When a chain of drop() is dispatched for the nested\ntargets, bottom up, any parent that explicitly returns its own result\nfrom drop() overrides the drop result previously set by the child.\nReturns null if called outside drop().\n\n\n                    \n                        Returns :     DropResult\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOver\n                        \n                    \n                \n            \n            \n                \nisOver(options?: literal type)\n                \n            \n\n\n\n\n            \n                \n                    Returns true if there is a drag operation in progress, and the pointer\nis currently hovering over the owner. You may optionally pass\n{ shallow: true } to strictly check whether only the owner is being\nhovered, as opposed to a nested target.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DropTargetSpec.html":{"url":"interfaces/DropTargetSpec.html","title":"interface - DropTargetSpec","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DropTargetSpec\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/drop-target-specification.ts\n        \n\n\n            \n                Description\n            \n            \n                The spec passed to DndService.\nNote the two type parameters. Both must represent plain JS objects. See the extended\ndiscussion of these type parameters at DragSourceSpec.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        canDrop\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        drop\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        hover\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        canDrop\n                        \n                    \n                \n            \n            \n                \ncanDrop(monitor: DropTargetMonitor)\n                \n            \n\n\n\n\n            \n                \n                    Queries your component to determine whether an item can be dropped on this target.\nNOTE: runs outside Angular change detection. This is for performance\nreasons. You shouldn't be making changes to your component here anyway. If\nyou do change your component inside this callback, it may not appear\nimmediately, and if you use NgZone.run() then you may experience\nperformance degradation.\nDefault, when not specified, is true.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                            DropTargetMonitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        drop\n                        \n                    \n                \n            \n            \n                \ndrop(monitor: DropTargetMonitor)\n                \n            \n\n\n\n\n            \n                \n                    Called when a compatible item is dropped on the target. You may either\nreturn nothing, or a plain object.\nIf you return an object, it is going to become the drop result and will be\navailable to the drag source in its DragSourceSpec method as\nDropTargetMonitor. This is useful in case you want the\nsource to perform different actions depending on which target received the\ndrop. Otherwise, it is simpler to handle the dropped item here.\nIf you have nested drop targets, you can test whether a nested target has\nalready handled drop by checking DropTargetMonitor. Both this\nmethod and the source's endDrag() method are good places to fire\n@ngrx/store actions.\nThis method will not be called if canDrop() is defined and returns false.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                            DropTargetMonitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DropResult | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        hover\n                        \n                    \n                \n            \n            \n                \nhover(monitor: DropTargetMonitor)\n                \n            \n\n\n\n\n            \n                \n                    Called frequently while the mouse hovers over the owner drop target while\ndragging a relevant item.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    monitor\n                                    \n                                            DropTargetMonitor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MonitorBase.html":{"url":"interfaces/MonitorBase.html","title":"interface - MonitorBase","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MonitorBase\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/monitor-base.ts\n        \n\n\n            \n                Description\n            \n            \n                The methods common to all monitor classes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        getClientOffset\n                                    \n                                \n                                \n                                    \n                                        getDifferenceFromInitialOffset\n                                    \n                                \n                                \n                                    \n                                        getInitialClientOffset\n                                    \n                                \n                                \n                                    \n                                        getInitialSourceClientOffset\n                                    \n                                \n                                \n                                    \n                                        getItem\n                                    \n                                \n                                \n                                    \n                                        getItemType\n                                    \n                                \n                                \n                                    \n                                        getSourceClientOffset\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getClientOffset\n                        \n                    \n                \n            \n            \n                \ngetClientOffset()\n                \n            \n\n\n\n\n            \n                \n                    The current mouse x,y position relative to the viewport. Returns null\nif no item is being dragged.\n\n\n                    \n                        Returns :         Offset | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getDifferenceFromInitialOffset\n                        \n                    \n                \n            \n            \n                \ngetDifferenceFromInitialOffset()\n                \n            \n\n\n\n\n            \n                \n                    A vector x,y of the displacement of the dragged item from its initial\nposition. Returns null if no item is being dragged.\n\n\n                    \n                        Returns :         Offset | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInitialClientOffset\n                        \n                    \n                \n            \n            \n                \ngetInitialClientOffset()\n                \n            \n\n\n\n\n            \n                \n                    The initial mouse x,y position relative to the viewport, when the current\ndrag operation started. Returns null if no item is being dragged.\n\n\n                    \n                        Returns :         Offset | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInitialSourceClientOffset\n                        \n                    \n                \n            \n            \n                \ngetInitialSourceClientOffset()\n                \n            \n\n\n\n\n            \n                \n                    x,y relative to viewport of the item's DOM element before it was dragged.\nReturns null if no item is being dragged.\n\n\n                    \n                        Returns :         Offset | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem()\n                \n            \n\n\n\n\n            \n                \n                    The item in transit, if any. This is what you returned from\nDragSourceSpec. Returns null if no item is being dragged.\n\n\n                    \n                        Returns :     Item | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItemType\n                        \n                    \n                \n            \n            \n                \ngetItemType()\n                \n            \n\n\n\n\n            \n                \n                    The type of the item in transit. Returns null if no item is being dragged.\n\n\n                    \n                        Returns :     string | symbol | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSourceClientOffset\n                        \n                    \n                \n            \n            \n                \ngetSourceClientOffset()\n                \n            \n\n\n\n\n            \n                \n                    The projected x,y position relative to viewport of the root DOM element of the drag source\n= its initial position + displacement. Returns null if no item is being dragged.\n\n\n                    \n                        Returns :         Offset | null\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Offset.html":{"url":"interfaces/Offset.html","title":"interface - Offset","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Offset\n\n\n\n        \n            Info\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/type-ish.ts\n        \n\n\n            \n                Description\n            \n            \n                Just a plain, reusable xy coordinate type.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    x coordinate\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    y coordinate\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n2.0.1 (2022-05-03)\nBug Fixes\n\nfix reference types of triple-slash directives (#7) (2c0127e)\n\n2.0.0 (2022-05-03)\nBug Fixes\n\nbuild: fix tslib version (d5aa05b)\n\nFeatures\n\nadd eslint and remove tslint (f8fb0df)\n\n1.0.3 (2022-05-02)\nNote: Version bump only for package @ng-dnd/core\n1.0.2 (2022-05-02)\nNote: Version bump only for package @ng-dnd/core\n1.0.1 (2022-02-19)\nNote: Version bump only for package @ng-dnd/core\n1.0.0 (2021-08-14)\nNote: Version bump only for package @ng-dnd/core\n0.1.2 (2021-08-09)\nNote: Version bump only for package @ng-dnd/core\n0.1.1 (2021-08-07)\nNote: Version bump only for package @ng-dnd/core\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/connection-types.ts\n            \n            interface\n            ConnectionBase\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/connection-types.ts\n            \n            interface\n            DragLayer\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/connection-types.ts\n            \n            interface\n            DragSource\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/connection-types.ts\n            \n            interface\n            DropTarget\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/connector.service.ts\n            \n            injectable\n            DndService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/connector.service.ts\n            \n            interface\n            AddSubscription\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/connectors.ts\n            \n            interface\n            DragPreviewOptions\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/connectors.ts\n            \n            interface\n            DragSourceOptions\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/dnd.directive.ts\n            \n            directive\n            DragPreviewDirective\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/dnd.directive.ts\n            \n            directive\n            DragSourceDirective\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/dnd.directive.ts\n            \n            directive\n            DropTargetDirective\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/dnd.module.ts\n            \n            interface\n            BackendFactoryInput\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/dnd.module.ts\n            \n            interface\n            BackendInput\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/drag-source-specification.ts\n            \n            interface\n            DragSourceSpec\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/drop-target-specification.ts\n            \n            interface\n            DropTargetSpec\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/layer-monitor.ts\n            \n            interface\n            DragLayerMonitor\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/monitor-base.ts\n            \n            interface\n            MonitorBase\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                src/source-monitor.ts\n            \n            interface\n            DragSourceMonitor\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/target-monitor.ts\n            \n            interface\n            DropTargetMonitor\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            DRAG_DROP_BACKEND\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            DRAG_DROP_BACKEND_DEBUG_MODE\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            DRAG_DROP_BACKEND_FACTORY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            DRAG_DROP_BACKEND_OPTIONS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            DRAG_DROP_GLOBAL_CONTEXT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            DRAG_DROP_MANAGER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/tokens.ts\n            \n            variable\n            TYPE_DYNAMIC\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/type-ish.ts\n            \n            interface\n            Offset\n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            dnd-core : ^16.0.0\n        \n            tslib : ^2.3.0\n    \n\n\n    \n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : >= 13.0.0\n        \n            @angular/core : >= 13.0.0\n        \n            rxjs : >= 7.0.0\n        \n            zone.js : >= 0.11.0\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n@ng-dnd/core\n\n\n\nNg-DnD is a toolkit for building complex drag and drop interfaces in Angular. It is based on, and very similar to react-dnd by Dan Abramov and others, and is also powered by dnd-core. It is compatible with all backends.\nCheck out the examples here.\nInstallation\nyarn add @ng-dnd/core react-dnd-html5-backendNext, follow the Quickstart and check out the Tutorial.\nSub-packages\n\n@ng-dnd/multi-backend\n@ng-dnd/sortable\n\nFeatures\n\nMake any component draggable, or into a drop target.\nDoesn't mutate the DOM, and doesn't use classes and CSS to do 'callbacks'.\nEvery visible change is made through Angular templates.\nThe truth lives in JavaScript, with unidirectional data flow (like\n@ngrx/store)\nObservable APIs, designed to fit in Angular.\nTypeScript friendly, with strong typing for in-flight objects, and inline\ndocumentation.\nWorks with HTML5 drag and drop, and all other react-dnd backends.\n\nGoals\n\nHigh performance. All code runs outside the Angular zone, and re-enters in batches only where strictly necessary, such that change detection runs precisely as many times as you need it to, with no extra configuration. You should also be able to take full advantage of OnPush change detection.\n\nLargely possible to translate react-dnd code and examples into Angular (see Translating React Code).\n\nComprehensive documentation and tons of example code, written in Angular style.\n\n\nWhat can you do with it?\nInstead of building maximally-ergonomic solutions to simple use cases, react-dnd and @ng-dnd provide an abstraction over most things you could want to do with drag and drop. They are lower-level building blocks that make it easy to implement some very complex interactions. They assign no specific meaning to a drag/drop operation. You get to define what happens when a drag starts or ends or hovers. Here are some ambitious examples:\n\nThe traditional react-dnd tutorial, a chess board with movable pieces and rules\nDeleting items by dragging them to a 'trash can', like in the macOS dock.\nStamping out a template by dragging the template into a work area\nMerging two items by dragging one on top of the other\nHover over a 'folder' for a few seconds to 'drill down' into it\nThe famous lists and cards on trello.com, which actually uses react-dnd\nA diagramming tool where you can draw links between nodes\nA 2D CAD program\nA graphical query builder, or visual data pipeline like Luna\nMany other demonstrations of react-dnd (most with GIFs) in use\n\nAlternatives\nIt is important to note that for bare-bones sortable lists, where you have a mutable array of simple values, you don't necessarily need the superpowers in this library. There are plenty of cookie-cutter solutions out there, like the quite powerful ng2-dnd or ng2-dragula, which may get you to your deadline faster than learning and using @ng-dnd. But be warned; you may find yourself wanting more dragging power once you get a taste. In fact, this package was born when @cormacrelf got sick of maintaining ng2-dragula and watching users struggle to implement what react-dnd was born for.\nIf Angular and React aren't your thing, there's also vue-react-dnd.\nIssues\nNot all issues are @ng-dnd-related. If you think you found a bug in dnd-core or with the HTML5 backend, those issues belong on that codebase with their many contributors and wealth of experience. If there is a problem with another backend you are using, file an issue with that backend so you can get more specific help and so that the community can benefit.\nIssues and potential improvements to @ng-dnd are discussed on GitHub.\nLicense\nThis library is released under the MIT license. It depends on dnd-core, which is (now) also under the MIT license.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        DndModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    16 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 2.0.1\n        \n            Description : Drag and Drop for Angular\n        \n            Keywords : drag-and-drop, react-dnd, angular-dnd, ng-dnd, ngx-dnd\n        \n            License : MIT\n        \n            Repository : https://github.com/ng-dnd/ng-dnd\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DragSourceDecorator   (src/.../wrappers.ts)\n                        \n                        \n                            DragSourceFactory   (src/.../wrappers.ts)\n                        \n                        \n                            DropTargetDecorator   (src/.../wrappers.ts)\n                        \n                        \n                            DropTargetFactory   (src/.../wrappers.ts)\n                        \n                        \n                            TypeOrTypeArray   (src/.../type-ish.ts)\n                        \n                        \n                            Types   (src/.../wrappers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/wrappers.ts\n    \n    \n        \n            \n                \n                    \n                    DragSourceDecorator\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DragSourceFactory\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DropTargetDecorator\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DropTargetFactory\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Types\n                \n            \n            \n                \n                        string | symbol | (string | symbol)[]\n\n                \n            \n        \n    \n    src/type-ish.ts\n    \n    \n        \n            \n                \n                    \n                    TypeOrTypeArray\n                \n            \n            \n                \n                    String, symbol, or an array of either. Used on drop targets.\n\n                \n            \n            \n                \n                        string | symbol | Array\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DRAG_DROP_BACKEND   (src/.../tokens.ts)\n                        \n                        \n                            DRAG_DROP_BACKEND_DEBUG_MODE   (src/.../tokens.ts)\n                        \n                        \n                            DRAG_DROP_BACKEND_FACTORY   (src/.../tokens.ts)\n                        \n                        \n                            DRAG_DROP_BACKEND_OPTIONS   (src/.../tokens.ts)\n                        \n                        \n                            DRAG_DROP_GLOBAL_CONTEXT   (src/.../tokens.ts)\n                        \n                        \n                            DRAG_DROP_MANAGER   (src/.../tokens.ts)\n                        \n                        \n                            TYPE_DYNAMIC   (src/.../tokens.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/tokens.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DRAG_DROP_BACKEND\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('dnd-core compatible backend')\n                    \n                \n\n            \n                \n                    The injection token for the dnd-core compatible backend currently in use.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DRAG_DROP_BACKEND_DEBUG_MODE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'should dnd-core run in debug mode?'\n)\n                    \n                \n\n            \n                \n                    The injection token for the dnd-core compatible backend currently in use.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DRAG_DROP_BACKEND_FACTORY\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'dnd-core compatible backend'\n)\n                    \n                \n\n            \n                \n                    The injection token for the dnd-core BackendFactory used to instantiate dnd-core.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DRAG_DROP_BACKEND_OPTIONS\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken(\n  'options for dnd-core compatible backend'\n)\n                    \n                \n\n            \n                \n                    The injection token for the dnd-core compatible backend's options.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DRAG_DROP_GLOBAL_CONTEXT\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('dnd-core context')\n                    \n                \n\n            \n                \n                    The injection token for the dnd-core compatible backend currently in use.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DRAG_DROP_MANAGER\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('dnd-core DragDropManager')\n                    \n                \n\n            \n                \n                    The injection token for the dnd-core DragDropManager\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TYPE_DYNAMIC\n                        \n                    \n                \n            \n                \n                    \n                        Type :     symbol\n\n                    \n                \n                \n                    \n                        Default value : Symbol(\n  'no type specified, you must provide one with setType/setTypes'\n)\n                    \n                \n\n            \n                \n                    The type a source or target is given as a marker for 'you supplied null as a type',\nso that library consumers can be reminded to use setType/setTypes manually.\nSee DragSource.setType, DropTarget.setTypes.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/quickstart.html":{"url":"additional-documentation/quickstart.html","title":"additional-page - Quickstart","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstallation\nyarn add @ng-dnd/core react-dnd-html5-backendYou might consider @ng-dnd/multi-backend instead of the HTML5\nbackend, because it allows adding touch support as well.\nThen import DndModule and provide the backend:\nimport { DndModule } from '@ng-dnd/core';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\n@NgModule({\n  imports: [\n    // Don't forget the forRoot()\n    DndModule.forRoot({ backend: HTML5Backend }),\n  ],\n})\nexport class AppModule {}If you need it again on a child module, like a lazy-loaded module, you only need\nto import DndModule there. That way the backend and global drag state is only\ninitialized once. But you may use forRootto inject a new instance or to\ninclude drag and drop on only some child modules.\nConcepts\nThese pieces make up the library:\n\nAn item (JS Object, not a DOM node) is the source of truth for each drag\noperation\nA drag source registers a DOM node to commence drag operations\nA drop target registers a DOM node for hover and drop events\nwhile dragging\nA way for each to provide, listen for and query changes in the drag state:\na monitor and appropriate callbacks\nHooks to provide some other DOM element as the drag preview.\n\nreact-dnd defined one more thing, inspired by HTML5, to make using this sane:\neach item has a type, and drag sources and drop targets will\nrespectively emit and accept only items with matching types.\nThat's it. This library offers all those concepts in an Angular-friendly way,\nthat is also largely compatible with a lot of react-dnd code and examples.\nNext steps\n\nHave a look at the Examples, and browse their source code in the\nexamples app on GitHub.\n\nRead and follow the Tutorial\n\nRead the 3-part guide in the sidebar. Any specifics are available by browsing the interfaces and\nclasses.\n\n\nTouch support and alternate backends\nMobile devices have not implemented HTML5 drag and drop. You will need:\n\nA different backend using click or touch events, without dropping desktop support\nA way to render drag previews. Where on desktops you\ncan let the browser render drag previews, when using a backend based on click\nor touch events, on mobile you have to render them yourself.\n\nA good way to solve both problems at once is using\n@ng-dnd/multi-backend. It is based on the original\ndnd-multi-backend, which was designed to seamlessly switch\nbetween an HTML5 and a touch backend when it noticed different\nkinds of interaction. The @ng-dnd version includes a preview component.\nNote also that you will need to use an exported function\nto provide the backend, to retain AOT compatibility, if it requires assembly.\nMultiBackend, for example, can be used like so:\nexport function createBackend() {\n    return MultiBackend(HTML5ToTouch);\n}\n@NgModule({\n  imports: [\n    DndModule.forRoot({ backendFactory: createBackend })\n  ]\n}\n// ...Troubleshooting\nI get TypeError: backend is null, only when AOT is enabled\nAlso rears its head as No such property 'default' of undefined.\nTroubleshooting steps\n\nCheck you are importing the backend and renaming any default exports.\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { SomeImaginaryBackendWithNamedExports } from 'some-imaginary-backend';Generally, make sure you are importing the backend correctly. If it does not\nprovide Typescript definitions, you might have to read the documentation or\nbrowse the source code.\n\nMake sure in your root Angular module (usually app.module.ts) you import\nDndModule.forRoot({ backend: MyBackend }) instead of plain DndModule.\n\n\nI get Error encountered resolving symbol values statically. Calling function 'default' with AOT enabled.\nMake sure you are following the special instructions for assembly-required backends\nlike MultiBackend or any backend that allows SomeBackend({ optionsHere: true }),\nlike TouchBackend. See above.\nIn the spec callbacks, my component doesn't have any properties, and it can't call this.method()!\nMake sure you use the arrow function syntax (() =>) in your specs so this will refer to your component. Example:\npaperCount = 3;\nlimitedSupplyOfPaper = this.dnd.dragSource('PAPER', {\n  // use shorthand for one-liners that return a value\n  canDrag: () => this.paperCount > 0,\n  endDrag: monitor => {\n    if (monitor.didDrop()) {\n      this.paperCount--;\n    }\n  },\n});This demo shows comprehensively what this refers to\nin arrow functions vs regular ones. A sufficiently advanced editor shouldn't\nshow any completions at this.| in a regular function, as it will resolve the\ntype of this to be any.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide.html":{"url":"additional-documentation/guide.html","title":"additional-page - Guide","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nWhen using @ng-dnd, you follow this general pattern:\n\nCreate a connection and specify its behaviour: Creating Connections\nUse directives or methods to connect it to real DOM elements:\nConnecting to DOM\nUse the connection's listen method to listen for relevant state changes, and respond to them:\nMonitoring State\nRemember to destroy the connection in ngOnDestroy(). Refer to part 1\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide/1.-creating-connections.html":{"url":"additional-documentation/guide/1.-creating-connections.html","title":"additional-page - 1. Creating connections","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCreating connections\nThere are three types of connection.\n\nDragSource\nis for allowing components to be dragged. Create one with\nDndService#dragSource\nusing a\nDragSourceSpec\nand attach it to the DOM\nwith [dragSource]=\"...\".\n\nDropTarget\nis for allowing components to be dragged. Create one with\nDndService#dropTarget\nusing a\nDropTargetSpec\nand attach it to the DOM\nwith [dropTarget]=\"...\".\n\nDragLayer\nis an advanced feature that allows you to implement your own\ncustom drag previews. Create one with\nDndService#dragLayer,\nbut you don't attach them to the DOM, you simply listen for changes.\n\n\nAll three of them have the same lifecycle, and all three of them offer a\n.listen() function, which allows you to listen to changes. See\nConnectionBase for what they have in\ncommon.\nUsing the DndService to create connections\nFirst, inject\nDndService,\ninto your component.\nconstructor(private dnd: DndService) { ... }Then, use one of the methods\nDndService#dragSource,\nDndService#dropTarget\nto create one and store it as an instance variable, and make sure to tear down\nthe connection in ngOnDestroy.\nsource = this.dnd.dragSource(\"CAT\", {\n  beginDrag: (monitor) => ({ id: this.cat.id })\n  // ...\n});\n// or\ntarget = this.dnd.dropTarget([\"CAT\", \"ZEBRA\"], {\n  // ...\n});\nconstructor(private dnd: DndService) { ... }\n\nngOnDestroy() {\n  this.source.unsubscribe();\n  // or\n  this.target.unsubscribe();\n}Then, you will want to add some behaviour beyond the default by looking into the\nSpec input for your connection type.\nDestroying Connections\nAll three types of connection need to be destroyed when your component is\ndestroyed. If you don't, you will have strange problems.\nThe easy way is to call\n.unsubscribe() on the\nconnection object in ngOnDestroy.\nngOnDestroy() {\n    this.source.unsubscribe();\n    this.target.unsubscribe();\n    this.layer.unsubscribe();\n    // neat. we're done.\n}\nBut I have ten other subscriptions!\nIn situations where your component has a lot of subscription logic to\nmaintain, there are more powerful ways of unsubscribing to many things at once.\nYou can create an RxJS Subscription object in your component, and call\nSubscription.add(conn) with your connection. There is a convenience parameter\non each of the DndService methods which will do this for you.\nimport { Subscription } from 'rxjs';\n\n// ...\n\nsubs = new Subscription();\n\nsource = this.dnd.dragSource({\n  // ...\n}, this.subs);\n\ntarget = this.dnd.dragSource({\n  // ...\n}, this.subs);\n\n// ...\n\nngOnInit() {\n    // subscribe to lots of things here\n    this.subs.add(myService.subscribe(...));\n    this.subs.add(myService.subscribe(...));\n    this.subs.add(myService.subscribe(...));\n    this.subs.add(myService.subscribe(...));\n}\nngOnDestroy() {\n  // This will unsubscribe everything, including source and target\n  this.subs.unsubscribe();\n}(It is not recommended to have a large number of drag sources and drop targets\nattached to a single component, especially not in a variably-sized array,\nsimply because that is poor component structure. Instead, consider creating a\ncomponent that handles a single piece of dragging logic, and use an *ngFor over\nthe whole component.)\nNext: Connecting to DOM.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide/2.-connecting-to-dom.html":{"url":"additional-documentation/guide/2.-connecting-to-dom.html","title":"additional-page - 2. Connecting to DOM","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nConnecting sources and targets to real DOM elements\nOnce you have created a connection, it is most useful when connected to a real\nDOM element.\nMaking a DOM element draggable\nThis means that events fired inside the element's bounding rectangle will start\na drag. Use DragSourceDirective to do this. It's as simple as:\ndrag mesource = this.dnd.dragSource('DRAGME', {\n  beginDrag: () => ({ name: 'Jones McFly' }),\n  // other DragSourceSpec methods\n});\n// constructor, unsubscribe, etcThen, investigate using\nDragSourceSpec\nto customise the behaviour.\nMaking a DOM element into a drop target\nThis means your element will react to items being hovered or dropped within its\nbounding rectangle.\ndrop on metarget = this.dnd.dropTarget('DRAGME', {\n  drop: monitor => {\n    console.log('dropped an item:', monitor.getItem()); // => { name: 'Jones McFly' }\n  },\n});\n// constructor, unsubscribe, etcThen, investigate using\nDropTargetSpec\nto customise the behaviour.\nDrag previews\nThis is a feature unique to the HTML5 backend. If you are using another\nbackend, you will need a Drag Layer (see below) to render anything that follows\nthe mouse.\nBy default, a static screenshot of the original [dragSource] element will form\na drag preview and follow the mouse around.\nUsing a different element as the preview source\nIf you want another element to be the source of the preview, you can use the\n[dragPreview]=\"source\" directive.\nIf you place a DragPreviewDirective on a different element than the\n[dragSource], and pass the same DragSource connection to it, the\npreview element will take over the job of posing for the preview screenshot.\nUsing a 'drag handle'\nThis is a common use of custom drag previews, where a box with a smaller handle\nwithin it is only draggable from the handle. This is useful for moving\ninteractive blocks of UI (e.g.  elements) around the screen, without\ntouching the inputs / selecting text / making unwanted changes.\n\nAttach [dragSource]=\"source\" to the handle.\nAttach [dragPreview]=\"source\" to the overall box being dragged.\nAs always, you may consider applying CSS cursor: move or cursor: grab or\nsimilar to the handle, to make sure users can discover what the handle is\nfor.\n\nUsing an image preview\n\nCreate an image element with const img = new Image(); img.src = \"...\";\nUse img.onload = () => { ... } to wait for it to load. Inside the onload\ncallback, run someDragSourceConnection.connectDragPreview(img).\n\nSee DragSource.connectDragPreview and DragPreviewOptions for options.\nNext: Monitoring State.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/guide/3.-monitoring-state.html":{"url":"additional-documentation/guide/3.-monitoring-state.html","title":"additional-page - 3. Monitoring State","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nMonitoring State\nHow to change your template depending on the drag state\n\nTake any connection object, like DropTarget\nCall .listen() with a function that returns what information you want to\nmonitor\nSave the resulting Observable to an instance variable in your component\nUse the observable via the | async pipe to render alternate content in\nyour template.\n\nFor example:\n\n  drop cats here\n.cat-target {\n  background: #eee;\n}\n.cat-target--hovering {\n  background: lightgoldenrodyellow;\n}target = this.dnd.dropTarget('CAT', {\n  drop: monitor => {\n    console.log('dropped a cat');\n  },\n});\n\n// this is a very useful combination on a drop target,\n// which expresses 'hovering over' + ('same type' + 'DropTargetSpec.canDrop returned true')\n// you almost always want to use the combination rather than isOver on its own\nhovering$ = this.target.listen(m => m.isOver() && m.canDrop());What can you listen to?\nEach type of connection gets a different set of information available on the\nmonitor. They are laid out in these interfaces:\n\nDragSourceMonitor\nDropTargetMonitor\nDragLayerMonitor\nAll three derive from MonitorBase\n\nOptimisation\nNote that all three monitors have very rapidly-changing information available on\nthem, such as the current viewport-mouse offset. The .listen() functions will\noptimise component updates for you. You don't want to:\n\nSubscribe to more properties than you need. This hinders performance.\nSubscribe to the entire monitor object. It will only fire once, and then\nnever again, because the monitor object itself is the same each time.\n\nThe implementation of listen() includes an implementation of RxJS'\ndistinctUntilChanged that also optimises for JS Objects with the same keys\nbut different values. The following two examples fire exactly as often:\nisDraggingPlain$ = this.source.listen(m => m.isDragging());\nisDraggingObj$ = this.source.listen(m => ({ isDragging: m.isDragging() }));This is helpful if you have a lot of properties to listen to and wish to\nreduce the number of | async pipes in your code, or if you want to copy\nsome react-dnd code.\nMaking decisions in the Spec based on current drag state\nThe other place you get access to a monitor is in the callbacks in each Spec.\nMonitors carry some information only relevant and usable inside these callbacks.\nThose methods are documented in the monitor interfaces, and particularly useful\nmethods are highlighted in each of the Spec callbacks, such as\nDropTargetSpec.drop.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/chess-tutorial.html":{"url":"additional-documentation/chess-tutorial.html","title":"additional-page - Chess Tutorial","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChess Tutorial\nIn this tutorial, we're building a tiny chess game, with one knight on the\nboard. It's an Angular-specific translation of the original react-dnd\ntutorial. The discussion about how to break down this game into\ncomponents is worth reading the original for. We will carry on implementing the\nthree components:\n\nKnightComponent, responsible for rendering one knight piece\nSquareComponent, just one black or white square on the board\nBoardComponent, 64 squares.\n\nThis tutorial assumes you are familiar with the basics of Angular (version 2+).\nIt also assumes you have read the Quickstart guide, and have attached the\nDndModule and the HTML5 backend. Complete source code is available on\nGitHub, in four commits: one, two,\nthree, four, the last of which is the finished\nproduct. You can play with a live demo.\nBasic chess visuals\nWe'll build the KnightComponent first. It is very simple, just a span with a Unicode\nknight character in it.\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-knight',\n  template: `♘`,\n  styles: [\n    `\n      span {\n        font-weight: 400;\n        font-size: 54px;\n        line-height: 70px;\n      }\n    `,\n  ],\n})\nexport class KnightComponent {}Add this component to your module's declarations section, and put\n somewhere on your page.\n\nNext, we will implement SquareComponent. It is responsible only for changing the colour\nof the background and foreground depending on a black input, and rendering\nwhatever was passed to it inside its tags. Make a SquareComponent, add it to\nyour module, and include the following very simple HTML template:\n\n  \nIn the body of the component class, add an input for whether the square should\nbe black or not:\n@Input() black: boolean;Then implement getStyle() by reading this property.\ngetStyle() {\n    return this.black\n        ? { backgroundColor: 'black', color: 'white' }\n        : { backgroundColor: 'white', color: 'black' }\n}Note that by attaching these styles directly via [ngStyle], they are not\naffected by Angular's view encapsulation, so color will apply to any child\ncomponents as well. You could achieve the same by using classes and CSS and\n::ng-deep or turning view encapsulation off, but [ngStyle] is good enough\nfor us.\nThen, we want SquareComponent to take up all the space available to it. This\nway, Square can be arbitrarily large, and we don't have to be concerned with how\nbig the whole board is going to be. Include the following in a styles block,\nor a linked CSS file.\n:host,\ndiv {\n  display: block;\n  height: 100%;\n  width: 100%;\n  text-align: center;\n}At this point, you can render one square with a knight in it, like so:\n\n  \n\nIf you're paying attention, you'll notice that height: 100% doesn't really\nmean anything as none of the parent divs have a height to be 100% of, but it\nwill make sense later when we put the Square in a div that has an absolute\nheight.\nThen, let's build the board. Start by building out a component that just renders\none square.\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-board',\n  template: `\n    \n      \n        \n      \n    \n  `,\n})\nexport class BoardComponent {}Now, we need to render 64 of them. We will need an *ngFor, but Angular isn't\nvery good at for loops, so we have to make an array of 64 items.\n\n  \n    \n  \n// ...\nexport class BoardComponent {\n  sixtyFour = new Array(64).fill(0).map((_, i) => i);\n}\nThen, you just have a lot of black squares in a vertical list. Not very chess-y.\nTo make it an 8x8 grid, we are going to wrap them all in a , and use the cool new CSS feature, CSS Grid. Make sure you are\nusing a modern browser. Apply this style to the wrapping .board:\n.board {\n  width: 100%;\n  height: 100%;\n  border: 1px solid black;\n  display: grid;\n  grid-template-columns: repeat(8, 12.5%);\n  grid-template-rows: repeat(8, 12.5%);\n}For brevity's sake you could just set .board to a fixed width and height\nof 560px. I added a ContainerComponent, just to specify that size, to keep\nthe board independent of where it will be placed. At this point, you will have\nan 8x8 board, but it still doesn't quite look like chess.\n\nMaking the chessboard pattern and placing one knight on the board\nWe're going to need a way to express coordinates on the board. Define a new\ninterface, to hold x and y coordinates.\nexport interface Coord {\n  x: number;\n  y: number;\n}Save it in a new file, coord.ts, and import it into your Board component file.\nThen, we need to convert [0..63] (the indices of the *ngFor) to Coord\nobjects.\nexport class Board {\n    // ...\n    xy(i): Coord {\n      return {\n          x: i % 8,\n          y: Math.floor(i / 8)\n      }\n    }\n}\nYou can then quite easily go from Coord to whether the square is black or not:\n    // ...\n    isBlack({ x, y }: Coord) {\n        return (x + y) % 2 === 1;\n    }Then, pass the result to each SquareComponent, and render only one KnightComponent in the top\nleft:\n\n  \n    \n  \nAnd look at that, we have a chess board with one knight.\n\nMaking the knight move around\n\nAt this point, your code should look like this commit. You can\nstart fresh from there if you want.\n\nWe can clearly represent the position of a knight in one Coord object. You\ncould store this on the BoardComponent itself:\n knightPosition: Coord = { x: 2, y: 5 };But we're going to want to read this elsewhere and drive the game logic from it,\nand we don't want all the game logic to be trapped inside the BoardComponent.\nSo, create a GameService, and represent the changing position of the knight\nwith an RxJS BehaviorSubject. This is an ultra-lightweight way of\nbuilding an @ngrx-style Store without any boilerplate. It allows us to\n'broadcast' updates to the knight's position to any interested components.\nLike any Subject, BehaviourSubject can be used as an Observable, and\ncomponents can subscribe to it with the | async pipe. But unlike a regular\nSubject, it can also have an initial value, and will replay the most recent\nvalue to any new subscribers. This is exactly what we want.\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Coord } from './coord';\n\n@Injectable()\nexport class GameService {\n  knightPosition$ = new BehaviorSubject({ x: 2, y: 5 });\n\n  moveKnight(to: Coord) {\n    this.knightPosition$.next(to);\n  }\n}As you can see, this is a very simple service. Inject it into your\nBoardComponent, and let's put the Knight where the GameService\nsays it should go.\n\nknightPosition$ = this.game.knightPosition$;\nconstructor(private game: GameService) { }This works, but it's very hard to read. A better solution would be to put the\nentire *ngFor section in the scope of one subscription. You can do that\nwithout introducing a redundant , by using  and a fancy\ntrick: since knightPosition$|async is always truthy, you can put it in an\n*ngIf and give the result a name using the *ngIf=\"AAA as BBB\" syntax. Here's\nthe entire template:\n\n  \n    \n      \n         \n      \n    \n  \nThe resulting template is much clearer.\nNow that we have a knightPosition$ and even a GameService.moveKnight()\nfunction, we can hook up a click event on each  to move the knight\naround the board. We're going to remove it later, so just throw it in the\nBoardComponent:\nhandleSquareClick(pos: Coord) {\n  this.game.moveKnight(pos);\n}Click around, and your noble KnightComponent will follow, even though he is breaking\nthe rules. So, let's add the rules. Amend the GameService to include\na canMoveKnight function, based on the current position and a prospective\nposition. You can store the currentPosition by subscribing internally to\nknightPosition$ and writing out each new value into an instance variable.\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { Coord } from './coord';\n\n@Injectable()\nexport class GameService {\n  knightPosition$ = new BehaviorSubject({ x: 2, y: 5 });\n  currentPosition: Coord;\n\n  constructor() {\n    this.knightPosition$.subscribe(kp => {\n      this.currentPosition = kp;\n    });\n  }\n\n  moveKnight(to: Coord) {\n    this.knightPosition$.next(to);\n  }\n\n  canMoveKnight(to: Coord) {\n    const { x, y } = this.currentPosition;\n    const dx = to.x - x;\n    const dy = to.y - y;\n\n    return (Math.abs(dx) === 2 && Math.abs(dy) === 1) || (Math.abs(dx) === 1 && Math.abs(dy) === 2);\n  }\n}Amend handleSquareClick to check the rules before executing the move:\nhandleSquareClick(pos: Coord) {\n  if (this.game.canMoveKnight(pos)) {\n    this.game.moveKnight(pos);\n  }\n}And voilà, your knight won't execute an illegal move. We will be replacing this\nclick handler in just a moment, but we have separated the game logic out, so we\ncan reuse those two functions.\nImplementing drag and drop\n\nAt this point, your code should be look like this commit.\n\nTake a moment to think about what we have to work with. We have:\n\nA KnightComponent which we want to be able to drag,\nMany SquareComponents on which he could be dropped,\nA way to express that state change (GameService.moveKnight),\nAnd a way to compute where we can drop him (GameService.canMoveKnight).\n\nOur strategy for implementing drag and drop is this:\n\nMake the knight draggable\nTurn all the squares into drop targets\nOnly allow drops into squares where canMoveKnight returns true\nOn each successful drop, call moveKnight, and Angular will re-render with\nthe new state.\nAdd some extra visuals to guide the interaction\n\nIf you have used other drag and drop libraries, this may seem a bit weird --\nwhat happens to the Knight that we're dragging after we drop him? The answer is,\nhe disappears. After step 1, we will have a knight you can pick up, but nothing\ninteresting will happen when we let go, except that the preview will vanish. We\nare going to do steps 3 and 4 on the drop targets, which are notified when you\ndrop something on them.\nPart 1. Make the knight draggable\nFirst, we need a type to describe what we're dragging, so that the squares can\nlisten for knights floating above them. Store a constant string \"KNIGHT\" in\na new file. This is better than typing the same string over and over, and serves\nas a single place where all your different chess piece types are defined.\n// constants.ts\nexport const ItemTypes = {\n  KNIGHT: 'KNIGHT',\n};Then, make your KnightComponent into a drag source.\n\nInject DndService into your KnightComponent\nCreate a dead simple drag source which emits ItemTypes.KNIGHT, and a simple\n{} to represent what's being dragged. We don't need any more information\nthan that, but if you were doing >1 piece, you would have to specify which\nknight was being dragged. This is where you'd do it.\nAttach the drag source to the Knight's DOM element.\nIn ngOnDestroy, unsubscribe the drag source.\n\nHere's all four in one go:\nimport { Component } from '@angular/core';\nimport { DndService } from '@ng-dnd/core';\nimport { ItemTypes } from './constants';\n\n@Component({\n  selector: 'app-knight',\n                   // step 3\n  template: `♘`,\n  styles: [\n    `\n      span {\n        font-weight: 700;\n        font-size: 54px;\n      }\n    `,\n  ],\n})\nexport class KnightComponent {\n  // step 2\n  knightSource = this.dnd.dragSource(ItemTypes.KNIGHT, {\n    beginDrag: () => ({}),\n  });\n\n  // step 1\n  constructor(private dnd: DndService) {}\n\n  // step 4\n  ngOnDestroy() {\n    this.knightSource.unsubscribe();\n  }\n}Try dragging your little knight, and you'll find that you can. But the\ninteraction is slightly confusing - you can't tell at a glance that the knight\nis conceptually in-flight, it just looks like there are two knights. So let's\nlisten to whether we are dragging the knight, and make the stationary one look\ndifferent while we are.\n\nUse the DragSource.listen and DragSourceMonitor.isDragging methods to\nget an observable isDragging$ on your KnightComponent.\nUse that observable in your template to change styles\n\n// component\n// (this is an Observable)\nisDragging$ = this.knightSource.listen(monitor => monitor.isDragging());\n♘/* in the style block */\n.dragging {\n  opacity: 0.25;\n}Now, the knight on the board will be a bit transparent when you've picked it up.\nYou could set it to opacity: 0, but in chess, players like to know where the\npiece came from. @ng-dnd makes no assumptions about how to render\nany elements, so you can always customise their appearance at any stage of the\ndrag and drop process.\nPart 2: Make the squares into drop targets\nBecause canMoveKnight has to be computed once per square, each square is going\nto have to know where it is on the board. However, the SquareComponent is\nperfectly good at what it does. We don't want to ruin a good thing. Let's wrap\nit with another component, BoardSquareComponent, that will handle the drag and drop,\nand leave the black and white rendering to SquareComponent. This is a basic wrapper\nwhich preserves the size of the underlying squares:\nimport { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-board-square',\n  template: `\n    \n      \n        \n      \n    \n  `,\n  styles: [\n    `\n      :host,\n      .wrapper {\n        display: block;\n        position: relative;\n        width: 100%;\n        height: 100%;\n      }\n    `,\n  ],\n})\nexport class BoardSquareComponent {\n  @Input() position: Coord;\n  get black() {\n    const { x, y } = this.position;\n    return (x + y) % 2 === 1;\n  }\n}Add it to your module, and replace the  in the BoardComponent\ntemplate with this:\n\n  \nThen, we're going to add a drop target to BoardSquareComponent and attach it\nto that wrapper div. It's very similar to the drag source.\n\nInject DndService\nCreate a drop target\nAttach it to the DOM\nUnsubscribe it in ngOnDestroy.\n\nimport { Component, Input } from '@angular/core';\nimport { DndService } from '@ng-dnd/core';\nimport { ItemTypes } from './constants';\n\n@Component({\n  selector: 'app-board-square',\n  template: `\n                         \n    \n      \n        \n      \n    \n  `,\n  styles: [\n    `\n      :host,\n      .wrapper {\n        display: block;\n        position: relative;\n        width: 100%;\n        height: 100%;\n      }\n    `,\n  ],\n})\nexport class BoardSquareComponent {\n  @Input() position: Coord;\n  get black() {\n    const { x, y } = this.position;\n    return (x + y) % 2 === 1;\n  }\n\n  // step 2\n  target = this.dnd.dropTarget(ItemTypes.KNIGHT, {});\n\n  // step 1\n  constructor(private dnd: DndService) {}\n\n  // step 4\n  ngOnDestroy() {\n    this.target.unsubscribe();\n  }\n}Parts 3 and 4: make the knight move around on drop\nNext up is to incorporate the game logic, and to actually move the knight. We're\ngoing to use two hooks in the drop target: DropTargetSpec.canDrop and\nDropTargetSpec.drop. We have already done the heavy lifting for both in\nGameService. Inject GameService in the constructor, and incorporate its\nmethods.\ntarget = this.dnd.dropTarget(ItemTypes.KNIGHT, {\n    canDrop: monitor => {\n        return this.game.canMoveKnight(this.position);\n    },\n    drop: monitor => {\n        this.game.moveKnight(this.position);\n    }\n});\n\nconstructor(private dnd: DndService, private gme: GameService) {}Now you should be able to drag your knight around the board!\nPart 5: Extra visuals\nWe have some guidance already about where you can drop a knight. The mouse\ncursor gets a different icon depending on whether you can or not. But usually,\nthis is not enough of an indicator. Good UI means making difficult things\nobvious and learnable. Someone who has never seen a knight should be able to\nfigure out where one can go.\nIn that spirit, we will change the colour of the squares while dragging,\ndepending on whether they represent a valid move, and colour the square you're\nhovering over either red or green depending on whether dropping would result in\na move.\nThe procedure is almost identical to what we did for the Knight earlier on.\n\nUse the DropTarget.listen, DropTargetMonitor.canDrop and\nDropTargetMonitor.isOver methods to observe changes in drag state\nUse observables in your template to change styles on an overlay div.\n\n// We are assuming RxJS 5.5+ here, but you can use plain Observable.map\nimport { map } from 'rxjs/operators';\n\n// template:\n  \n    \n  \n  \nexport class BoardSquareComponent {\n  // ...\n  target = this.dnd.dropTarget(ItemTypes.KNIGHT, {\n    // ...\n  });\n\n  collected$ = this.target.listen(m => ({\n    canDrop: m.canDrop(),\n    isOver: m.isOver(),\n  }));\n\n  showOverlay$ = this.collected$.pipe(map(c => c.isOver || c.canDrop));\n\n  overlayStyle$ = this.collected$.pipe(\n    map(coll => {\n      let { canDrop, isOver } = coll;\n      let bg: string = 'rgba(0,0,0,0)';\n      if (canDrop && isOver) {\n        bg = 'green';\n      } else if (canDrop && !isOver) {\n        bg = 'yellow';\n      } else if (!canDrop && isOver) {\n        bg = 'red';\n      }\n      return {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        height: '100%',\n        width: '100%',\n        zIndex: 1,\n        opacity: 0.5,\n        backgroundColor: bg,\n      };\n    })\n  );\n\n  // ...\n}Here's what it looks like:\n\nLastly, we're going to customize the drag preview (that little knight that\nfollows the mouse around). @ng-dnd has some very powerful ways to\ncustomize this, but we're going to use a simple image. It's quite simple:\n\nCreate an Image\nWait for it to load\nConnect it to the knightSource as a drag preview\n\nWe can do this in just a few lines.\n// ...\nexport class KnightComponent {\n  // ...\n\n  ngOnInit() {\n    const img = new Image();\n    img.src = // ... long 'data:image/png;base64' url\n      // regular 'https://' URLs work here too\n      img.onload = () => this.knightSource.connectDragPreview(img);\n  }\n}For that long URL, see this file.\nThen we get a funky horse as our preview.\n\nHave a go with the live demo here.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/translating-react-code.html":{"url":"additional-documentation/translating-react-code.html","title":"additional-page - Translating React Code","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTranslating React Code\nThere are many code examples and libraries on the web written for react-dnd,\nthe most important of which is the actual react-dnd\ndocumentation. In the\ninterest of making them useful or at least understandable, this library presents\na fairly similar API to the original. There are, of course, some differences\nmandated by the style and limitations of React and Angular. We will illustrate\nthis with the react-dnd DragSource compared to @ng-dnd's\nDndService.dragSource(). Here are the original API\ndocs on\nDragSource; the following is a small but complete example for a quick\nreference. If you know how to use react-dnd already, then this should show you\nmost of it. If you don't know react-dnd, this will help you read the example code demos in the react-dnd documentation.\nHere's a basic example in React:\nlet itemSourceSpec = {\n  beginDrag: (props, monitor) => {\n    return { someProperty: props.someProperty };\n  },\n  endDrag: (props, monitor, component) => {\n    if (monitor.didDrop()) {\n      component.fireAction(monitor.getItem());\n    }\n  },\n};\n@DragSource('ITEM', itemSourceSpec, (connect, monitor) => ({\n  connectDragSource: connect.connectDragSource(),\n  isDragging: monitor.isDragging(),\n}))\nexport class MyComponent extends React.Component {\n  fireAction() {\n    /* ... */\n  }\n  render() {\n    const { someProperty, isDragging } = this.props;\n    return connectDragSource(\n      \n        {someProperty}\n        {isDragging ? 'I am being dragged now' : null}\n      \n    );\n  }\n}And here's the Angular translation:\n@Component({\n  template: `\n    \n      {{ someProperty }}\n       I am being dragged now \n    \n  `,\n})\nexport class MyComponent {\n  @Input() someProperty: string;\n  itemSource = dnd.dragSource('ITEM', {\n    beginDrag: monitor => {\n      return { someProperty: this.someProperty };\n    },\n    endDrag: monitor => {\n      if (monitor.didDrop()) {\n        this.fireAction(monitor.getItem());\n      }\n    },\n  });\n  collected$ = this.itemSource.listen(monitor => ({\n    isDragging: monitor.isDragging(),\n  }));\n  constructor(private dnd: DndService) {}\n  fireAction(item) {\n    /* ... */\n  }\n  ngOnDestroy() {\n    this.itemSource.destroy();\n  }\n}As you can see, the two are very similar. You should be able to take most\nReact/react-dnd examples and translate them quite directly into Angular. You\ncan almost copy and paste some parts.\n1. Biggest difference: Connections instead of Higher-Order Components\nThere is a React concept of 'props', similar to Input() in Angular. The\nprimary difference relevant to us is that in React you can create a 'wrapper' or\n'higher-order' component that will pass all of its props to the one it is\n'wrapping' or 'decorating', with extra behaviour or new props added. This is how\nreact-dnd works: wrap your component with @DragSource(type, spec, collect: (connect, monitor) => Object), and the output of the collect function is\ninjected into your component's props.\nIn Angular, we run everything inside your component, using methods on an\ninjected DndService to create connections. Connections are a go-between\nfor subscribing to the global drag state and can be connected to DOM\nelements. This difference is typical of the React Way and the Angular Way. You\ncan create more than one connection for a component, to accomplish the same\nthing as composing multiple decorators in react-dnd.\nThere are five other ways this approach makes for slightly different-looking but\nvery similar-functioning code.\n2. You must destroy the connection object when you are done with it.\nIn React, this is managed by the wrapper component. In Angular, you have to do\nit yourself. See ConnectionBase.unsubscribe.\n3. No props or component arguments in the spec callbacks\nThere are no props in Angular, as discussed above. Instead, all inputs to a component\nor properties relevant to the template are declared on the component class.\nTherefore, using this is appropriate instead. That also makes component\nmoot, since it would also refer to this. Therefore, all of the callbacks on the\ntwo *Spec interfaces have only monitor as an argument.\nOne thing to be aware of is that to access this in an function you pass\nelsewhere, you must use Arrow notation: (arrow) => this.notation; for your\nspec callbacks.\n4. Information about current drag state comes through an Observable\nIn react-dnd the collect((props, monitor) => {}) function supplies the\ncomponent props 'from above'. In Angular (here, DragSource.listen), the\nlibrary gives you an Observable you can subscribe to in your template. The\nexample above creates an Object { ... } and subscribes to it all in one go\n(the internals make this efficient), but you are free to do listen(m => m.isDragging()), with one subscription for each interesting value. You might\ncombine information from two different connections using\nObservable.combineLatest, for example.\nI found the terms connect and collect far too similar and confusing, so\nI renamed collect to listen.\n5. connectDragSource() (etc.) functions vs Angular directives\nIn the example above, connect.connectDragSource() returns a function that will\nlink up a particular part of the JSX template's DOM to the wrapper component. To\naccomplish the same thing in Angular we must connect some DOM from the template\nto a Connection object. The Angular Way to do this is with a directive,\nwhich connects to the DOM via its injected ElementRef. The Angular translation\nabove uses [dragSource]=\"itemSource\" on the same part of the template as the\nReact code does.\nSome React examples will have two different drag sources + associated connectors\n(on different DOM elements), or one source and one connectDragPreview. Angular\ncan do both patterns with directives, because each directive is linked to one Connection.\n6. Can't supply a dynamic type via a (props) => props.type callback, use setType instead\nImagine you want to make a component draggable based on type(s) specified on the\ncomponent inputs.\nreact-dnd allows strings and ES6 Symbols in the type argument. But you can\nalso pass a function of (props) => string|symbol; in this way, your item\ntypes can depend on the inputs to your component, and even change over time when\nthe props change. It's not a plain asynchronous callback like the rest of the\nspec, it is called when the props change on the decorating component, before any\nasynchronous drag operations start. Angular doesn't have a way for arbitrary\nobjects to listen to ngOnChanges(), so we have to do it manually.\nYou can supply a default type, or null, and update it in later as the\n@Input() property is populated. If you supply null, @ng-dnd will\ndefer connecting the DOM and the subscription to the monitor until this is\ndone. See DragSource.setType for more information.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/testing.html":{"url":"additional-documentation/testing.html","title":"additional-page - Testing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTesting\nUsage with Jest\nSee The React DnD testing\nguide for details about\nhow to use dnd-core and react-dnd-test-backend with Jest. In particular, you\nwill need to configure the moduleNameMapper as described there.\nTesting Components in Isolation\nThe Angular way of supplying drag state to components is not as easily testable\nas the React way. Currently it is not easy to isolate a component's rendering\nfrom the drag sources, drop targets and drag layers it listens to.\nThe Test Backend\nReact DnD offers a test backend that does not require the DOM, and offers an\nAPI for easy simulation of drag and drop events. This is useful for testing an\nentire drag and drop interaction. (Imagine trying to construct the exact mouse\nevents that represent a drag, just to do basic tests!) It is also useful as a\nlightweight no-op backend if you do not need to test the drag and drop\ninteraction.\nInstall it with:\nyarn add -D react-dnd-test-backendExample usage (example component defined below):\n// Import the test backend\nimport { createTestBackend, TestBackend } from 'react-dnd-test-backend';\n// We will need to find the DragDropManager to access the backend through\n// dependency injection\nimport { DndModule, DRAG_DROP_MANAGER } from '@ng-dnd/core';\n\nimport { async, ComponentFixture, TestBed } from '@angular/core/testing';\nimport { By } from '@angular/platform-browser';\n\ndescribe(MyComponent.name, () => {\n  let component: MyComponent;\n  let fixture: ComponentFixture;\n\n  // Use this backend to drive drag and drop interactions\n  let backend: TestBackend;\n\n  // We will store the handler ID for each, to pass to the test backend.\n  let source: any;\n  let target: any;\n\n  // MyComponent should render differently while dragging\n  const draggingClassApplied = () => {\n    return fixture.debugElement.query(By.css('.dragging')) != null;\n  };\n\n  beforeEach(async(() => {\n    TestBed.configureTestingModule({\n      imports: [\n        // supply the test backend when creating the testing module\n        DndModule.forRoot({ backend: createTestBackend }),\n      ],\n      declarations: [MyComponent],\n    });\n  }));\n\n  beforeEach(() => {\n    // grab the manager\n    const manager = TestBed.get(DRAG_DROP_MANAGER);\n    // grab the backend off the manager\n    backend = manager.getBackend();\n    fixture = TestBed.createComponent(MyComponent);\n    component = fixture.componentInstance;\n    // the source and target handler IDs are available after change\n    // detection\n    fixture.detectChanges();\n    source = component.source.getHandlerId();\n    target = component.target.getHandlerId();\n  });\n\n  it('should drag and then drop', () => {\n    // pick up the drag source\n    backend.simulateBeginDrag([source]);\n\n    // check that it rendered differently\n    fixture.detectChanges();\n    expect(draggingClassApplied()).toBeTruthy();\n\n    // hover over the target\n    backend.simulateHover([target]);\n    // drop over the most recently hovered target(s)\n    backend.simulateDrop();\n    // complete the interaction\n    backend.simulateEndDrag();\n\n    fixture.detectChanges();\n    expect(draggingClassApplied()).toBeFalsy();\n  });\n});import { Component } from '@angular/core';\nimport { DndService } from '@ng-dnd/core';\n@Component({\n  template: `\n    \n    \n  `,\n})\nclass MyComponent {\n  source = this.dnd.dragSource('TEST', {\n    beginDrag: () => ({}),\n  });\n  target = this.dnd.dropTarget('TEST', {});\n  isDragging$ = this.source.listen(m => m.isDragging());\n  constructor(private dnd: DndService) {}\n  ngOnDestroy() {\n    this.source.unsubscribe();\n    this.target.unsubscribe();\n  }\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
